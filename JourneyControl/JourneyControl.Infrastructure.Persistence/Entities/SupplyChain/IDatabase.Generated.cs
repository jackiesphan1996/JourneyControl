// Licence file C:\Users\hoang.phan\Documents\ReversePOCO.txt not found.
// Please obtain your licence file at www.ReversePOCO.co.uk, and place it in your documents folder shown above.
// Defaulting to Trial version.
// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace JourneyControl.Infrastructure.Persistence.Entities.SupplyChain
{
    #region POCO classes

    // AnimalQuarantines
    public class AnimalQuarantine
    {
        public int AnimalQuarantineId { get; set; } // AnimalQuarantineID (Primary key)
        public string QuarantineCode { get; set; } // QuarantineCode (length: 50)
        public int EmployeeId { get; set; } // EmployeeID
        public string SupplierId { get; set; } // SupplierID (length: 50)
        public DateTime? CheckDay { get; set; } // CheckDay
        public DateTime? CheckTime { get; set; } // CheckTime
        public byte? OperationCategoryId { get; set; } // OperationCategoryID
        public int? CustomerId { get; set; } // CustomerID
        public string Notes { get; set; } // Notes (length: 150)
        public string CreatedBy { get; set; } // CreatedBy (length: 20)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public bool? AnimalQuarantineConfirmed { get; set; } // AnimalQuarantineConfirmed
        public byte[] Ts { get; set; } // ts
        public string TruckNumber { get; set; } // TruckNumber (length: 50)
        public string OrderText { get; set; } // OrderText (length: 10)
        public string Category { get; set; } // Category (length: 50)

        public AnimalQuarantine()
        {
            CreatedTime = DateTime.Now;
        }
    }

    // AnimalQuarantineDetails
    public class AnimalQuarantineDetail
    {
        public int AnimalQuarantineDetailId { get; set; } // AnimalQuarantineDetailID (Primary key)
        public int AnimalQuarantineId { get; set; } // AnimalQuarantineID
        public int? TotalCartons { get; set; } // TotalCartons
        public double? TotalWeight { get; set; } // TotalWeight
        public string PackingUnit { get; set; } // PackingUnit (length: 50)
        public string Uses { get; set; } // Uses (length: 50)
        public string CountryOfOrigin { get; set; } // CountryOfOrigin (length: 50)
        public int StoreId { get; set; } // StoreID
        public DateTime? ProductionDate { get; set; } // ProductionDate
        public string NameRowPublic { get; set; } // NameRowPublic (length: 150)
        public string NameRow { get; set; } // NameRow (length: 250)
        public string OrderNumber { get; set; } // OrderNumber (length: 16)
        public string CreatedBy { get; set; } // CreatedBy (length: 20)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public byte[] Ts { get; set; } // ts
        public bool? CheckGroupName { get; set; } // CheckGroupName
        public int? ProductId { get; set; } // ProductID
        public bool? CheckDetached { get; set; } // CheckDetached
        public string Temperature { get; set; } // Temperature (length: 10)

        public AnimalQuarantineDetail()
        {
            CreatedTime = DateTime.Now;
            CheckDetached = false;
        }
    }

    // AnimalQuarantineGroupRows
    public class AnimalQuarantineGroupRow
    {
        public int GroupRowId { get; set; } // GroupRowID (Primary key)
        public string StoreName { get; set; } // StoreName (length: 250)
        public string NameRow { get; set; } // NameRow (length: 150)
        public string TotalCartons { get; set; } // TotalCartons (length: 50)
        public string TotalWeight { get; set; } // TotalWeight (length: 50)
        public string PackingUnit { get; set; } // PackingUnit (length: 50)
        public DateTime? Checkday { get; set; } // Checkday
        public string CustomerName { get; set; } // CustomerName (length: 50)
        public string SupplierCategoryName { get; set; } // SupplierCategoryName (length: 50)
        public string Uses { get; set; } // Uses (length: 50)
        public string NameRowPublic { get; set; } // NameRowPublic (length: 150)
    }

    // AnimalQuarantineProductGroups
    public class AnimalQuarantineProductGroup
    {
        public int AnimalQuarantineGroupRowId { get; set; } // AnimalQuarantineGroupRowID (Primary key)
        public string StoreName { get; set; } // StoreName (length: 250)
        public string NameRow { get; set; } // NameRow (length: 150)
        public string PackingUnit { get; set; } // PackingUnit (length: 50)
        public string CustomerName { get; set; } // CustomerName (length: 50)
        public string SupplierCategoryName { get; set; } // SupplierCategoryName (length: 50)
        public string TotalCartons { get; set; } // TotalCartons (length: 50)
        public string TotalWeight { get; set; } // TotalWeight (length: 50)
        public DateTime? Checkday { get; set; } // Checkday
        public string NameRowPublic { get; set; } // NameRowPublic (length: 150)
        public string Uses { get; set; } // Uses (length: 50)
        public int? AnimalQuarantineId { get; set; } // AnimalQuarantineID
        public string QuarantineCode { get; set; } // QuarantineCode (length: 50)
    }

    // Baskets
    public class Basket
    {
        public int BasketId { get; set; } // BasketID (Primary key)
        public string BasketNumber { get; set; } // BasketNumber (length: 30)
        public string BasketName { get; set; } // BasketName (length: 50)
        public string BasketNameVietnamese { get; set; } // BasketNameVietnamese (length: 50)
        public string CreatedBy { get; set; } // CreatedBy (length: 25)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public int? CustomerId { get; set; } // CustomerID
        public string BasketRemark { get; set; } // BasketRemark (length: 50)
        public float? BasketVolume { get; set; } // BasketVolume
        public bool? Active { get; set; } // Active
        public byte[] Ts { get; set; } // ts
        public double? BasketWeight { get; set; } // BasketWeight
        public bool? IsShow { get; set; } // IsShow
        public byte? Sequence { get; set; } // Sequence
        public decimal? Cbm { get; set; } // CBM

        public Basket()
        {
            CreatedTime = DateTime.Now;
            Active = true;
            IsShow = true;
        }
    }

    // BasketMovements
    public class BasketMovement
    {
        public long BasketMovementId { get; set; } // BasketMovementID (Primary key)
        public string BasketMovementNumber { get; set; } // BasketMovementNumber (length: 20)
        public string CreatedBy { get; set; } // CreatedBy (length: 25)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public DateTime BasketMovementDate { get; set; } // BasketMovementDate
        public string BasketMovementRemark { get; set; } // BasketMovementRemark (length: 250)
        public string FromWhere { get; set; } // FromWhere (length: 25)
        public string ToWhere { get; set; } // ToWhere (length: 25)
        public string TruckNumber { get; set; } // TruckNumber (length: 15)
        public string TruckDriverName { get; set; } // TruckDriverName (length: 50)
        public float? TruckTemp { get; set; } // TruckTemp
        public DateTime? StartTime { get; set; } // StartTime
        public DateTime? EndTime { get; set; } // EndTime
        public bool Confirmed { get; set; } // Confirmed
        public string WorkerName { get; set; } // WorkerName (length: 30)
        public byte[] Ts { get; set; } // ts
        public string BasketMovementType { get; set; } // BasketMovementType (length: 30)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 200)
        public bool BasketReceivedConfirmed { get; set; } // BasketReceivedConfirmed
        public string BasketReceivedBy { get; set; } // BasketReceivedBy (length: 20)
        public DateTime? BasketReceivedConfirmedTime { get; set; } // BasketReceivedConfirmedTime
        public string OrderNumber { get; set; } // OrderNumber (length: 50)
        public int? Tmpfrom { get; set; } // Tmpfrom
        public int? Tmpto { get; set; } // Tmpto
        public int? Lock { get; set; } // Lock
        public string ReferenceNumber { get; set; } // ReferenceNumber (length: 15)
        public DateTime? BasketReceivedDate { get; set; } // BasketReceivedDate
        public bool? IsReturn { get; set; } // IsReturn
        public int CustomerId { get; set; } // CustomerID

        public BasketMovement()
        {
            CreatedTime = DateTime.Now;
            Confirmed = false;
            BasketReceivedConfirmed = false;
            Lock = 0;
            IsReturn = false;
        }
    }

    // BasketMovementDetails
    public class BasketMovementDetail
    {
        public long BasketMovementDetailId { get; set; } // BasketMovementDetailID (Primary key)
        public long BasketMovementId { get; set; } // BasketMovementID
        public int BasketId { get; set; } // BasketID
        public string CreatedBy { get; set; } // CreatedBy (length: 25)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public int? Quantity { get; set; } // Quantity
        public int? QuantityConfirm { get; set; } // QuantityConfirm
        public int? QuantityReturn { get; set; } // QuantityReturn
        public int? QuantityReturnConfirm { get; set; } // QuantityReturnConfirm
        public int? QuantityBad { get; set; } // QuantityBad
        public int? QuantityConfirmBad { get; set; } // QuantityConfirmBad
        public int? QuantityReturnBad { get; set; } // QuantityReturnBad
        public int? QuantityReturnConfirmBad { get; set; } // QuantityReturnConfirmBad
        public string Remark { get; set; } // Remark (length: 200)
        public byte[] Ts { get; set; } // ts
        public bool? Damaged { get; set; } // Damaged
        public bool? CheckDelete { get; set; } // CheckDelete
        public string UpdatedBy { get; set; } // UpdatedBy (length: 25)
        public DateTime? UpdatedTime { get; set; } // UpdatedTime
        public byte? Status { get; set; } // Status
        public int? BasketMovementDetailIdMaster { get; set; } // BasketMovementDetailIDMaster

        public BasketMovementDetail()
        {
            CreatedTime = DateTime.Now;
            Quantity = 0;
            QuantityConfirm = 0;
            QuantityReturn = 0;
            QuantityBad = 0;
            QuantityConfirmBad = 0;
            QuantityReturnBad = 0;
            QuantityReturnConfirmBad = 0;
            Damaged = false;
            CheckDelete = false;
            UpdatedTime = DateTime.Now;
            Status = 0;
        }
    }

    // BasketStoreStockAllowance
    public class BasketStoreStockAllowance
    {
        public int BasketStoreStockAllowanceId { get; set; } // BasketStoreStockAllowanceID (Primary key)
        public int BasketId { get; set; } // BasketID
        public string StoreId { get; set; } // StoreID (length: 50)
        public int? StockMax { get; set; } // StockMax
        public string CreatedBy { get; set; } // CreatedBy (length: 20)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public string Remark { get; set; } // Remark (length: 50)
        public string StoreNumber { get; set; } // StoreNumber (length: 50)

        public BasketStoreStockAllowance()
        {
            CreatedTime = DateTime.Now;
        }
    }

    // CurrentBaskets
    public class CurrentBasket
    {
        public int CurrentBasketId { get; set; } // CurrentBasketID (Primary key)
        public string StoreNumber { get; set; } // StoreNumber (length: 50)
        public int? BasketId { get; set; } // BasketID
        public int? Quantity { get; set; } // Quantity
        public DateTime? Date { get; set; } // Date
        public string Remark { get; set; } // Remark (length: 200)
    }

    // DataUpdatedHistories
    public class DataUpdatedHistory
    {
        public int DataUpdatedHistoryId { get; set; } // DataUpdatedHistoryID (Primary key)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 25)
        public DateTime UpdatedTime { get; set; } // UpdatedTime
        public int DataId { get; set; } // DataID
        public string OrderType { get; set; } // OrderType (length: 2)
        public string IpAddress { get; set; } // IPAddress (length: 50)
        public string Action { get; set; } // Action (length: 50)
        public string StoredPro { get; set; } // StoredPro (length: 80)

        public DataUpdatedHistory()
        {
            UpdatedTime = DateTime.Now;
        }
    }

    // DepartmentsVeterinarys
    public class DepartmentsVeterinary
    {
        public int DepartmentsVeterinaryId { get; set; } // DepartmentsVeterinaryID (Primary key)
        public string DepartmentsVeterinaryName { get; set; } // DepartmentsVeterinaryName (length: 250)
    }

    // EDIBookings
    public class EdiBooking
    {
        public string SupplierNumber { get; set; } // SUPPLIER_NUMBER (length: 30)
        public string SupplierName { get; set; } // SUPPLIER_NAME (length: 100)
        public string PoNo { get; set; } // PO_NO (length: 50)
        public DateTime? WhDeliveryDate { get; set; } // WH_DELIVERY_DATE
        public string ProductNumber { get; set; } // PRODUCT_NUMBER (length: 30)
        public string ProductName { get; set; } // PRODUCT_NAME (length: 100)
        public string StoreNo { get; set; } // STORE_NO (length: 25)
        public string StoreName { get; set; } // STORE_NAME (length: 70)
        public string SoNo { get; set; } // SO_NO (length: 50)
        public DateTime? OrderDate { get; set; } // ORDER_DATE
        public string Category { get; set; } // CATEGORY (length: 30)
        public string Temperature { get; set; } // TEMPERATURE (length: 50)
        public int? Carton { get; set; } // CARTON
        public decimal? Weights { get; set; } // WEIGHTS
        public decimal? Volume { get; set; } // VOLUME
        public string Unit { get; set; } // UNIT (length: 50)
        public DateTime? BookingTime { get; set; } // BOOKING_TIME
        public int NewId { get; set; } // NewId (Primary key)
        public int? Basket25 { get; set; } // BASKET25
        public int? Basket16 { get; set; } // BASKET16
        public int? Pallet { get; set; } // PALLET
        public int? Poid { get; set; } // POID
        public int? Soid { get; set; } // SOID
        public int? PoDetailId { get; set; } // PODetailID

        public EdiBooking()
        {
            BookingTime = DateTime.Now;
        }
    }

    // EDIBookingBigC
    public class EdiBookingBigC
    {
        public int RecordId { get; set; } // RecordID (Primary key)
        public string SupplierNumber { get; set; } // SUPPLIER_NUMBER (length: 30)
        public string SupplierName { get; set; } // SUPPLIER_NAME (length: 100)
        public string PoNo { get; set; } // PO_NO (length: 50)
        public DateTime? WhDeliveryDate { get; set; } // WH_DELIVERY_DATE
        public string ProductNumber { get; set; } // PRODUCT_NUMBER (length: 30)
        public string ProductName { get; set; } // PRODUCT_NAME (length: 100)
        public string StoreNo { get; set; } // STORE_NO (length: 25)
        public string StoreName { get; set; } // STORE_NAME (length: 70)
        public string SoNo { get; set; } // SO_NO (length: 50)
        public DateTime? OrderDate { get; set; } // ORDER_DATE
        public string Category { get; set; } // CATEGORY (length: 30)
        public string Temperature { get; set; } // TEMPERATURE (length: 50)
        public int? Carton { get; set; } // CARTON
        public decimal? Weights { get; set; } // WEIGHTS
        public decimal? Volume { get; set; } // VOLUME
        public string Unit { get; set; } // UNIT (length: 50)
        public DateTime? BookingTime { get; set; } // BOOKING_TIME
        public int? Basket25 { get; set; } // BASKET25
        public int? Basket16 { get; set; } // BASKET16
        public int? Pallet { get; set; } // PALLET
        public string Dept { get; set; } // DEPT (length: 50)
        public long? Poid { get; set; } // POID
        public long? Soid { get; set; } // SOID
        public long? PoDetailId { get; set; } // PODetailID
        public string PoNoLine { get; set; } // PO_NOLine (length: 50)
        public string Lv { get; set; } // LV (length: 50)
        public string Lu { get; set; } // LU (length: 50)
        public string Comm { get; set; } // COMM (length: 200)
        public string Goldcode { get; set; } // GOLDCODE (length: 20)
        public string WhCode { get; set; } // WH_CODE (length: 50)
        public string TillCode { get; set; } // TILL_CODE (length: 50)
        public string XDockingStorage { get; set; } // X-DOCKING_STORAGE (length: 50)
        public string Region { get; set; } // REGION (length: 50)
        public string UnitPckSize { get; set; } // UNIT_PCK_SIZE (length: 50)
    }

    // EDItmpBookingBigC
    public class EdItmpBookingBigC
    {
        public string C1PoDetail40StoresOrder41 { get; set; } // 1- PO_DETAIL (STORES ORDER) (length: 50)
        public string C2LineNo { get; set; } // 2-LINE NO (length: 50)
        public string C3PoMain40PoSupplier41 { get; set; } // 3-PO_MAIN (PO SUPPLIER) (length: 50)
        public string C4WhCode { get; set; } // 4-WH CODE (length: 50)
        public string C5TillCode { get; set; } // 5-TILL CODE (length: 50)
        public string C6GoldCode { get; set; } // 6-GOLD CODE (length: 50)
        public string C7Discription { get; set; } // 7-DISCRIPTION (length: 200)
        public string C8Lv { get; set; } // 8-LV (length: 50)
        public string C9Lu { get; set; } // 9-LU (length: 50)
        public string C10SupplierCode { get; set; } // 10-SUPPLIER CODE (length: 50)
        public string C11SupplierName { get; set; } // 11-SUPPLIER NAME (length: 200)
        public string C12Commcontract { get; set; } // 12-COMMCONTRACT (length: 50)
        public string C13Dept { get; set; } // 13-DEPT (length: 50)
        public DateTime? C14DeliveryDate { get; set; } // 14-DELIVERY DATE
        public string C15Store { get; set; } // 15-STORE (length: 50)
        public string C16StoresName { get; set; } // 16-STORES NAME (length: 100)
        public decimal? C17OrderQty { get; set; } // 17-ORDER QTY
        public string C18StockUnit { get; set; } // 18-STOCK UNIT (length: 50)
        public string C19XDocking47Storage { get; set; } // 19-X-DOCKING/ STORAGE (length: 50)
        public string C20Region { get; set; } // 20-REGION (length: 50)
        public string C21UnitPckSize { get; set; } // 21-UNIT PCK SIZE (length: 50)
        public long Id { get; set; } // ID (Primary key)
    }

    // Email
    public class Email
    {
        public int EmailId { get; set; } // EmailID (Primary key)
        public string Email_ { get; set; } // Email (length: 500)
        public string Note { get; set; } // Note (length: 50)
        public int? CustomerId { get; set; } // CustomerID
    }

    // The table 'ItemValue' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // ItemValue
    public class ItemValue
    {
        public string Group { get; set; } // Group (length: 50)
        public string ValueCode { get; set; } // ValueCode (length: 50)
        public string ValueName { get; set; } // ValueName (length: 255)
    }

    // LabelTmpROWMS
    public class LabelTmpRowm
    {
        public int LabelTmpRowmsid { get; set; } // LabelTmpROWMSID (Primary key)
        public int? Roid { get; set; } // ROID
        public int? IndexPallet { get; set; } // IndexPallet
        public string CreateBy { get; set; } // CreateBy (length: 50)
        public DateTime? CreateTime { get; set; } // CreateTime
    }

    // M_item
    public class MItem
    {
        public string ItemKey { get; set; } // item_key (Primary key) (length: 64)
        public string ItemLabel { get; set; } // item_label (length: 64)
        public int Editable { get; set; } // editable
        public string Remark { get; set; } // remark (length: 150)

        // Reverse navigation

        /// <summary>
        /// Child MItemValues where [M_item_value].[item_key] point to this entity (fk_app_m_item_value_1)
        /// </summary>
        public virtual ICollection<MItemValue> MItemValues { get; set; } // M_item_value.fk_app_m_item_value_1

        public MItem()
        {
            Editable = 0;
            Remark = "";
            MItemValues = new List<MItemValue>();
        }
    }

    // M_item_value
    public class MItemValue
    {
        public string ItemKey { get; set; } // item_key (Primary key) (length: 64)
        public string Code { get; set; } // code (Primary key) (length: 100)
        public string Name { get; set; } // name (length: 150)
        public string Remark { get; set; } // remark (length: 150)
        public bool? IsKey { get; set; } // is_key

        // Foreign keys

        /// <summary>
        /// Parent MItem pointed by [M_item_value].([ItemKey]) (fk_app_m_item_value_1)
        /// </summary>
        public virtual MItem MItem { get; set; } // fk_app_m_item_value_1
    }

    // NameRows
    public class NameRow
    {
        public int NameRowsId { get; set; } // NameRowsID (Primary key)
        public string NamesRowsName { get; set; } // NamesRowsName (length: 300)
        public string CombieName { get; set; } // CombieName (length: 300)
        public int? OperationCategoryId { get; set; } // OperationCategoryID
    }

    // NoteDeliveryStore
    public class NoteDeliveryStore
    {
        public int NoteDeliveryStoreId { get; set; } // NoteDeliveryStoreID (Primary key)
        public int? CustomerId { get; set; } // CustomerID
        public int? Doid { get; set; } // DOID
        public string NoteNumber { get; set; } // NoteNumber (length: 10)
        public string ProductCombieName { get; set; } // ProductCombieName (length: 500)
        public int? CreateById { get; set; } // CreateByID
        public int? DeliveryById { get; set; } // DeliveryByID
        public string TransferName { get; set; } // TransferName (length: 100)
        public string DriverName { get; set; } // DriverName (length: 100)
        public DateTime? CreateTime { get; set; } // CreateTime
    }

    // The table 'OperationDataExport' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // OperationDataExport
    public class OperationDataExport
    {
        public string SupplierNumber { get; set; } // SupplierNumber (length: 255)
        public string SupplierName { get; set; } // SupplierName (length: 255)
        public string PurchasingOrderNumber { get; set; } // PurchasingOrderNumber (length: 255)
        public string ProductName { get; set; } // ProductName (length: 255)
        public string ProductNumber { get; set; } // ProductNumber (length: 255)
        public string StoreNumber { get; set; } // StoreNumber (length: 255)
        public string StoreName { get; set; } // StoreName (length: 255)
        public string DispatchedActualCarton { get; set; } // DispatchedActualCarton (length: 255)
        public string DispatchedGrossWeight { get; set; } // DispatchedGrossWeight (length: 255)
        public string DispatchedGrossWeightScale { get; set; } // DispatchedGrossWeightScale (length: 255)
    }

    // PalletHighland
    public class PalletHighland
    {
        public int PalletHighlandId { get; set; } // PalletHighlandID (Primary key)
        public int? PalletId { get; set; } // PalletID
        public double? GrossWeight { get; set; } // GrossWeight
        public double? Cover { get; set; } // Cover
        public double? NetWeight { get; set; } // NetWeight
        public string Size { get; set; } // Size (length: 50)
        public string Remark { get; set; } // Remark (length: 250)
        public DateTime? Date { get; set; } // Date
        public DateTime? ScanTime { get; set; } // ScanTime
    }

    // The table 'PlanEdiTripSCM' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // PlanEdiTripSCM
    public class PlanEdiTripScm
    {
        public string Truck { get; set; } // TRUCK (length: 100)
        public DateTime? Date { get; set; } // DATE
        public string Storenumber { get; set; } // STORENUMBER (length: 100)
        public int? Idorder { get; set; } // IDORDER
        public string Notetruck { get; set; } // NOTETRUCK (length: 200)
    }

    // Products
    public class Product
    {
        public int ProductId { get; set; } // ProductID (Primary key)
        public string ProductName { get; set; } // ProductName (length: 100)
        public decimal UnitWeight { get; set; } // UnitWeight
        public bool Active { get; set; } // Active
        public int? SupplierId { get; set; } // SupplierID
        public int? ProductCategoryId { get; set; } // ProductCategoryID
        public string PackagingType { get; set; } // PackagingType (length: 7)
        public string ProductRemark { get; set; } // ProductRemark (length: 250)
        public decimal? CartonWeight { get; set; } // CartonWeight
        public int? UnitPerCarton { get; set; } // UnitPerCarton
        public byte ProccessingCatergoryId { get; set; } // ProccessingCatergoryID
        public byte[] Ts { get; set; } // TS
        public bool? CheckDelete { get; set; } // CheckDelete
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public string CreatedBy { get; set; } // CreatedBy (length: 25)
        public int? CustomerId { get; set; } // CustomerID
        public string ProductNumber { get; set; } // ProductNumber (length: 30)
        public decimal? NetPerCarton { get; set; } // NetPerCarton
        public decimal? GrossPerCarton { get; set; } // GrossPerCarton
        public double? ProductTemperature { get; set; } // ProductTemperature
        public int? TemperatureDeviation { get; set; } // TemperatureDeviation
        public string Unit { get; set; } // Unit (length: 50)
        public double? NaturalLossRate { get; set; } // NaturalLossRate
        public string ProductGoldCode { get; set; } // ProductGoldCode (length: 30)

        // Reverse navigation

        /// <summary>
        /// Child PurchasingOrderProducts where [PurchasingOrderProducts].[ProductID] point to this entity (FK_PurchasingOrderProducts_Products)
        /// </summary>
        public virtual ICollection<PurchasingOrderProduct> PurchasingOrderProducts { get; set; } // PurchasingOrderProducts.FK_PurchasingOrderProducts_Products

        /// <summary>
        /// Child SalesOrderProducts where [SalesOrderProducts].[ProductID] point to this entity (FK_SalesOrderProducts_Products)
        /// </summary>
        public virtual ICollection<SalesOrderProduct> SalesOrderProducts { get; set; } // SalesOrderProducts.FK_SalesOrderProducts_Products

        /// <summary>
        /// Child SalesOrderProductsDeletes where [SalesOrderProducts_Delete].[ProductID] point to this entity (FK__SalesOrde__Produ__77CAB889)
        /// </summary>
        public virtual ICollection<SalesOrderProductsDelete> SalesOrderProductsDeletes { get; set; } // SalesOrderProducts_Delete.FK__SalesOrde__Produ__77CAB889

        public Product()
        {
            UnitWeight = 1m;
            Active = true;
            UnitPerCarton = 10;
            ProccessingCatergoryId = 1;
            CheckDelete = false;
            CreatedTime = DateTime.Now;
            NaturalLossRate = 0;
            PurchasingOrderProducts = new List<PurchasingOrderProduct>();
            SalesOrderProducts = new List<SalesOrderProduct>();
            SalesOrderProductsDeletes = new List<SalesOrderProductsDelete>();
        }
    }

    // ProductBigCtmp
    public class ProductBigCtmp
    {
        public string Till { get; set; } // till (Primary key) (length: 50)
        public string Gold { get; set; } // gold (length: 50)
        public string Name { get; set; } // name (length: 550)
    }

    // ProductCategory
    public class ProductCategory
    {
        public int ProductCategoryId { get; set; } // ProductCategoryID (Primary key)
        public string ProductCategoryNumber { get; set; } // ProductCategoryNumber (length: 50)
        public string ProductCategoryName { get; set; } // ProductCategoryName (length: 100)
        public string ProductCategoryRemark { get; set; } // ProductCategoryRemark (length: 250)
    }

    // ProductSupplier
    public class ProductSupplier
    {
        public int ProductSupplierId { get; set; } // ProductSupplierID (Primary key via unique index PK_ProductSupplier)
        public int? ProductId { get; set; } // ProductID
        public int? SupplierId { get; set; } // SupplierID
        public string SupplierNumber { get; set; } // SupplierNumber (length: 50)
    }

    // PurchasingOrders
    public class PurchasingOrder
    {
        public int PurchasingOrderId { get; set; } // PurchasingOrderID (Primary key)
        public string PurchasingOrderNumber { get; set; } // PurchasingOrderNumber (length: 16)
        public DateTime PurchasingOrderDate { get; set; } // PurchasingOrderDate
        public int SupplierId { get; set; } // SupplierID
        public DateTime CreatedTime { get; set; } // CreatedTime
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public string PurchasingOrderRemark { get; set; } // PurchasingOrderRemark (length: 200)
        public byte? Status { get; set; } // Status
        public byte[] Ts { get; set; } // ts
        public int? CustomerId { get; set; } // CustomerID
        public string PoNo { get; set; } // PO_NO (length: 50)
        public bool? VeterinaryInspectionCheck { get; set; } // VeterinaryInspectionCheck
        public string TruckNumber { get; set; } // TruckNumber (length: 50)
        public string TruckType { get; set; } // TruckType (length: 50)
        public DateTime? StartWorkingTime { get; set; } // StartWorkingTime
        public DateTime? EndWorkingTime { get; set; } // EndWorkingTime
        public float? ProductTemperature { get; set; } // ProductTemperature
        public float? TruckTemperature { get; set; } // TruckTemperature
        public byte? ReceivingOrdinalNumber { get; set; } // ReceivingOrdinalNumber
        public string ConfirmedBy { get; set; } // ConfirmedBy (length: 30)
        public DateTime? TruckArrivalTime { get; set; } // TruckArrivalTime
        public string DriverName { get; set; } // DriverName (length: 50)
        public double? PoDamage { get; set; } // PODamage
        public DateTime? UpdateTime { get; set; } // UpdateTime
        public Guid? TruckInOutId { get; set; } // TruckInOutID

        // Reverse navigation

        /// <summary>
        /// Child PurchasingOrderProducts where [PurchasingOrderProducts].[PurchasingOrderID] point to this entity (FK_PurchasingOrderProducts_PurchasingOrders)
        /// </summary>
        public virtual ICollection<PurchasingOrderProduct> PurchasingOrderProducts { get; set; } // PurchasingOrderProducts.FK_PurchasingOrderProducts_PurchasingOrders

        // Foreign keys

        /// <summary>
        /// Parent Supplier pointed by [PurchasingOrders].([SupplierId]) (FK_PurchasingOrders_Suppliers)
        /// </summary>
        public virtual Supplier Supplier { get; set; } // FK_PurchasingOrders_Suppliers

        public PurchasingOrder()
        {
            CreatedTime = DateTime.Now;
            Status = 0;
            VeterinaryInspectionCheck = false;
            PoDamage = 0;
            PurchasingOrderProducts = new List<PurchasingOrderProduct>();
        }
    }

    // PurchasingOrderProducts
    public class PurchasingOrderProduct
    {
        public int PurchasingOrderProductId { get; set; } // PurchasingOrderProductID (Primary key)
        public int PurchasingOrderId { get; set; } // PurchasingOrderID
        public int ProductId { get; set; } // ProductID
        public DateTime CreatedTime { get; set; } // CreatedTime
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public byte? Status { get; set; } // Status
        public int? ReceivedActualCarton { get; set; } // ReceivedActualCarton
        public decimal? ReceivedActualWeight { get; set; } // ReceivedActualWeight
        public decimal? ReceivedActualVolume { get; set; } // ReceivedActualVolume
        public string UpdatedBy { get; set; } // UpdatedBy (length: 200)
        public DateTime? UpdatedTime { get; set; } // UpdatedTime
        public string PurchasingOrderProductRemark { get; set; } // PurchasingOrderProductRemark (length: 200)
        public byte[] Ts { get; set; } // ts
        public string PoNo { get; set; } // PO_NO (length: 50)
        public double? PoDetailDamage { get; set; } // PODetailDamage
        public int? ReceivedBookingCarton { get; set; } // ReceivedBookingCarton
        public decimal? ReceivedBookingWeight { get; set; } // ReceivedBookingWeight
        public double? QtyQa { get; set; } // QtyQA
        public double? QtyQaDamageVh { get; set; } // QtyQADamageVH
        public double? QtyQaDamageH { get; set; } // QtyQADamageH
        public double? QtyQaDamageL { get; set; } // QtyQADamageL
        public double? PoDetailDamageError { get; set; } // PODetailDamageError
        public decimal? ReceivedActualGrossWeight { get; set; } // ReceivedActualGrossWeight
        public string QaBy { get; set; } // QABy (length: 50)
        public double? PackageWeight { get; set; } // PackageWeight

        // Reverse navigation

        /// <summary>
        /// Child SalesOrderProducts where [SalesOrderProducts].[PurchasingOrderProductID] point to this entity (FK_SalesOrderProducts_PurchasingOrderProducts)
        /// </summary>
        public virtual ICollection<SalesOrderProduct> SalesOrderProducts { get; set; } // SalesOrderProducts.FK_SalesOrderProducts_PurchasingOrderProducts

        /// <summary>
        /// Child SalesOrderProductsDeletes where [SalesOrderProducts_Delete].[PurchasingOrderProductID] point to this entity (FK__SalesOrde__Purch__79B300FB)
        /// </summary>
        public virtual ICollection<SalesOrderProductsDelete> SalesOrderProductsDeletes { get; set; } // SalesOrderProducts_Delete.FK__SalesOrde__Purch__79B300FB

        // Foreign keys

        /// <summary>
        /// Parent Product pointed by [PurchasingOrderProducts].([ProductId]) (FK_PurchasingOrderProducts_Products)
        /// </summary>
        public virtual Product Product { get; set; } // FK_PurchasingOrderProducts_Products

        /// <summary>
        /// Parent PurchasingOrder pointed by [PurchasingOrderProducts].([PurchasingOrderId]) (FK_PurchasingOrderProducts_PurchasingOrders)
        /// </summary>
        public virtual PurchasingOrder PurchasingOrder { get; set; } // FK_PurchasingOrderProducts_PurchasingOrders

        public PurchasingOrderProduct()
        {
            CreatedTime = DateTime.Now;
            Status = 0;
            UpdatedTime = DateTime.Now;
            PoDetailDamage = 0;
            QtyQa = 1;
            QtyQaDamageVh = 0;
            QtyQaDamageH = 0;
            QtyQaDamageL = 0;
            PoDetailDamageError = 0;
            SalesOrderProducts = new List<SalesOrderProduct>();
            SalesOrderProductsDeletes = new List<SalesOrderProductsDelete>();
        }
    }

    // SalesOrders
    public class SalesOrder
    {
        public int SalesOrderId { get; set; } // SalesOrderID (Primary key)
        public string SalesOrderNumber { get; set; } // SalesOrderNumber (length: 16)
        public DateTime? SalesOrderDate { get; set; } // SalesOrderDate
        public int StoreId { get; set; } // StoreID
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public DateTime CreatedTime { get; set; } // CreatedTime
        public string SalesOrderRemark { get; set; } // SalesOrderRemark (length: 200)
        public int? CustomerId { get; set; } // CustomerID
        public byte? OperationCategoryId { get; set; } // OperationCategoryID
        public string SoNo { get; set; } // SO_NO (length: 50)
        public string TruckNumber { get; set; } // TruckNumber (length: 50)
        public string DriverName { get; set; } // DriverName (length: 50)
        public bool? SalesOrderConfirmed { get; set; } // SalesOrderConfirmed
        public byte[] Ts { get; set; } // TS
        public byte SupplierGroupId { get; set; } // SupplierGroupID
        public int? SalesOrderDept { get; set; } // SalesOrderDept
        public byte? Status { get; set; } // Status

        // Reverse navigation

        /// <summary>
        /// Child SalesOrderProducts where [SalesOrderProducts].[SalesOrderID] point to this entity (FK_SalesOrderProducts_SalesOrders)
        /// </summary>
        public virtual ICollection<SalesOrderProduct> SalesOrderProducts { get; set; } // SalesOrderProducts.FK_SalesOrderProducts_SalesOrders

        /// <summary>
        /// Child SalesOrderProductsDeletes where [SalesOrderProducts_Delete].[SalesOrderID] point to this entity (FK__SalesOrde__Sales__78BEDCC2)
        /// </summary>
        public virtual ICollection<SalesOrderProductsDelete> SalesOrderProductsDeletes { get; set; } // SalesOrderProducts_Delete.FK__SalesOrde__Sales__78BEDCC2

        // Foreign keys

        /// <summary>
        /// Parent Store pointed by [SalesOrders].([StoreId]) (FK_SalesOrders_Stores)
        /// </summary>
        public virtual Store Store { get; set; } // FK_SalesOrders_Stores

        public SalesOrder()
        {
            CreatedTime = DateTime.Now;
            SalesOrderConfirmed = false;
            SupplierGroupId = 0;
            SalesOrderProducts = new List<SalesOrderProduct>();
            SalesOrderProductsDeletes = new List<SalesOrderProductsDelete>();
        }
    }

    // SalesOrderPallets
    public class SalesOrderPallet
    {
        public int SalesOrderPalletId { get; set; } // SalesOrderPalletID (Primary key)
        public int SalesOrderProductId { get; set; } // SalesOrderProductID
        public int? StoreBookingCarton { get; set; } // StoreBookingCarton
        public int? DispatchedActualCarton { get; set; } // DispatchedActualCarton
    }

    // SalesOrderProducts
    public class SalesOrderProduct
    {
        public int SalesOrderProductId { get; set; } // SalesOrderProductID (Primary key)
        public int SalesOrderId { get; set; } // SalesOrderID
        public string SalesOrderProductRemark { get; set; } // SalesOrderProductRemark (length: 200)
        public int ProductId { get; set; } // ProductID
        public DateTime CreatedTime { get; set; } // CreatedTime
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public byte? Status { get; set; } // Status
        public int PurchasingOrderProductId { get; set; } // PurchasingOrderProductID
        public int? DispatchedActualCarton { get; set; } // DispatchedActualCarton
        public decimal? DispatchedActualWeight { get; set; } // DispatchedActualWeight
        public decimal? DispatchedActualVolume { get; set; } // DispatchedActualVolume
        public int? StoreBookingCarton { get; set; } // StoreBookingCarton
        public decimal? StoreBookingWeight { get; set; } // StoreBookingWeight
        public decimal? StoreBookingVolume { get; set; } // StoreBookingVolume

        /// <summary>
        /// Basket 2.5ks
        /// </summary>
        public int? DispatchedActualBasket1 { get; set; } // DispatchedActualBasket1

        /// <summary>
        /// Basket 1.6ks
        /// </summary>
        public int? DispatchedActualBasket2 { get; set; } // DispatchedActualBasket2

        /// <summary>
        /// Basket 1.6ks
        /// </summary>
        public int? DispatchedActualPallet { get; set; } // DispatchedActualPallet
        public decimal? DispatchedGrossWeight { get; set; } // DispatchedGrossWeight
        public decimal? DispatchedGrossWeightScale { get; set; } // DispatchedGrossWeightScale
        public decimal? PackagingWeight { get; set; } // PackagingWeight
        public string SoNo { get; set; } // SO_NO (length: 50)
        public float? Lining { get; set; } // Lining
        public bool? BreakCheck { get; set; } // BreakCheck
        public byte[] Ts { get; set; } // ts
        public decimal? DamageWeightPercent { get; set; } // DamageWeightPercent
        public bool? SopQuarantine { get; set; } // SOPQuarantine

        /// <summary>
        /// Basket 2.5ks
        /// </summary>
        public int? DispatchedActualBasket3 { get; set; } // DispatchedActualBasket3

        /// <summary>
        /// Basket 1.6ks
        /// </summary>
        public int? DispatchedActualBasket4 { get; set; } // DispatchedActualBasket4

        /// <summary>
        /// Basket 1.6ks
        /// </summary>
        public int? DispatchedActualBasket5 { get; set; } // DispatchedActualBasket5
        public int? DispatchedActualBasket6 { get; set; } // DispatchedActualBasket6
        public int? Trolley { get; set; } // Trolley
        public int? BasketId { get; set; } // BasketID
        public int? BasketQuantity { get; set; } // BasketQuantity
        public double? NaturalLossRateSo { get; set; } // NaturalLossRateSO
        public string PoNo { get; set; } // PO_NO (length: 50)
        public string PoNoLine { get; set; } // PO_NOLine (length: 50)
        public string Lv { get; set; } // LV (length: 50)
        public string Lu { get; set; } // LU (length: 50)
        public string Comm { get; set; } // COMM (length: 50)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 250)
        public string WhCode { get; set; } // WH_CODE (length: 50)
        public string TillCode { get; set; } // TILL_CODE (length: 50)
        public DateTime? ScannedTime { get; set; } // ScannedTime
        public string ScannedBy { get; set; } // ScannedBy (length: 30)
        public string ScannedResult { get; set; } // ScannedResult (length: 10)
        public byte? ScannedStatus { get; set; } // ScannedStatus
        public string Region { get; set; } // REGION (length: 50)

        // Foreign keys

        /// <summary>
        /// Parent Product pointed by [SalesOrderProducts].([ProductId]) (FK_SalesOrderProducts_Products)
        /// </summary>
        public virtual Product Product { get; set; } // FK_SalesOrderProducts_Products

        /// <summary>
        /// Parent PurchasingOrderProduct pointed by [SalesOrderProducts].([PurchasingOrderProductId]) (FK_SalesOrderProducts_PurchasingOrderProducts)
        /// </summary>
        public virtual PurchasingOrderProduct PurchasingOrderProduct { get; set; } // FK_SalesOrderProducts_PurchasingOrderProducts

        /// <summary>
        /// Parent SalesOrder pointed by [SalesOrderProducts].([SalesOrderId]) (FK_SalesOrderProducts_SalesOrders)
        /// </summary>
        public virtual SalesOrder SalesOrder { get; set; } // FK_SalesOrderProducts_SalesOrders

        public SalesOrderProduct()
        {
            CreatedTime = DateTime.Now;
            Status = 0;
            SoNo = "0";
            Lining = 0f;
            DamageWeightPercent = 0m;
            NaturalLossRateSo = 0;
            ScannedStatus = 0;
        }
    }

    // SalesOrderProductLabels
    public class SalesOrderProductLabel
    {
        public int SalesOrderProductLabelId { get; set; } // SalesOrderProductLabelID (Primary key)
        public int SalesOrderProductId { get; set; } // SalesOrderProductID
        public DateTime CreatedTime { get; set; } // CreatedTime
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public int? BasketQuantity { get; set; } // BasketQuantity
        public short? CartonIndex { get; set; } // CartonIndex
        public DateTime? ScannedTime { get; set; } // ScannedTime
        public string ScannedBy { get; set; } // ScannedBy (length: 30)
        public string ScannedResult { get; set; } // ScannedResult (length: 10)
        public byte? ScannedStatus { get; set; } // ScannedStatus

        public SalesOrderProductLabel()
        {
            CreatedTime = DateTime.Now;
            ScannedStatus = 0;
        }
    }

    // SalesOrderProducts_Delete
    public class SalesOrderProductsDelete
    {
        public int SalesOrderProductId { get; set; } // SalesOrderProductID (Primary key)
        public int SalesOrderId { get; set; } // SalesOrderID
        public string SalesOrderProductRemark { get; set; } // SalesOrderProductRemark (length: 200)
        public int ProductId { get; set; } // ProductID
        public DateTime CreatedTime { get; set; } // CreatedTime
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public byte? Status { get; set; } // Status
        public int PurchasingOrderProductId { get; set; } // PurchasingOrderProductID
        public int? DispatchedActualCarton { get; set; } // DispatchedActualCarton
        public decimal? DispatchedActualWeight { get; set; } // DispatchedActualWeight
        public decimal? DispatchedActualVolume { get; set; } // DispatchedActualVolume
        public int? StoreBookingCarton { get; set; } // StoreBookingCarton
        public decimal? StoreBookingWeight { get; set; } // StoreBookingWeight
        public decimal? StoreBookingVolume { get; set; } // StoreBookingVolume

        /// <summary>
        /// Basket 2.5ks
        /// </summary>
        public int? DispatchedActualBasket1 { get; set; } // DispatchedActualBasket1

        /// <summary>
        /// Basket 1.6ks
        /// </summary>
        public int? DispatchedActualBasket2 { get; set; } // DispatchedActualBasket2

        /// <summary>
        /// Basket 1.6ks
        /// </summary>
        public int? DispatchedActualPallet { get; set; } // DispatchedActualPallet
        public decimal? DispatchedGrossWeight { get; set; } // DispatchedGrossWeight
        public decimal? DispatchedGrossWeightScale { get; set; } // DispatchedGrossWeightScale
        public decimal? PackagingWeight { get; set; } // PackagingWeight
        public string SoNo { get; set; } // SO_NO (length: 50)
        public float? Lining { get; set; } // Lining
        public bool? BreakCheck { get; set; } // BreakCheck
        public byte[] Ts { get; set; } // ts
        public decimal? DamageWeightPercent { get; set; } // DamageWeightPercent
        public bool? SopQuarantine { get; set; } // SOPQuarantine

        /// <summary>
        /// Basket 2.5ks
        /// </summary>
        public int? DispatchedActualBasket3 { get; set; } // DispatchedActualBasket3

        /// <summary>
        /// Basket 1.6ks
        /// </summary>
        public int? DispatchedActualBasket4 { get; set; } // DispatchedActualBasket4

        /// <summary>
        /// Basket 1.6ks
        /// </summary>
        public int? DispatchedActualBasket5 { get; set; } // DispatchedActualBasket5
        public int? DispatchedActualBasket6 { get; set; } // DispatchedActualBasket6
        public int? Trolley { get; set; } // Trolley
        public int? BasketId { get; set; } // BasketID
        public int? BasketQuantity { get; set; } // BasketQuantity
        public double? NaturalLossRateSo { get; set; } // NaturalLossRateSO
        public string PoNo { get; set; } // PO_NO (length: 50)
        public string PoNoLine { get; set; } // PO_NOLine (length: 50)
        public string Lv { get; set; } // LV (length: 50)
        public string Lu { get; set; } // LU (length: 50)
        public string Comm { get; set; } // COMM (length: 50)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 250)
        public string WhCode { get; set; } // WH_CODE (length: 50)
        public string TillCode { get; set; } // TILL_CODE (length: 50)
        public DateTime? ScannedTime { get; set; } // ScannedTime
        public string ScannedBy { get; set; } // ScannedBy (length: 30)
        public string ScannedResult { get; set; } // ScannedResult (length: 10)
        public byte? ScannedStatus { get; set; } // ScannedStatus
        public string Region { get; set; } // REGION (length: 50)
        public int? SalesOrderProductIdOld { get; set; } // SalesOrderProductIDOld

        // Foreign keys

        /// <summary>
        /// Parent Product pointed by [SalesOrderProducts_Delete].([ProductId]) (FK__SalesOrde__Produ__77CAB889)
        /// </summary>
        public virtual Product Product { get; set; } // FK__SalesOrde__Produ__77CAB889

        /// <summary>
        /// Parent PurchasingOrderProduct pointed by [SalesOrderProducts_Delete].([PurchasingOrderProductId]) (FK__SalesOrde__Purch__79B300FB)
        /// </summary>
        public virtual PurchasingOrderProduct PurchasingOrderProduct { get; set; } // FK__SalesOrde__Purch__79B300FB

        /// <summary>
        /// Parent SalesOrder pointed by [SalesOrderProducts_Delete].([SalesOrderId]) (FK__SalesOrde__Sales__78BEDCC2)
        /// </summary>
        public virtual SalesOrder SalesOrder { get; set; } // FK__SalesOrde__Sales__78BEDCC2

        public SalesOrderProductsDelete()
        {
            CreatedTime = DateTime.Now;
            Status = 0;
            SoNo = "0";
            Lining = 0f;
            DamageWeightPercent = 0m;
            NaturalLossRateSo = 0;
            ScannedStatus = 0;
        }
    }

    // Shippers
    public class Shipper
    {
        public int ShippersId { get; set; } // ShippersID (Primary key)
        public decimal? IdentityCard { get; set; } // IdentityCard
        public string IssuedBy { get; set; } // IssuedBy (length: 50)
        public decimal? PhoneNumber { get; set; } // PhoneNumber
        public decimal? Fax { get; set; } // Fax
        public string Email { get; set; } // Email (length: 50)
        public DateTime? DateRange { get; set; } // DateRange
        public string ShippersName { get; set; } // ShippersName (length: 250)
        public string ShippersAddress { get; set; } // ShippersAddress (length: 250)
    }

    // Stores
    public class Store
    {
        public int StoreId { get; set; } // StoreID (Primary key)
        public string StoreNumber { get; set; } // StoreNumber (length: 25)
        public string StoreName { get; set; } // StoreName (length: 500)
        public int? StoreOrdinalNumber { get; set; } // StoreOrdinalNumber
        public string StoreContact { get; set; } // StoreContact (length: 50)
        public string StoreContactPhone { get; set; } // StoreContactPhone (length: 50)
        public string StoreContactEmail { get; set; } // StoreContactEmail (length: 50)
        public string StoreContact2 { get; set; } // StoreContact2 (length: 50)
        public string StoreContactPhone2 { get; set; } // StoreContactPhone2 (length: 50)
        public string StoreContactEmail2 { get; set; } // StoreContactEmail2 (length: 50)
        public string StoreNameShort { get; set; } // StoreNameShort (length: 500)
        public string StoreAddress { get; set; } // StoreAddress (length: 500)
        public string StoreContactMobile { get; set; } // StoreContactMobile (length: 50)
        public string StoreContactMobile2 { get; set; } // StoreContactMobile2 (length: 50)
        public string StoreContact3 { get; set; } // StoreContact3 (length: 50)
        public string StoreContactPosition { get; set; } // StoreContactPosition (length: 50)
        public string StoreContactPosition1 { get; set; } // StoreContactPosition1 (length: 50)
        public string StoreContactPosition2 { get; set; } // StoreContactPosition2 (length: 50)
        public bool? StoreActive { get; set; } // StoreActive
        public byte[] Ts { get; set; } // TS
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public string StoreNumberNew { get; set; } // StoreNumberNew (length: 25)
        public int? BasketS13StockAllowance { get; set; } // BasketS13StockAllowance
        public int? BasketS25StockAllowance { get; set; } // BasketS25StockAllowance
        public int? BasketL13StockAllowance { get; set; } // BasketL13StockAllowance
        public int? BasketL25StockAllowance { get; set; } // BasketL25StockAllowance
        public int? BasketL40StockAllowance { get; set; } // BasketL40StockAllowance
        public int? BasketO25StockAllowance { get; set; } // BasketO25StockAllowance
        public int? TrolleyStockAllowance { get; set; } // TrolleyStockAllowance
        public string Domain { get; set; } // Domain (length: 50)
        public string StoreType { get; set; } // StoreType (length: 50)
        public int? CustomerId { get; set; } // CustomerID
        public string ShipToOtm { get; set; } // ShipToOTM (length: 255)

        // Reverse navigation

        /// <summary>
        /// Child SalesOrders where [SalesOrders].[StoreID] point to this entity (FK_SalesOrders_Stores)
        /// </summary>
        public virtual ICollection<SalesOrder> SalesOrders { get; set; } // SalesOrders.FK_SalesOrders_Stores

        public Store()
        {
            StoreActive = true;
            CreatedTime = DateTime.Now;
            SalesOrders = new List<SalesOrder>();
        }
    }

    // Stores_tmp
    public class StoresTmp
    {
        public int StoreId { get; set; } // StoreID (Primary key)
        public string StoreNumber { get; set; } // StoreNumber (Primary key) (length: 25)
        public string StoreName { get; set; } // StoreName (length: 500)
        public int? StoreOrdinalNumber { get; set; } // StoreOrdinalNumber
        public string StoreContact { get; set; } // StoreContact (length: 50)
        public string StoreContactPhone { get; set; } // StoreContactPhone (length: 50)
        public string StoreContactEmail { get; set; } // StoreContactEmail (length: 50)
        public string StoreContact2 { get; set; } // StoreContact2 (length: 50)
        public string StoreContactPhone2 { get; set; } // StoreContactPhone2 (length: 50)
        public string StoreContactEmail2 { get; set; } // StoreContactEmail2 (length: 50)
        public string StoreNameShort { get; set; } // StoreNameShort (length: 500)
        public string StoreAddress { get; set; } // StoreAddress (length: 500)
        public string StoreContactMobile { get; set; } // StoreContactMobile (length: 50)
        public string StoreContactMobile2 { get; set; } // StoreContactMobile2 (length: 50)
        public string StoreContact3 { get; set; } // StoreContact3 (length: 50)
        public string StoreContactPosition { get; set; } // StoreContactPosition (length: 50)
        public string StoreContactPosition1 { get; set; } // StoreContactPosition1 (length: 50)
        public string StoreContactPosition2 { get; set; } // StoreContactPosition2 (length: 50)
        public bool? StoreActive { get; set; } // StoreActive
        public byte[] Ts { get; set; } // TS
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public string StoreNumberNew { get; set; } // StoreNumberNew (length: 25)
        public int? BasketS13StockAllowance { get; set; } // BasketS13StockAllowance
        public int? BasketS25StockAllowance { get; set; } // BasketS25StockAllowance
        public int? BasketL13StockAllowance { get; set; } // BasketL13StockAllowance
        public int? BasketL25StockAllowance { get; set; } // BasketL25StockAllowance
        public int? BasketL40StockAllowance { get; set; } // BasketL40StockAllowance
        public int? BasketO25StockAllowance { get; set; } // BasketO25StockAllowance
        public int? TrolleyStockAllowance { get; set; } // TrolleyStockAllowance
        public string Domain { get; set; } // Domain (length: 50)
        public string StoreType { get; set; } // StoreType (length: 50)
        public int? CustomerId { get; set; } // CustomerID
    }

    // Suppliers
    public class Supplier
    {
        public int SupplierId { get; set; } // SupplierID (Primary key)
        public string SupplierNumber { get; set; } // SupplierNumber (length: 30)
        public string SupplierName { get; set; } // SupplierName (length: 100)
        public string SupplierNameShort { get; set; } // SupplierNameShort (length: 50)
        public int CustomerId { get; set; } // CustomerID
        public string SupplierAddress { get; set; } // SupplierAddress (length: 100)
        public string SupplierTel { get; set; } // SupplierTel (length: 12)
        public string SupplierTel2 { get; set; } // SupplierTel2 (length: 12)
        public string CellPhone { get; set; } // CellPhone (length: 15)
        public string SupplierFax { get; set; } // SupplierFax (length: 12)
        public string SupplierEmail { get; set; } // SupplierEmail (length: 200)
        public string PrimaryContact { get; set; } // PrimaryContact (length: 150)
        public string SupplierRemark { get; set; } // SupplierRemark (length: 200)
        public string TemperatureRequirement { get; set; } // TemperatureRequirement (length: 50)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public string CreatedBy { get; set; } // CreatedBy (length: 20)
        public bool? Active { get; set; } // Active
        public string StructureCode { get; set; } // StructureCode (length: 20)
        public byte[] Ts { get; set; } // ts
        public byte? OperationCategoryId { get; set; } // OperationCategoryID
        public bool? VeterinaryInspectionRequired { get; set; } // VeterinaryInspectionRequired
        public byte? SupplierGroupId { get; set; } // SupplierGroupID
        public int? SupplierTimeFrameId { get; set; } // SupplierTimeFrameID
        public int? MinBasket { get; set; } // MinBasket
        public int? MaxBasket { get; set; } // MaxBasket
        public int? BasketN13Begin { get; set; } // BasketN13Begin
        public int? BasketN25Begin { get; set; } // BasketN25Begin
        public int? BasketL13Begin { get; set; } // BasketL13Begin
        public int? BasketL25Begin { get; set; } // BasketL25Begin
        public int? BasketL40Begin { get; set; } // BasketL40Begin
        public int? BasketBlackBegin { get; set; } // BasketBlackBegin
        public int? TrolleyBegin { get; set; } // TrolleyBegin
        public string Sourcing { get; set; } // SOURCING (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child PurchasingOrders where [PurchasingOrders].[SupplierID] point to this entity (FK_PurchasingOrders_Suppliers)
        /// </summary>
        public virtual ICollection<PurchasingOrder> PurchasingOrders { get; set; } // PurchasingOrders.FK_PurchasingOrders_Suppliers

        public Supplier()
        {
            CustomerId = 466;
            CreatedTime = DateTime.Now;
            Active = true;
            VeterinaryInspectionRequired = false;
            SupplierGroupId = 0;
            PurchasingOrders = new List<PurchasingOrder>();
        }
    }

    // SupplierCategories
    public class SupplierCategory
    {
        public byte OperationCategoryId { get; set; } // OperationCategoryID (Primary key)
        public string SupplierCategoryName { get; set; } // SupplierCategoryName (length: 40)
        public string SupplierCategoryNameShort { get; set; } // SupplierCategoryNameShort (length: 1)
        public string SupplierCategoryNameEnglish { get; set; } // SupplierCategoryNameEnglish (length: 40)
    }

    // SupplierGroups
    public class SupplierGroup
    {
        public byte SupplierGroupId { get; set; } // SupplierGroupID (Primary key)
        public string SupplierGroupName { get; set; } // SupplierGroupName (length: 50)
        public string SupplierGroupNameFull { get; set; } // SupplierGroupNameFull (length: 50)
        public string SupplierGroupNumber { get; set; } // SupplierGroupNumber (length: 50)
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public DateTime? CreatedTime { get; set; } // CreatedTime

        public SupplierGroup()
        {
            CreatedTime = DateTime.Now;
        }
    }

    // SupplierTimeFrame
    public class SupplierTimeFrame
    {
        public int SupplierTimeFrameId { get; set; } // SupplierTimeFrameID (Primary key)
        public DateTime? FromTime { get; set; } // FromTime
        public DateTime? ToTime { get; set; } // ToTime
        public string TimeFrameDescription { get; set; } // TimeFrameDescription (length: 30)
        public byte? TimeFrameShort { get; set; } // TimeFrameShort
        public int? SupplierTimeFramesId { get; set; } // SupplierTimeFramesID
        public int? StoreId { get; set; } // StoreID
    }

    // SupplierTimeFrames
    public class SupplierTimeFrame1
    {
        public int SupplierTimeFramesId { get; set; } // SupplierTimeFramesID (Primary key)
        public int? SupplierId { get; set; } // SupplierID
    }

    // The table 'tableTest' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // tableTest
    public class TableTest
    {
        public string Sql { get; set; } // sql
        public int? Id { get; set; } // id
    }

    // The table 'tmpDispatchingPlansSCM' is not usable by entity framework because it
    // does not have a primary key. It is listed here for completeness.
    // tmpDispatchingPlansSCM
    public class TmpDispatchingPlansScm
    {
        public int? DispatchingOrderId { get; set; } // DispatchingOrderID
        public string DispatchingOrderNumber { get; set; } // DispatchingOrderNumber (length: 10)
        public string CustomerNumber { get; set; } // CustomerNumber (length: 50)
        public DateTime? DispatchingOrderDate { get; set; } // DispatchingOrderDate
        public string CustomerName { get; set; } // CustomerName (length: 50)
        public string Pp { get; set; } // PP (length: 26)
        public string ProductName { get; set; } // ProductName (length: 100)
        public int? RemainByProductLocation { get; set; } // RemainByProductLocation
        public int? QtyRemainAtLocation { get; set; } // QtyRemainAtLocation
        public string DispatchingLocationRemark { get; set; } // DispatchingLocationRemark (length: 150)
        public short? QuantityOfPackages { get; set; } // QuantityOfPackages
        public string Label { get; set; } // Label (length: 12)
        public string SpecialRequirement { get; set; } // SpecialRequirement (length: 250)
        public string ProductNumber { get; set; } // ProductNumber (length: 30)
        public int? ManyProducts { get; set; } // ManyProducts
        public int? LocationId { get; set; } // LocationID
        public int? Remain { get; set; } // Remain
        public float? WeightPerPackage { get; set; } // WeightPerPackage
        public int? PalletId { get; set; } // PalletID
        public DateTime? ProductionDate { get; set; } // ProductionDate
        public DateTime? UseByDate { get; set; } // UseByDate
        public string PalletRemark { get; set; } // Pallet_Remark (length: 250)
        public string RoDetailsRemark { get; set; } // RODetails_remark (length: 250)
        public string DoDetailsRemark { get; set; } // DODetails_remark (length: 250)
        public string CustomerRef { get; set; } // CustomerRef (length: 250)
        public double? DoDetailWeight { get; set; } // DoDetailWeight
    }

    // tmpLabelPrint
    public class TmpLabelPrint
    {
        public string CartonIndex { get; set; } // CartonIndex (length: 50)
        public string BasketIndex { get; set; } // BasketIndex (length: 50)
        public short Id { get; set; } // ID (Primary key)
        public int? SalesOrderProductId { get; set; } // SalesOrderProductID
    }

    // tmpProductUnMatchBigC
    public class TmpProductUnMatchBigC
    {
        public string ProductNumber { get; set; } // PRODUCT_NUMBER (length: 30)
        public string ProductName { get; set; } // PRODUCT_NAME (length: 100)
        public int Xxx { get; set; } // XXX (Primary key)
        public int Yyy { get; set; } // YYY (Primary key)
        public int Zzz { get; set; } // ZZZ (Primary key)
        public string Tt { get; set; } // TT (Primary key) (length: 2)
        public int Tttt { get; set; } // TTTT (Primary key)
        public int Ttttt { get; set; } // TTTTT (Primary key)
        public int Uw { get; set; } // UW (Primary key)
    }

    // tmpStoreVM
    public class TmpStoreVm
    {
        public string Id { get; set; } // id (Primary key) (length: 25)
        public string Name { get; set; } // name (length: 200)
        public string Adr { get; set; } // adr (length: 500)
    }

    // TracingHistories
    public class TracingHistory
    {
        public long TracingHistoryId { get; set; } // TracingHistoryID (Primary key)
        public string OrderNumber { get; set; } // OrderNumber (length: 30)
        public long? OrderId { get; set; } // OrderID
        public string OrderType { get; set; } // OrderType (length: 30)
        public DateTime CreatedTime { get; set; } // CreatedTime
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public decimal? Quantity { get; set; } // Quantity
        public byte[] Ts { get; set; } // TS
        public long? OrderDetailId { get; set; } // OrderDetailID
        public string Description { get; set; } // Description (length: 300)

        public TracingHistory()
        {
            CreatedTime = DateTime.Now;
        }
    }

    // Transporters
    public class Transporter
    {
        public int TransporterId { get; set; } // TransporterID (Primary key)
        public string TransporterName { get; set; } // TransporterName (length: 100)
        public string Address { get; set; } // Address (length: 100)
        public string Phone { get; set; } // Phone (length: 100)
        public string Moblie { get; set; } // Moblie (length: 100)
        public string Contract { get; set; } // Contract (length: 100)
        public string Fax { get; set; } // Fax (length: 100)
        public string Email { get; set; } // Email (length: 100)
        public string CreatedBy { get; set; } // CreatedBy (length: 20)
        public DateTime? CreatedTime { get; set; } // CreatedTime

        public Transporter()
        {
            CreatedTime = DateTime.Now;
        }
    }

    // Trips
    public class Trip
    {
        public int TripId { get; set; } // TripID (Primary key)
        public string TripNumber { get; set; } // TripNumber (length: 16)
        public DateTime TripDate { get; set; } // TripDate
        public int? TruckId { get; set; } // TruckID
        public int? RouteId { get; set; } // RouteID
        public string TripCreatedBy { get; set; } // TripCreatedBy (length: 200)
        public DateTime? CreatedTime { get; set; } // CreatedTime

        /// <summary>
        /// TimeOut: Xe đi
        /// </summary>
        public DateTime? TruckStartTime { get; set; } // TruckStartTime

        /// <summary>
        /// TimeIn
        /// </summary>
        public DateTime? TruckArriveTime { get; set; } // TruckArriveTime
        public DateTime? TripConfirmedTime { get; set; } // TripConfirmedTime
        public bool TripConfirmed { get; set; } // TripConfirmed
        public string TripRemark { get; set; } // TripRemark (length: 200)
        public string DriverName { get; set; } // DriverName (length: 50)
        public string TripSealNumber { get; set; } // TripSealNumber (length: 40)
        public byte[] Ts { get; set; } // TS
        public int? TruckInOutId { get; set; } // TruckInOutID
        public string TripTruckNumber { get; set; } // TripTruckNumber (length: 30)

        /// <summary>
        /// 2: Frozen&amp;Chilled; 3: Fish
        /// </summary>
        public byte? OperationCategoryId { get; set; } // OperationCategoryID
        public DateTime? StartWorkingTime { get; set; } // StartWorkingTime
        public DateTime? EndWorkingTime { get; set; } // EndWorkingTime
        public string DockNumber { get; set; } // DockNumber (length: 5)
        public int? TransporterId { get; set; } // TransporterID
        public short? HandlingOvertimeCategoryId { get; set; } // HandlingOvertimeCategoryID
        public int? CustomerId { get; set; } // CustomerID
        public int? TotalSeal { get; set; } // TotalSeal
        public string Transport { get; set; } // Transport (length: 100)

        public Trip()
        {
            CreatedTime = DateTime.Now;
            TripConfirmed = false;
        }
    }

    // TripDetails
    public class TripDetail
    {
        public int TripDetailId { get; set; } // TripDetailID (Primary key)
        public int TripId { get; set; } // TripID
        public string TripDetailRemark { get; set; } // TripDetailRemark (length: 200)
        public bool CheckDelete { get; set; } // CheckDelete
        public int? StoreId { get; set; } // StoreID
        public int? ActualCarton { get; set; } // ActualCarton
        public decimal? ActualWeight { get; set; } // ActualWeight
        public string OrderNumber { get; set; } // OrderNumber (length: 16)
        public byte? StoreOrdinalNumber { get; set; } // StoreOrdinalNumber
        public short? Pallets { get; set; } // Pallets
        public decimal? ActualVolume { get; set; } // ActualVolume

        /// <summary>
        /// Basket 2.5ks
        /// </summary>
        public int? Basket1 { get; set; } // Basket1

        /// <summary>
        /// Basket 1.6ks
        /// </summary>
        public int? Basket2 { get; set; } // Basket2
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public decimal? GrossWeight { get; set; } // GrossWeight
        public int? BasketId { get; set; } // BasketID
        public int? BasketQuantity { get; set; } // BasketQuantity

        public TripDetail()
        {
            CheckDelete = false;
            CreatedTime = DateTime.Now;
        }
    }

    // ViewCustomers
    public class ViewCustomer
    {
        public Guid CustomerId { get; set; } // CustomerID
        public int? CustomerLocalId { get; set; } // CustomerLocalID
        public string CustomerNumber { get; set; } // CustomerNumber (length: 50)
        public string CustomerName { get; set; } // CustomerName (length: 80)
        public string CustomerFullName { get; set; } // CustomerFullName (length: 150)
        public string Initial { get; set; } // Initial (length: 3)
        public Guid? CustomerMainId { get; set; } // CustomerMainID
        public string Address { get; set; } // Address (length: 150)
        public string CustomerType { get; set; } // CustomerType (length: 50)
        public string PrimaryContact { get; set; } // PrimaryContact (length: 150)
        public string Phone1 { get; set; } // Phone1 (length: 50)
        public string Phone2 { get; set; } // Phone2 (length: 50)
        public string Mobile { get; set; } // Mobile (length: 20)
        public string Fax { get; set; } // Fax (length: 50)
        public string Email { get; set; } // Email (length: 3000)
        public string OtherContacts { get; set; } // OtherContacts (length: 150)
        public string MarketingInfor { get; set; } // MarketingInfor (length: 4000)
        public string CustomerInvoiceName { get; set; } // CustomerInvoiceName (length: 150)
        public string CustomerInvoiceAddress { get; set; } // CustomerInvoiceAddress (length: 150)
        public string CustomerInvoiceTaxCode { get; set; } // CustomerInvoiceTaxCode (length: 20)
        public bool CustomerDiscontinued { get; set; } // CustomerDiscontinued
        public byte CustomerCategory { get; set; } // CustomerCategory
        public byte? CustomerGroup { get; set; } // CustomerGroup
        public bool? SendNote { get; set; } // SendNote
        public int? CustomerSubId { get; set; } // CustomerSubID
        public bool? Hold { get; set; } // Hold
        public string HoldMessage { get; set; } // HoldMessage (length: 500)
        public int? HoldLimitWeight { get; set; } // HoldLimitWeight
        public byte[] Ts { get; set; } // ts
        public bool? HomeLocationChange { get; set; } // HomeLocationChange
        public bool? DispatchingByClient { get; set; } // DispatchingByClient
        public string CustomerPalletType { get; set; } // CustomerPalletType (length: 4)
        public string Website { get; set; } // Website (length: 100)
        public string EmailBilling { get; set; } // EmailBilling (length: 500)
        public byte? CustomerDispatchType { get; set; } // CustomerDispatchType
        public bool? IsAllowEdi { get; set; } // IsAllowEDI
        public string CustomerTaxGroup { get; set; } // CustomerTaxGroup (length: 100)
        public bool? BarcodeScanRequire { get; set; } // BarcodeScanRequire
        public bool? PrintLabelRemainRequire { get; set; } // PrintLabelRemainRequire
        public short? DefaultProcessTime { get; set; } // DefaultProcessTime
        public int StoreId { get; set; } // StoreID
        public byte? CustomerPotentialCategoryId { get; set; } // CustomerPotentialCategoryID
        public bool? IsAllowOnlineReport { get; set; } // IsAllowOnlineReport
        public Guid HomeLocation1 { get; set; } // HomeLocation1
        public Guid HomeLocation2 { get; set; } // HomeLocation2
        public string CustId { get; set; } // CustId (length: 250)
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public byte? CustomerStatus { get; set; } // CustomerStatus
        public string OpportunityType { get; set; } // OpportunityType (length: 255)
        public decimal? OpportunityProbability { get; set; } // OpportunityProbability
        public string OpportunityAssignedToUser { get; set; } // OpportunityAssignedToUser (length: 100)
        public string CustomerNumberAccounting { get; set; } // CustomerNumberAccounting (length: 50)
        public bool? IsCustomerTest { get; set; } // IsCustomerTest
        public Guid? CustomerAssignedTo { get; set; } // CustomerAssignedTo
        public int? CustomerAssignedTo0 { get; set; } // CustomerAssignedTo0
        public int? IsCheckOutRequire { get; set; } // IsCheckOutRequire
        public float? TemperatureFrom { get; set; } // TemperatureFrom
        public float? TemperatureTo { get; set; } // TemperatureTo
        public float? HumidityFrom { get; set; } // HumidityFrom
        public float? HumidityTo { get; set; } // HumidityTo
        public string CustomerNumberErp { get; set; } // CustomerNumberERP (length: 50)
    }

    // ViewEmployees
    public class ViewEmployee
    {
        public int EmployeeId { get; set; } // EmployeeID
        public string FirstName { get; set; } // FirstName (length: 50)
        public string LastName { get; set; } // LastName (length: 50)
        public DateTime? DateOfBirth { get; set; } // DateOfBirth
        public short? Status { get; set; } // Status
        public string Education { get; set; } // Education (length: 20)
        public string Position { get; set; } // Position (length: 50)
        public DateTime? DateOfEntry { get; set; } // DateOfEntry
        public string Address { get; set; } // Address (length: 250)
        public string Phone { get; set; } // Phone (length: 50)
        public string Mobile { get; set; } // Mobile (length: 50)
        public string IdCardNumber { get; set; } // IDCardNumber (length: 50)
        public string Email { get; set; } // Email (length: 50)
        public string Photograph { get; set; } // Photograph (length: 50)
        public bool Active { get; set; } // Active
        public bool ContractPermanent { get; set; } // ContractPermanent
        public int ManagementLevel { get; set; } // ManagementLevel
        public DateTime? ContractDate { get; set; } // ContractDate
        public int PositionId { get; set; } // PositionID
        public string VietnamName { get; set; } // VietnamName (length: 50)
        public string BikeNumber { get; set; } // BikeNumber (length: 50)
        public bool BikeUse { get; set; } // BikeUse
        public string VietnamPosition { get; set; } // VietnamPosition (length: 50)
        public string InOutCardNumber { get; set; } // InOutCardNumber (length: 5)
        public byte? ShiftId { get; set; } // ShiftID
        public byte? Grade { get; set; } // Grade
        public byte? Department { get; set; } // Department
        public string AddressNow { get; set; } // AddressNow (length: 250)
        public bool PerformanceStatus { get; set; } // PerformanceStatus
        public DateTime? IdCardIssueDate { get; set; } // IDCardIssueDate
        public byte? StoreId { get; set; } // StoreID
        public bool Sex { get; set; } // Sex
        public byte[] Ts { get; set; } // TS
        public string IdCardIssuePlace { get; set; } // IDCardIssuePlace (length: 50)
        public bool MonthlyAdvanceRequired { get; set; } // MonthlyAdvanceRequired
        public int? MonthlyAdvanceAmount { get; set; } // MonthlyAdvanceAmount
        public string ContractNumber { get; set; } // ContractNumber (length: 50)
        public string PersonnalTaxCode { get; set; } // PersonnalTaxCode (length: 25)
        public string BankAccountNumber { get; set; } // BankAccountNumber (length: 25)
        public DateTime? ContractDateFirst { get; set; } // ContractDateFirst
        public string Remark { get; set; } // Remark (length: 100)
        public string LunchPlace { get; set; } // LunchPlace (length: 2)
        public int? ReportTo { get; set; } // ReportTo
    }

    // ViewOrderDetailsLast3days
    public class ViewOrderDetailsLast3Days
    {
        public DateTime? SalesOrderDate { get; set; } // SalesOrderDate
        public string StoreNumber { get; set; } // StoreNumber (length: 25)
        public string StoreName { get; set; } // StoreName (length: 50)
        public string ProductNumber { get; set; } // ProductNumber (length: 30)
        public string ProductName { get; set; } // ProductName (length: 100)
        public decimal? CartonWeight { get; set; } // CartonWeight
        public string SalesOrderProductRemark { get; set; } // SalesOrderProductRemark (length: 200)
        public int? DispatchedActualCarton { get; set; } // DispatchedActualCarton
        public decimal? DispatchedActualWeight { get; set; } // DispatchedActualWeight
        public int? StoreBookingCarton { get; set; } // StoreBookingCarton
        public decimal? StoreBookingWeight { get; set; } // StoreBookingWeight
        public byte? Status { get; set; } // Status
        public string SalesOrderRemark { get; set; } // SalesOrderRemark (length: 200)
        public string TruckNumber { get; set; } // TruckNumber (length: 50)
        public string SoNo { get; set; } // SO_NO (length: 50)
        public int SalesOrderId { get; set; } // SalesOrderID
        public string SalesOrderNumber { get; set; } // SalesOrderNumber (length: 16)
    }

    // ViewPurchasingStoreOrderDetails
    public class ViewPurchasingStoreOrderDetail
    {
        public int SupplierNumber { get; set; } // SupplierNumber
        public string SupplierName { get; set; } // SupplierName (length: 100)
        public string PurchasingOrderNumber { get; set; } // PurchasingOrderNumber (length: 16)
        public DateTime PurchasingOrderDate { get; set; } // PurchasingOrderDate
        public string PurchasingOrderRemark { get; set; } // PurchasingOrderRemark (length: 200)
        public byte? ReceivingOrdinalNumber { get; set; } // ReceivingOrdinalNumber
        public string ProductName { get; set; } // ProductName (length: 100)
        public decimal? ReceivedActualWeight { get; set; } // ReceivedActualWeight
        public decimal? ReceivedActualVolume { get; set; } // ReceivedActualVolume
        public int? ReceivedActualCarton { get; set; } // ReceivedActualCarton
        public string StoreNumber { get; set; } // StoreNumber (length: 25)
        public string StoreName { get; set; } // StoreName (length: 50)
        public string SoNo { get; set; } // SO_NO (length: 50)
        public DateTime? SalesOrderDate { get; set; } // SalesOrderDate
        public string TruckNumber { get; set; } // TruckNumber (length: 50)
        public string SalesOrderRemark { get; set; } // SalesOrderRemark (length: 200)
        public int? DispatchedActualCarton { get; set; } // DispatchedActualCarton
        public decimal? DispatchedActualWeight { get; set; } // DispatchedActualWeight
        public decimal? DispatchedActualVolume { get; set; } // DispatchedActualVolume
        public decimal? DispatchedGrossWeight { get; set; } // DispatchedGrossWeight
        public string SalesOrderProductRemark { get; set; } // SalesOrderProductRemark (length: 200)
    }

    // ViewSalesOrderDetailsLast45Days
    public class ViewSalesOrderDetailsLast45Days
    {
        public string SalesOrderNumber { get; set; } // SalesOrderNumber (length: 16)
        public DateTime? SalesOrderDate { get; set; } // SalesOrderDate
        public string StoreNumber { get; set; } // StoreNumber (length: 25)
        public string StoreName { get; set; } // StoreName (length: 500)
        public string SupplierNumber { get; set; } // SupplierNumber (length: 30)
        public string SupplierName { get; set; } // SupplierName (length: 100)
        public string ProductName { get; set; } // ProductName (length: 100)
        public int? ProductCategoryId { get; set; } // ProductCategoryID
        public string ProductNumber { get; set; } // ProductNumber (length: 30)
        public decimal? DispatchedActualWeight { get; set; } // DispatchedActualWeight
        public int? DispatchedActualCarton { get; set; } // DispatchedActualCarton
        public decimal? NetPerCarton { get; set; } // NetPerCarton
        public int? UnitPerCarton { get; set; } // UnitPerCarton
        public byte ProccessingCatergoryId { get; set; } // ProccessingCatergoryID
        public DateTime PurchasingOrderDate { get; set; } // PurchasingOrderDate
        public int? CustomerId { get; set; } // CustomerID
    }

    // ViewSalesOrderID
    public class ViewSalesOrderId
    {
        public int? SalesOrderId { get; set; } // SalesOrderID
        public DateTime? SalesOrderDate { get; set; } // SalesOrderDate
        public int StoreId { get; set; } // StoreID
        public byte? OperationCategoryId { get; set; } // OperationCategoryID
    }

    // ViewStores
    public class ViewStore
    {
        public string StoreNumber { get; set; } // StoreNumber (length: 30)
        public string StoreName { get; set; } // StoreName (length: 500)
        public string Note { get; set; } // Note (length: 5)
        public string Domain { get; set; } // Domain (length: 50)
    }

    // ViewStore_Baskets
    public class ViewStoreBasket
    {
        public string StoreNumber { get; set; } // StoreNumber (length: 30)
        public string StoreName { get; set; } // StoreName (length: 500)
        public int BasketId { get; set; } // BasketID
        public string BasketNumber { get; set; } // BasketNumber (length: 30)
        public string BasketName { get; set; } // BasketName (length: 50)
        public string Note { get; set; } // Note (length: 5)
        public string Domain { get; set; } // Domain (length: 50)
    }

    // ViewStoreListVinmart
    public class ViewStoreListVinmart
    {
        public string StoreNumber { get; set; } // StoreNumber (length: 50)
        public string StoreName { get; set; } // StoreName (length: 250)
        public string StoreContact { get; set; } // StoreContact (length: 250)
        public string StoreType { get; set; } // StoreType (length: 3)
    }

    // Web_ViewListSuppAndStore
    public class WebViewListSuppAndStore
    {
        public int StoreId { get; set; } // StoreID
        public string StoreNumber { get; set; } // StoreNumber (length: 30)
        public string StoreName { get; set; } // StoreName (length: 500)
        public string ToWhere { get; set; } // ToWhere (length: 30)
        public long? Rn { get; set; } // rn
    }

    // WMS_BigC_Suppliers
    public class WmsBigCSupplier
    {
        public int SupplierId { get; set; } // SupplierID
        public string SupplierNumber { get; set; } // SupplierNumber (length: 7)
        public string SupplierName { get; set; } // SupplierName (length: 50)
        public string SupplierNameShort { get; set; } // SupplierNameShort (length: 50)
        public string SupplierAddress { get; set; } // SupplierAddress (length: 50)
    }

    // WMS_ConnectionStrings
    public class WmsConnectionString
    {
        public int ConnectionStringId { get; set; } // ConnectionStringID
        public string ConnectionString { get; set; } // ConnectionString (length: 150)
        public string Database { get; set; } // Database (length: 150)
        public bool? IsDefault { get; set; } // IsDefault
        public string Application { get; set; } // Application (length: 50)
        public string Type { get; set; } // Type (length: 50)
        public bool? IsCurrent { get; set; } // IsCurrent
    }

    // WMS_Customers
    public class WmsCustomer
    {
        public Guid CustomerId { get; set; } // CustomerID
        public string CustomerNumber { get; set; } // CustomerNumber (length: 50)
        public string CustomerName { get; set; } // CustomerName (length: 80)
        public string Initial { get; set; } // Initial (length: 3)
        public string Address { get; set; } // Address (length: 150)
        public string CustomerType { get; set; } // CustomerType (length: 50)
        public string PrimaryContact { get; set; } // PrimaryContact (length: 150)
        public string Phone1 { get; set; } // Phone1 (length: 50)
        public string Phone2 { get; set; } // Phone2 (length: 50)
        public string Mobile { get; set; } // Mobile (length: 20)
        public string Fax { get; set; } // Fax (length: 50)
        public string Email { get; set; } // Email (length: 3000)
        public string OtherContacts { get; set; } // OtherContacts (length: 150)
        public string MarketingInfor { get; set; } // MarketingInfor (length: 4000)
        public string CustomerInvoiceName { get; set; } // CustomerInvoiceName (length: 150)
        public string CustomerInvoiceAddress { get; set; } // CustomerInvoiceAddress (length: 150)
        public string CustomerInvoiceTaxCode { get; set; } // CustomerInvoiceTaxCode (length: 20)
        public bool CustomerDiscontinued { get; set; } // CustomerDiscontinued
        public byte CustomerCategory { get; set; } // CustomerCategory
        public byte? CustomerGroup { get; set; } // CustomerGroup
        public Guid? CustomerMainId { get; set; } // CustomerMainID
        public bool? SendNote { get; set; } // SendNote
        public int? CustomerSubId { get; set; } // CustomerSubID
        public bool? Hold { get; set; } // Hold
        public string HoldMessage { get; set; } // HoldMessage (length: 500)
        public byte[] Ts { get; set; } // ts
        public bool? HomeLocationChange { get; set; } // HomeLocationChange
        public bool? DispatchingByClient { get; set; } // DispatchingByClient
        public string CustomerPalletType { get; set; } // CustomerPalletType (length: 4)
        public string Website { get; set; } // Website (length: 100)
        public string EmailBilling { get; set; } // EmailBilling (length: 500)
        public byte? CustomerDispatchType { get; set; } // CustomerDispatchType
        public bool? IsAllowEdi { get; set; } // IsAllowEDI
        public int? HoldLimitWeight { get; set; } // HoldLimitWeight
        public string CustomerTaxGroup { get; set; } // CustomerTaxGroup (length: 100)
        public int? CustomerLocalId { get; set; } // CustomerLocalID
        public bool? BarcodeScanRequire { get; set; } // BarcodeScanRequire
        public bool? PrintLabelRemainRequire { get; set; } // PrintLabelRemainRequire
        public short? DefaultProcessTime { get; set; } // DefaultProcessTime
        public int StoreId { get; set; } // StoreID
        public byte? CustomerPotentialCategoryId { get; set; } // CustomerPotentialCategoryID
        public bool? IsAllowOnlineReport { get; set; } // IsAllowOnlineReport
        public Guid HomeLocation1 { get; set; } // HomeLocation1
        public Guid HomeLocation2 { get; set; } // HomeLocation2
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public byte? CustomerStatus { get; set; } // CustomerStatus
        public string OpportunityType { get; set; } // OpportunityType (length: 255)
        public decimal? OpportunityProbability { get; set; } // OpportunityProbability
        public string OpportunityAssignedToUser { get; set; } // OpportunityAssignedToUser (length: 100)
        public string CustomerNumberAccounting { get; set; } // CustomerNumberAccounting (length: 50)
        public bool? IsCustomerTest { get; set; } // IsCustomerTest
        public Guid? CustomerAssignedTo { get; set; } // CustomerAssignedTo
        public int? CustomerAssignedTo0 { get; set; } // CustomerAssignedTo0
        public int? IsCheckOutRequire { get; set; } // IsCheckOutRequire
        public float? TemperatureFrom { get; set; } // TemperatureFrom
        public float? TemperatureTo { get; set; } // TemperatureTo
        public float? HumidityFrom { get; set; } // HumidityFrom
        public float? HumidityTo { get; set; } // HumidityTo
        public string CustomerNumberErp { get; set; } // CustomerNumberERP (length: 50)
    }

    // WMS_CustomerClients
    public class WmsCustomerClient
    {
        public Guid CustomerClientId { get; set; } // CustomerClientID
        public Guid CustomerId { get; set; } // CustomerID
        public string CustomerClientCode { get; set; } // CustomerClientCode (length: 255)
        public string CustomerClientName { get; set; } // CustomerClientName (length: 255)
        public string CustomerClientAddress { get; set; } // CustomerClientAddress (length: 500)
        public string CustomerClientPhone { get; set; } // CustomerClientPhone (length: 255)
        public string CustomerClientEmail { get; set; } // CustomerClientEmail (length: 255)
        public string CustomerClientContacts { get; set; } // CustomerClientContacts (length: 255)
        public string CustomerClientDescriptions { get; set; } // CustomerClientDescriptions (length: 1000)
        public string CustomerClientTaxName { get; set; } // CustomerClientTaxName (length: 255)
        public string CustomerClientTaxCode { get; set; } // CustomerClientTaxCode (length: 255)
        public string CustomerClientDeliveryAddress { get; set; } // CustomerClientDeliveryAddress (length: 500)
        public Guid? CustomerClientMainId { get; set; } // CustomerClientMainID
        public int? CustomerClientCodeFbv { get; set; } // CustomerClientCodeFBV
        public string CustomerClientMain { get; set; } // CustomerClientMain (length: 255)
        public float? DiscountAmountPercentage { get; set; } // DiscountAmountPercentage
        public short? CustomerClientCreditTerm { get; set; } // CustomerClientCreditTerm
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public string CreatedBy { get; set; } // CreatedBy (length: 255)
        public string CustomerClientBuyer { get; set; } // CustomerClientBuyer (length: 150)
    }

    // WMS_DispatchingOrders
    public class WmsDispatchingOrder
    {
        public Guid DispatchingOrderId { get; set; } // DispatchingOrderID
        public string DispatchingOrderNumber { get; set; } // DispatchingOrderNumber (length: 20)
        public Guid CustomerId { get; set; } // CustomerID
        public DateTime DispatchingOrderDate { get; set; } // DispatchingOrderDate
        public bool Status { get; set; } // Status
        public decimal? Temperature { get; set; } // Temperature
        public string SealNumber { get; set; } // SealNumber (length: 40)
        public DateTime? StartTime { get; set; } // StartTime
        public DateTime? EndTime { get; set; } // EndTime
        public byte? DispatchingOrderProgress { get; set; } // DispatchingOrderProgress
        public Guid? CustomerClientId { get; set; } // CustomerClientID
        public string InternalRemark { get; set; } // InternalRemark (length: 300)
        public int? DispatchingOrderLocalId { get; set; } // DispatchingOrderLocalID
        public Guid? ServicesDefinitionId { get; set; } // ServicesDefinitionID
        public string DispatchingOrderRemark { get; set; } // DispatchingOrderRemark (length: 250)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public string CreatedBy { get; set; } // CreatedBy (length: 10)
        public bool? Electricity { get; set; } // Electricity
        public double? ProgressPercentage { get; set; } // ProgressPercentage
        public bool? IsAttachment { get; set; } // IsAttachment
        public string CustomerOrderNumber { get; set; } // CustomerOrderNumber (length: 32)
        public string VehicleNumber { get; set; } // VehicleNumber (length: 50)
        public int? TimeSlotId { get; set; } // TimeSlotID
        public int? DockDoorId { get; set; } // DockDoorID
        public double? PickingPercentage { get; set; } // PickingPercentage
        public bool? IsDeleted { get; set; } // IsDeleted
        public string CustPoNumber { get; set; } // CUST_PO_NUMBER (length: 50)
        public Guid? RouteId { get; set; } // RouteID
        public int? TransporterId { get; set; } // TransporterID
        public double? PackingPercentage { get; set; } // PackingPercentage
        public int? PerformanceCategoryId { get; set; } // PerformanceCategoryID
        public Guid? WorkDefinitionId { get; set; } // WorkDefinitionID
        public string DeliveryId { get; set; } // DeliveryID (length: 32)
        public byte? OrderTypeId { get; set; } // OrderTypeID
    }

    // WMS_DispatchingOrderDetails
    public class WmsDispatchingOrderDetail
    {
        public Guid DispatchingOrderDetailId { get; set; } // DispatchingOrderDetailID
        public Guid PalletId { get; set; } // PalletID
        public int PackageQuantity { get; set; } // PackageQuantity
        public string ReceivingOrderNumber { get; set; } // ReceivingOrderNumber (length: 20)
        public byte? Status { get; set; } // Status
        public byte[] Ts { get; set; } // TS
        public int? UnitQuantity { get; set; } // UnitQuantity
        public float? PalletWeight { get; set; } // PalletWeight
        public string DispatchingOrderDetailRemark { get; set; } // DispatchingOrderDetailRemark (length: 200)
        public bool? Checked { get; set; } // Checked
    }

    // WMS_DispatchingProducts
    public class WmsDispatchingProduct
    {
        public Guid DispatchingProductId { get; set; } // DispatchingProductID
        public Guid DispatchingOrderId { get; set; } // DispatchingOrderID
        public Guid ProductId { get; set; } // ProductID
        public short? PackagesPerPallet { get; set; } // PackagesPerPallet
        public int TotalPackages { get; set; } // TotalPackages
        public float? WeightPerPackage { get; set; } // WeightPerPackage
        public int? TransactionId { get; set; } // TransactionID
        public byte? Status { get; set; } // Status
        public string Remark { get; set; } // Remark (length: 50)
        public string UserId { get; set; } // UserID (length: 100)
        public short? Plts { get; set; } // Plts
        public string CustomerRef { get; set; } // CustomerRef (length: 100)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public byte[] Ts { get; set; } // TS
        public decimal? TotalWeight { get; set; } // TotalWeight
        public int? TotalUnits { get; set; } // TotalUnits
        public short? UnitPerPackage { get; set; } // UnitPerPackage
        public string CreatedBy { get; set; } // CreatedBy (length: 25)
        public float? Temperature { get; set; } // Temperature
        public DateTime? ConfirmedTime { get; set; } // ConfirmedTime
        public byte? SendStatus { get; set; } // SendStatus
        public DateTime? SendTime { get; set; } // SendTime
        public long? CustomerRefDetailId { get; set; } // CustomerRef_DetailID
        public double? PackingPercentage { get; set; } // PackingPercentage
        public string CustomerRef2 { get; set; } // CustomerRef2 (length: 100)
        public string Message { get; set; } // Message (length: 255)
        public int? DeliveryActual { get; set; } // DeliveryActual
    }

    // WMS_Pallets
    public class WmsPallet
    {
        public int PalletId { get; set; } // PalletID
        public string Label { get; set; } // Label (length: 15)
        public short OriginalQuantity { get; set; } // OriginalQuantity
        public short AfterDpQuantity { get; set; } // AfterDPQuantity
        public short CurrentQuantity { get; set; } // CurrentQuantity
        public bool OnHold { get; set; } // OnHold
        public int ReceivingOrderDetailId { get; set; } // ReceivingOrderDetailID
        public int LocationId { get; set; } // LocationID
        public bool Status { get; set; } // status
        public bool CanMove { get; set; } // CanMove
        public string Remark { get; set; } // Remark (length: 800)
        public bool CanNotAdd { get; set; } // CanNotAdd
        public byte[] Ts { get; set; } // TS
        public int? UnitQuantity { get; set; } // UnitQuantity
        public float? PalletWeight { get; set; } // PalletWeight
        public byte? PalletStatus { get; set; } // PalletStatus
    }

    // WMS_ReceivingOrders
    public class WmsReceivingOrder
    {
        public int ReceivingOrderId { get; set; } // ReceivingOrderID
        public string ReceivingOrderNumber { get; set; } // ReceivingOrderNumber (length: 16)
        public int CustomerId { get; set; } // CustomerID
        public string CustomerNumber { get; set; } // CustomerNumber (length: 14)
        public DateTime? ReceivingOrderDate { get; set; } // ReceivingOrderDate
        public bool Status { get; set; } // Status
        public float? Temperature { get; set; } // Temperature
        public string SpecialRequirement { get; set; } // SpecialRequirement (length: 250)
        public DateTime? ReceivingCreatedTime { get; set; } // ReceivingCreatedTime
        public string Owner { get; set; } // Owner (length: 10)
        public string DockNumber { get; set; } // DockNumber (length: 2)
        public DateTime? StartTime { get; set; } // StartTime
        public DateTime? EndTime { get; set; } // EndTime
        public byte? ReceivingOrderProgress { get; set; } // ReceivingOrderProgress
        public string SealNumber { get; set; } // SealNumber (length: 12)
        public byte[] Ts { get; set; } // TS
        public string BlNumber { get; set; } // BLNumber (length: 50)
        public string InvoiceNumber { get; set; } // InvoiceNumber (length: 50)
        public DateTime? ContractDate { get; set; } // ContractDate
        public string LadingReportNumber { get; set; } // LadingReportNumber (length: 50)
        public string CustomsDeclarationNumber { get; set; } // CustomsDeclarationNumber (length: 70)
        public string ContractNumber { get; set; } // ContractNumber (length: 70)
        public string Origin { get; set; } // Origin (length: 50)
        public short? HandlingOvertimeCategoryId { get; set; } // HandlingOvertimeCategoryID
        public string InternalRemark { get; set; } // InternalRemark (length: 300)
    }

    // WMS_ReceivingOrderDetails
    public class WmsReceivingOrderDetail
    {
        public int ReceivingOrderDetailId { get; set; } // ReceivingOrderDetailID
        public int ReceivingOrderId { get; set; } // ReceivingOrderID
        public string ProductNumber { get; set; } // ProductNumber (length: 30)
        public string ReceivingOrderNumber { get; set; } // ReceivingOrderNumber (length: 20)
        public string ProductName { get; set; } // ProductName (length: 100)
        public int ProductId { get; set; } // ProductID
        public short PackagesPerPallet { get; set; } // PackagesPerPallet
        public short TotalPackages { get; set; } // TotalPackages
        public float WeightPerPackage { get; set; } // WeightPerPackage
        public DateTime? ProductionDate { get; set; } // ProductionDate
        public DateTime? UseByDate { get; set; } // UseByDate
        public string Remark { get; set; } // Remark (length: 50)
        public int? TransactionId { get; set; } // TransactionID
        public string CustomerRef { get; set; } // CustomerRef (length: 30)
        public byte Status { get; set; } // Status
        public float? PalletHeight { get; set; } // PalletHeight
        public string UserName { get; set; } // UserName (length: 50)
        public DateTime? CreatedTime { get; set; } // CreatedTime
        public short? Plts { get; set; } // Plts
        public byte[] Ts { get; set; } // TS
        public int? TotalUnits { get; set; } // TotalUnits
        public decimal? TotalWeight { get; set; } // TotalWeight
        public short? PackingListQuantity { get; set; } // PackingListQuantity
        public short? UnitPerPackage { get; set; } // UnitPerPackage
        public string CreatedBy { get; set; } // CreatedBy (length: 25)
        public string Origin { get; set; } // Origin (length: 50)
    }


    #endregion

    #region POCO Configuration

    // AnimalQuarantines
    public class AnimalQuarantineConfiguration : IEntityTypeConfiguration<AnimalQuarantine>
    {
        public void Configure(EntityTypeBuilder<AnimalQuarantine> builder)
        {
            builder.ToTable("AnimalQuarantines", "dbo");
            builder.HasKey(x => x.AnimalQuarantineId).HasName("PK_QuarantinesAnimal").IsClustered();

            builder.Property(x => x.AnimalQuarantineId).HasColumnName(@"AnimalQuarantineID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.QuarantineCode).HasColumnName(@"QuarantineCode").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeID").HasColumnType("int").IsRequired();
            builder.Property(x => x.SupplierId).HasColumnName(@"SupplierID").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.CheckDay).HasColumnName(@"CheckDay").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CheckTime).HasColumnName(@"CheckTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.OperationCategoryId).HasColumnName(@"OperationCategoryID").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Notes).HasColumnName(@"Notes").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.AnimalQuarantineConfirmed).HasColumnName(@"AnimalQuarantineConfirmed").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Ts).HasColumnName(@"ts").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.TruckNumber).HasColumnName(@"TruckNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.OrderText).HasColumnName(@"OrderText").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.Category).HasColumnName(@"Category").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
        }
    }

    // AnimalQuarantineDetails
    public class AnimalQuarantineDetailConfiguration : IEntityTypeConfiguration<AnimalQuarantineDetail>
    {
        public void Configure(EntityTypeBuilder<AnimalQuarantineDetail> builder)
        {
            builder.ToTable("AnimalQuarantineDetails", "dbo");
            builder.HasKey(x => x.AnimalQuarantineDetailId).HasName("PK_QuarantinesAnimalDetails").IsClustered();

            builder.Property(x => x.AnimalQuarantineDetailId).HasColumnName(@"AnimalQuarantineDetailID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.AnimalQuarantineId).HasColumnName(@"AnimalQuarantineID").HasColumnType("int").IsRequired();
            builder.Property(x => x.TotalCartons).HasColumnName(@"TotalCartons").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TotalWeight).HasColumnName(@"TotalWeight").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.PackingUnit).HasColumnName(@"PackingUnit").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Uses).HasColumnName(@"Uses").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CountryOfOrigin).HasColumnName(@"CountryOfOrigin").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreId).HasColumnName(@"StoreID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ProductionDate).HasColumnName(@"ProductionDate").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.NameRowPublic).HasColumnName(@"NameRowPublic").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.NameRow).HasColumnName(@"NameRow").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.OrderNumber).HasColumnName(@"OrderNumber").HasColumnType("nvarchar(16)").IsRequired(false).HasMaxLength(16);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.Ts).HasColumnName(@"ts").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.CheckGroupName).HasColumnName(@"CheckGroupName").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.ProductId).HasColumnName(@"ProductID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CheckDetached).HasColumnName(@"CheckDetached").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Temperature).HasColumnName(@"Temperature").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);

            builder.HasIndex(x => x.AnimalQuarantineId).HasName("IX_AnimalQuarantineDetails");
            builder.HasIndex(x => x.StoreId).HasName("IX_AnimalQuarantineDetails_1");
        }
    }

    // AnimalQuarantineGroupRows
    public class AnimalQuarantineGroupRowConfiguration : IEntityTypeConfiguration<AnimalQuarantineGroupRow>
    {
        public void Configure(EntityTypeBuilder<AnimalQuarantineGroupRow> builder)
        {
            builder.ToTable("AnimalQuarantineGroupRows", "dbo");
            builder.HasKey(x => x.GroupRowId).HasName("PK_AnimalQuarantineGroupRows_1").IsClustered();

            builder.Property(x => x.GroupRowId).HasColumnName(@"GroupRowID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.StoreName).HasColumnName(@"StoreName").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.NameRow).HasColumnName(@"NameRow").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.TotalCartons).HasColumnName(@"TotalCartons").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.TotalWeight).HasColumnName(@"TotalWeight").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.PackingUnit).HasColumnName(@"PackingUnit").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Checkday).HasColumnName(@"Checkday").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.CustomerName).HasColumnName(@"CustomerName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SupplierCategoryName).HasColumnName(@"SupplierCategoryName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Uses).HasColumnName(@"Uses").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.NameRowPublic).HasColumnName(@"NameRowPublic").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
        }
    }

    // AnimalQuarantineProductGroups
    public class AnimalQuarantineProductGroupConfiguration : IEntityTypeConfiguration<AnimalQuarantineProductGroup>
    {
        public void Configure(EntityTypeBuilder<AnimalQuarantineProductGroup> builder)
        {
            builder.ToTable("AnimalQuarantineProductGroups", "dbo");
            builder.HasKey(x => x.AnimalQuarantineGroupRowId).HasName("PK_AnimalQuarantineGroupRows").IsClustered();

            builder.Property(x => x.AnimalQuarantineGroupRowId).HasColumnName(@"AnimalQuarantineGroupRowID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.StoreName).HasColumnName(@"StoreName").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.NameRow).HasColumnName(@"NameRow").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.PackingUnit).HasColumnName(@"PackingUnit").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CustomerName).HasColumnName(@"CustomerName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SupplierCategoryName).HasColumnName(@"SupplierCategoryName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.TotalCartons).HasColumnName(@"TotalCartons").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.TotalWeight).HasColumnName(@"TotalWeight").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Checkday).HasColumnName(@"Checkday").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.NameRowPublic).HasColumnName(@"NameRowPublic").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.Uses).HasColumnName(@"Uses").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.AnimalQuarantineId).HasColumnName(@"AnimalQuarantineID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.QuarantineCode).HasColumnName(@"QuarantineCode").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
        }
    }

    // Baskets
    public class BasketConfiguration : IEntityTypeConfiguration<Basket>
    {
        public void Configure(EntityTypeBuilder<Basket> builder)
        {
            builder.ToTable("Baskets", "dbo");
            builder.HasKey(x => x.BasketId).HasName("PK_Baskets").IsClustered();

            builder.Property(x => x.BasketId).HasColumnName(@"BasketID").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.BasketNumber).HasColumnName(@"BasketNumber").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
            builder.Property(x => x.BasketName).HasColumnName(@"BasketName").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.BasketNameVietnamese).HasColumnName(@"BasketNameVietnamese").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketRemark).HasColumnName(@"BasketRemark").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.BasketVolume).HasColumnName(@"BasketVolume").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Ts).HasColumnName(@"ts").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.BasketWeight).HasColumnName(@"BasketWeight").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.IsShow).HasColumnName(@"IsShow").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.Cbm).HasColumnName(@"CBM").HasColumnType("decimal(18,5)").IsRequired(false);

            builder.HasIndex(x => x.Sequence).HasName("IX_Baskets");
        }
    }

    // BasketMovements
    public class BasketMovementConfiguration : IEntityTypeConfiguration<BasketMovement>
    {
        public void Configure(EntityTypeBuilder<BasketMovement> builder)
        {
            builder.ToTable("BasketMovements", "dbo");
            builder.HasKey(x => x.BasketMovementId).HasName("PK_BasketMovements_1").IsClustered();

            builder.Property(x => x.BasketMovementId).HasColumnName(@"BasketMovementID").HasColumnType("bigint").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.BasketMovementNumber).HasColumnName(@"BasketMovementNumber").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.BasketMovementDate).HasColumnName(@"BasketMovementDate").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.BasketMovementRemark).HasColumnName(@"BasketMovementRemark").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.FromWhere).HasColumnName(@"FromWhere").HasColumnType("nvarchar(25)").IsRequired().HasMaxLength(25);
            builder.Property(x => x.ToWhere).HasColumnName(@"ToWhere").HasColumnType("nvarchar(25)").IsRequired().HasMaxLength(25);
            builder.Property(x => x.TruckNumber).HasColumnName(@"TruckNumber").HasColumnType("nvarchar(15)").IsRequired(false).HasMaxLength(15);
            builder.Property(x => x.TruckDriverName).HasColumnName(@"TruckDriverName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.TruckTemp).HasColumnName(@"TruckTemp").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Confirmed).HasColumnName(@"Confirmed").HasColumnType("bit").IsRequired();
            builder.Property(x => x.WorkerName).HasColumnName(@"WorkerName").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.Ts).HasColumnName(@"ts").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.BasketMovementType).HasColumnName(@"BasketMovementType").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.BasketReceivedConfirmed).HasColumnName(@"BasketReceivedConfirmed").HasColumnType("bit").IsRequired();
            builder.Property(x => x.BasketReceivedBy).HasColumnName(@"BasketReceivedBy").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.BasketReceivedConfirmedTime).HasColumnName(@"BasketReceivedConfirmedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.OrderNumber).HasColumnName(@"OrderNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Tmpfrom).HasColumnName(@"Tmpfrom").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Tmpto).HasColumnName(@"Tmpto").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Lock).HasColumnName(@"Lock").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ReferenceNumber).HasColumnName(@"ReferenceNumber").HasColumnType("nvarchar(15)").IsRequired(false).HasMaxLength(15);
            builder.Property(x => x.BasketReceivedDate).HasColumnName(@"BasketReceivedDate").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.IsReturn).HasColumnName(@"IsReturn").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired();

            builder.HasIndex(x => x.BasketMovementNumber).HasName("IX_BasketMovements_1");
            builder.HasIndex(x => x.ReferenceNumber).HasName("IX_BasketMovements_2");
            builder.HasIndex(x => x.FromWhere).HasName("IX_BasketMovements_3");
            builder.HasIndex(x => x.ToWhere).HasName("IX_BasketMovements_4");
        }
    }

    // BasketMovementDetails
    public class BasketMovementDetailConfiguration : IEntityTypeConfiguration<BasketMovementDetail>
    {
        public void Configure(EntityTypeBuilder<BasketMovementDetail> builder)
        {
            builder.ToTable("BasketMovementDetails", "dbo");
            builder.HasKey(x => x.BasketMovementDetailId).HasName("PK_BasketMovementDetails").IsClustered();

            builder.Property(x => x.BasketMovementDetailId).HasColumnName(@"BasketMovementDetailID").HasColumnType("bigint").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.BasketMovementId).HasColumnName(@"BasketMovementID").HasColumnType("bigint").IsRequired();
            builder.Property(x => x.BasketId).HasColumnName(@"BasketID").HasColumnType("int").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.Quantity).HasColumnName(@"Quantity").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.QuantityConfirm).HasColumnName(@"QuantityConfirm").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.QuantityReturn).HasColumnName(@"QuantityReturn").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.QuantityReturnConfirm).HasColumnName(@"QuantityReturnConfirm").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.QuantityBad).HasColumnName(@"QuantityBad").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.QuantityConfirmBad).HasColumnName(@"QuantityConfirmBad").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.QuantityReturnBad).HasColumnName(@"QuantityReturnBad").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.QuantityReturnConfirmBad).HasColumnName(@"QuantityReturnConfirmBad").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Remark).HasColumnName(@"Remark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.Ts).HasColumnName(@"ts").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.Damaged).HasColumnName(@"Damaged").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.CheckDelete).HasColumnName(@"CheckDelete").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.UpdatedTime).HasColumnName(@"UpdatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.BasketMovementDetailIdMaster).HasColumnName(@"BasketMovementDetailIDMaster").HasColumnType("int").IsRequired(false);
        }
    }

    // BasketStoreStockAllowance
    public class BasketStoreStockAllowanceConfiguration : IEntityTypeConfiguration<BasketStoreStockAllowance>
    {
        public void Configure(EntityTypeBuilder<BasketStoreStockAllowance> builder)
        {
            builder.ToTable("BasketStoreStockAllowance", "dbo");
            builder.HasKey(x => x.BasketStoreStockAllowanceId).HasName("PK_BasketStoresStockAllowance").IsClustered();

            builder.Property(x => x.BasketStoreStockAllowanceId).HasColumnName(@"BasketStoreStockAllowanceID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.BasketId).HasColumnName(@"BasketID").HasColumnType("int").IsRequired();
            builder.Property(x => x.StoreId).HasColumnName(@"StoreID").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.StockMax).HasColumnName(@"StockMax").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.Remark).HasColumnName(@"Remark").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreNumber).HasColumnName(@"StoreNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
        }
    }

    // CurrentBaskets
    public class CurrentBasketConfiguration : IEntityTypeConfiguration<CurrentBasket>
    {
        public void Configure(EntityTypeBuilder<CurrentBasket> builder)
        {
            builder.ToTable("CurrentBaskets", "dbo");
            builder.HasKey(x => x.CurrentBasketId).HasName("PK_CurrentBaskets").IsClustered();

            builder.Property(x => x.CurrentBasketId).HasColumnName(@"CurrentBasketID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.StoreNumber).HasColumnName(@"StoreNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.BasketId).HasColumnName(@"BasketID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Quantity).HasColumnName(@"Quantity").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Date).HasColumnName(@"Date").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.Remark).HasColumnName(@"Remark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
        }
    }

    // DataUpdatedHistories
    public class DataUpdatedHistoryConfiguration : IEntityTypeConfiguration<DataUpdatedHistory>
    {
        public void Configure(EntityTypeBuilder<DataUpdatedHistory> builder)
        {
            builder.ToTable("DataUpdatedHistories", "dbo");
            builder.HasKey(x => x.DataUpdatedHistoryId).HasName("PK_DataUpdating_1").IsClustered();

            builder.Property(x => x.DataUpdatedHistoryId).HasColumnName(@"DataUpdatedHistoryID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(25)").IsRequired().HasMaxLength(25);
            builder.Property(x => x.UpdatedTime).HasColumnName(@"UpdatedTime").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.DataId).HasColumnName(@"DataID").HasColumnType("int").IsRequired();
            builder.Property(x => x.OrderType).HasColumnName(@"OrderType").HasColumnType("char(2)").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2);
            builder.Property(x => x.IpAddress).HasColumnName(@"IPAddress").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Action).HasColumnName(@"Action").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoredPro).HasColumnName(@"StoredPro").HasColumnType("nvarchar(80)").IsRequired(false).HasMaxLength(80);
        }
    }

    // DepartmentsVeterinarys
    public class DepartmentsVeterinaryConfiguration : IEntityTypeConfiguration<DepartmentsVeterinary>
    {
        public void Configure(EntityTypeBuilder<DepartmentsVeterinary> builder)
        {
            builder.ToTable("DepartmentsVeterinarys", "dbo");
            builder.HasKey(x => x.DepartmentsVeterinaryId).HasName("PK_DepartmentsVeterinary").IsClustered();

            builder.Property(x => x.DepartmentsVeterinaryId).HasColumnName(@"DepartmentsVeterinaryID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.DepartmentsVeterinaryName).HasColumnName(@"DepartmentsVeterinaryName").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
        }
    }

    // EDIBookings
    public class EdiBookingConfiguration : IEntityTypeConfiguration<EdiBooking>
    {
        public void Configure(EntityTypeBuilder<EdiBooking> builder)
        {
            builder.ToTable("EDIBookings", "dbo");
            builder.HasKey(x => x.NewId).HasName("PK_EDI").IsClustered();

            builder.Property(x => x.SupplierNumber).HasColumnName(@"SUPPLIER_NUMBER").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.SupplierName).HasColumnName(@"SUPPLIER_NAME").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.PoNo).HasColumnName(@"PO_NO").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.WhDeliveryDate).HasColumnName(@"WH_DELIVERY_DATE").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.ProductNumber).HasColumnName(@"PRODUCT_NUMBER").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.ProductName).HasColumnName(@"PRODUCT_NAME").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.StoreNo).HasColumnName(@"STORE_NO").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.StoreName).HasColumnName(@"STORE_NAME").HasColumnType("nvarchar(70)").IsRequired(false).HasMaxLength(70);
            builder.Property(x => x.SoNo).HasColumnName(@"SO_NO").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.OrderDate).HasColumnName(@"ORDER_DATE").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.Category).HasColumnName(@"CATEGORY").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.Temperature).HasColumnName(@"TEMPERATURE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Carton).HasColumnName(@"CARTON").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Weights).HasColumnName(@"WEIGHTS").HasColumnType("decimal(18,5)").IsRequired(false);
            builder.Property(x => x.Volume).HasColumnName(@"VOLUME").HasColumnType("decimal(18,5)").IsRequired(false);
            builder.Property(x => x.Unit).HasColumnName(@"UNIT").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.BookingTime).HasColumnName(@"BOOKING_TIME").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.NewId).HasColumnName(@"NewId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.Basket25).HasColumnName(@"BASKET25").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Basket16).HasColumnName(@"BASKET16").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Pallet).HasColumnName(@"PALLET").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Poid).HasColumnName(@"POID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Soid).HasColumnName(@"SOID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PoDetailId).HasColumnName(@"PODetailID").HasColumnType("int").IsRequired(false);
        }
    }

    // EDIBookingBigC
    public class EdiBookingBigCConfiguration : IEntityTypeConfiguration<EdiBookingBigC>
    {
        public void Configure(EntityTypeBuilder<EdiBookingBigC> builder)
        {
            builder.ToTable("EDIBookingBigC", "dbo");
            builder.HasKey(x => x.RecordId).HasName("PK_EDIBookingBigC").IsClustered();

            builder.Property(x => x.RecordId).HasColumnName(@"RecordID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.SupplierNumber).HasColumnName(@"SUPPLIER_NUMBER").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.SupplierName).HasColumnName(@"SUPPLIER_NAME").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.PoNo).HasColumnName(@"PO_NO").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.WhDeliveryDate).HasColumnName(@"WH_DELIVERY_DATE").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.ProductNumber).HasColumnName(@"PRODUCT_NUMBER").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.ProductName).HasColumnName(@"PRODUCT_NAME").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.StoreNo).HasColumnName(@"STORE_NO").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.StoreName).HasColumnName(@"STORE_NAME").HasColumnType("nvarchar(70)").IsRequired(false).HasMaxLength(70);
            builder.Property(x => x.SoNo).HasColumnName(@"SO_NO").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.OrderDate).HasColumnName(@"ORDER_DATE").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.Category).HasColumnName(@"CATEGORY").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.Temperature).HasColumnName(@"TEMPERATURE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Carton).HasColumnName(@"CARTON").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Weights).HasColumnName(@"WEIGHTS").HasColumnType("decimal(18,5)").IsRequired(false);
            builder.Property(x => x.Volume).HasColumnName(@"VOLUME").HasColumnType("decimal(18,5)").IsRequired(false);
            builder.Property(x => x.Unit).HasColumnName(@"UNIT").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.BookingTime).HasColumnName(@"BOOKING_TIME").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.Basket25).HasColumnName(@"BASKET25").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Basket16).HasColumnName(@"BASKET16").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Pallet).HasColumnName(@"PALLET").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Dept).HasColumnName(@"DEPT").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Poid).HasColumnName(@"POID").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.Soid).HasColumnName(@"SOID").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.PoDetailId).HasColumnName(@"PODetailID").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.PoNoLine).HasColumnName(@"PO_NOLine").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Lv).HasColumnName(@"LV").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Lu).HasColumnName(@"LU").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Comm).HasColumnName(@"COMM").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.Goldcode).HasColumnName(@"GOLDCODE").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.WhCode).HasColumnName(@"WH_CODE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.TillCode).HasColumnName(@"TILL_CODE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.XDockingStorage).HasColumnName(@"X-DOCKING_STORAGE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Region).HasColumnName(@"REGION").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UnitPckSize).HasColumnName(@"UNIT_PCK_SIZE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
        }
    }

    // EDItmpBookingBigC
    public class EdItmpBookingBigCConfiguration : IEntityTypeConfiguration<EdItmpBookingBigC>
    {
        public void Configure(EntityTypeBuilder<EdItmpBookingBigC> builder)
        {
            builder.ToTable("EDItmpBookingBigC", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_EDIBookingBigC1").IsClustered();

            builder.Property(x => x.C1PoDetail40StoresOrder41).HasColumnName(@"1- PO_DETAIL (STORES ORDER)").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C2LineNo).HasColumnName(@"2-LINE NO").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C3PoMain40PoSupplier41).HasColumnName(@"3-PO_MAIN (PO SUPPLIER)").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C4WhCode).HasColumnName(@"4-WH CODE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C5TillCode).HasColumnName(@"5-TILL CODE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C6GoldCode).HasColumnName(@"6-GOLD CODE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C7Discription).HasColumnName(@"7-DISCRIPTION").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.C8Lv).HasColumnName(@"8-LV").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C9Lu).HasColumnName(@"9-LU").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C10SupplierCode).HasColumnName(@"10-SUPPLIER CODE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C11SupplierName).HasColumnName(@"11-SUPPLIER NAME").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.C12Commcontract).HasColumnName(@"12-COMMCONTRACT").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C13Dept).HasColumnName(@"13-DEPT").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C14DeliveryDate).HasColumnName(@"14-DELIVERY DATE").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.C15Store).HasColumnName(@"15-STORE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C16StoresName).HasColumnName(@"16-STORES NAME").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.C17OrderQty).HasColumnName(@"17-ORDER QTY").HasColumnType("decimal(10,3)").IsRequired(false);
            builder.Property(x => x.C18StockUnit).HasColumnName(@"18-STOCK UNIT").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C19XDocking47Storage).HasColumnName(@"19-X-DOCKING/ STORAGE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C20Region).HasColumnName(@"20-REGION").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.C21UnitPckSize).HasColumnName(@"21-UNIT PCK SIZE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("bigint").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
        }
    }

    // Email
    public class EmailConfiguration : IEntityTypeConfiguration<Email>
    {
        public void Configure(EntityTypeBuilder<Email> builder)
        {
            builder.ToTable("Email", "dbo");
            builder.HasKey(x => x.EmailId).HasName("PK_Email").IsClustered();

            builder.Property(x => x.EmailId).HasColumnName(@"EmailID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.Email_).HasColumnName(@"Email").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.Note).HasColumnName(@"Note").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired(false);
        }
    }

    // LabelTmpROWMS
    public class LabelTmpRowmConfiguration : IEntityTypeConfiguration<LabelTmpRowm>
    {
        public void Configure(EntityTypeBuilder<LabelTmpRowm> builder)
        {
            builder.ToTable("LabelTmpROWMS", "dbo");
            builder.HasKey(x => x.LabelTmpRowmsid).HasName("PK_LabelTmpROWMS").IsClustered();

            builder.Property(x => x.LabelTmpRowmsid).HasColumnName(@"LabelTmpROWMSID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.Roid).HasColumnName(@"ROID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IndexPallet).HasColumnName(@"IndexPallet").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CreateTime).HasColumnName(@"CreateTime").HasColumnType("smalldatetime").IsRequired(false);
        }
    }

    // M_item
    public class MItemConfiguration : IEntityTypeConfiguration<MItem>
    {
        public void Configure(EntityTypeBuilder<MItem> builder)
        {
            builder.ToTable("M_item", "dbo");
            builder.HasKey(x => x.ItemKey).HasName("PK__m_item__37A71F7E539EBCCC").IsClustered();

            builder.Property(x => x.ItemKey).HasColumnName(@"item_key").HasColumnType("varchar(64)").IsRequired().IsUnicode(false).HasMaxLength(64).ValueGeneratedNever();
            builder.Property(x => x.ItemLabel).HasColumnName(@"item_label").HasColumnType("nvarchar(64)").IsRequired().HasMaxLength(64);
            builder.Property(x => x.Editable).HasColumnName(@"editable").HasColumnType("int").IsRequired();
            builder.Property(x => x.Remark).HasColumnName(@"remark").HasColumnType("varchar(150)").IsRequired(false).IsUnicode(false).HasMaxLength(150);
        }
    }

    // M_item_value
    public class MItemValueConfiguration : IEntityTypeConfiguration<MItemValue>
    {
        public void Configure(EntityTypeBuilder<MItemValue> builder)
        {
            builder.ToTable("M_item_value", "dbo");
            builder.HasKey(x => new { x.ItemKey, x.Code }).HasName("PK__M_item_v__A4F0CBB1F126230F").IsClustered();

            builder.Property(x => x.ItemKey).HasColumnName(@"item_key").HasColumnType("varchar(64)").IsRequired().IsUnicode(false).HasMaxLength(64).ValueGeneratedNever();
            builder.Property(x => x.Code).HasColumnName(@"code").HasColumnType("varchar(100)").IsRequired().IsUnicode(false).HasMaxLength(100).ValueGeneratedNever();
            builder.Property(x => x.Name).HasColumnName(@"name").HasColumnType("nvarchar(150)").IsRequired().HasMaxLength(150);
            builder.Property(x => x.Remark).HasColumnName(@"remark").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.IsKey).HasColumnName(@"is_key").HasColumnType("bit").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.MItem).WithMany(b => b.MItemValues).HasForeignKey(c => c.ItemKey).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("fk_app_m_item_value_1");
        }
    }

    // NameRows
    public class NameRowConfiguration : IEntityTypeConfiguration<NameRow>
    {
        public void Configure(EntityTypeBuilder<NameRow> builder)
        {
            builder.ToTable("NameRows", "dbo");
            builder.HasKey(x => x.NameRowsId).HasName("PK_NameRows").IsClustered();

            builder.Property(x => x.NameRowsId).HasColumnName(@"NameRowsID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.NamesRowsName).HasColumnName(@"NamesRowsName").HasColumnType("nvarchar(300)").IsRequired(false).HasMaxLength(300);
            builder.Property(x => x.CombieName).HasColumnName(@"CombieName").HasColumnType("nvarchar(300)").IsRequired(false).HasMaxLength(300);
            builder.Property(x => x.OperationCategoryId).HasColumnName(@"OperationCategoryID").HasColumnType("int").IsRequired(false);
        }
    }

    // NoteDeliveryStore
    public class NoteDeliveryStoreConfiguration : IEntityTypeConfiguration<NoteDeliveryStore>
    {
        public void Configure(EntityTypeBuilder<NoteDeliveryStore> builder)
        {
            builder.ToTable("NoteDeliveryStore", "dbo");
            builder.HasKey(x => x.NoteDeliveryStoreId).HasName("PK_NoteDeliveryStore").IsClustered();

            builder.Property(x => x.NoteDeliveryStoreId).HasColumnName(@"NoteDeliveryStoreID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Doid).HasColumnName(@"DOID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.NoteNumber).HasColumnName(@"NoteNumber").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.ProductCombieName).HasColumnName(@"ProductCombieName").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.CreateById).HasColumnName(@"CreateByID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DeliveryById).HasColumnName(@"DeliveryByID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TransferName).HasColumnName(@"TransferName").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.DriverName).HasColumnName(@"DriverName").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.CreateTime).HasColumnName(@"CreateTime").HasColumnType("smalldatetime").IsRequired(false);
        }
    }

    // PalletHighland
    public class PalletHighlandConfiguration : IEntityTypeConfiguration<PalletHighland>
    {
        public void Configure(EntityTypeBuilder<PalletHighland> builder)
        {
            builder.ToTable("PalletHighland", "dbo");
            builder.HasKey(x => x.PalletHighlandId).HasName("PK_PalletHighland").IsClustered();

            builder.Property(x => x.PalletHighlandId).HasColumnName(@"PalletHighlandID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.PalletId).HasColumnName(@"PalletID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.GrossWeight).HasColumnName(@"GrossWeight").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.Cover).HasColumnName(@"Cover").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.NetWeight).HasColumnName(@"NetWeight").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.Size).HasColumnName(@"Size").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Remark).HasColumnName(@"Remark").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.Date).HasColumnName(@"Date").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.ScanTime).HasColumnName(@"ScanTime").HasColumnType("smalldatetime").IsRequired(false);

            builder.HasIndex(x => x.PalletId).HasName("PalletID");
        }
    }

    // Products
    public class ProductConfiguration : IEntityTypeConfiguration<Product>
    {
        public void Configure(EntityTypeBuilder<Product> builder)
        {
            builder.ToTable("Products", "dbo");
            builder.HasKey(x => x.ProductId).HasName("PK_Products").IsClustered();

            builder.Property(x => x.ProductId).HasColumnName(@"ProductID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.ProductName).HasColumnName(@"ProductName").HasColumnType("nvarchar(100)").IsRequired().HasMaxLength(100);
            builder.Property(x => x.UnitWeight).HasColumnName(@"UnitWeight").HasColumnType("decimal(15,5)").IsRequired();
            builder.Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();
            builder.Property(x => x.SupplierId).HasColumnName(@"SupplierID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProductCategoryId).HasColumnName(@"ProductCategoryID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PackagingType).HasColumnName(@"PackagingType").HasColumnType("nvarchar(7)").IsRequired(false).HasMaxLength(7);
            builder.Property(x => x.ProductRemark).HasColumnName(@"ProductRemark").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.CartonWeight).HasColumnName(@"CartonWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.UnitPerCarton).HasColumnName(@"UnitPerCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProccessingCatergoryId).HasColumnName(@"ProccessingCatergoryID").HasColumnType("tinyint").IsRequired();
            builder.Property(x => x.Ts).HasColumnName(@"TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.CheckDelete).HasColumnName(@"CheckDelete").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProductNumber).HasColumnName(@"ProductNumber").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.NetPerCarton).HasColumnName(@"NetPerCarton").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.GrossPerCarton).HasColumnName(@"GrossPerCarton").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.ProductTemperature).HasColumnName(@"ProductTemperature").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.TemperatureDeviation).HasColumnName(@"TemperatureDeviation").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Unit).HasColumnName(@"Unit").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.NaturalLossRate).HasColumnName(@"NaturalLossRate").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.ProductGoldCode).HasColumnName(@"ProductGoldCode").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);

            builder.HasIndex(x => new { x.ProductNumber, x.CustomerId }).HasName("IX_Products").IsUnique();
        }
    }

    // ProductBigCtmp
    public class ProductBigCtmpConfiguration : IEntityTypeConfiguration<ProductBigCtmp>
    {
        public void Configure(EntityTypeBuilder<ProductBigCtmp> builder)
        {
            builder.ToTable("ProductBigCtmp", "dbo");
            builder.HasKey(x => x.Till).HasName("PK_ProductBigCtmp").IsClustered();

            builder.Property(x => x.Till).HasColumnName(@"till").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50).ValueGeneratedNever();
            builder.Property(x => x.Gold).HasColumnName(@"gold").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Name).HasColumnName(@"name").HasColumnType("nvarchar(550)").IsRequired(false).HasMaxLength(550);
        }
    }

    // ProductCategory
    public class ProductCategoryConfiguration : IEntityTypeConfiguration<ProductCategory>
    {
        public void Configure(EntityTypeBuilder<ProductCategory> builder)
        {
            builder.ToTable("ProductCategory", "dbo");
            builder.HasKey(x => x.ProductCategoryId).HasName("PK_ProductCategory").IsClustered();

            builder.Property(x => x.ProductCategoryId).HasColumnName(@"ProductCategoryID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.ProductCategoryNumber).HasColumnName(@"ProductCategoryNumber").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.ProductCategoryName).HasColumnName(@"ProductCategoryName").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.ProductCategoryRemark).HasColumnName(@"ProductCategoryRemark").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
        }
    }

    // ProductSupplier
    public class ProductSupplierConfiguration : IEntityTypeConfiguration<ProductSupplier>
    {
        public void Configure(EntityTypeBuilder<ProductSupplier> builder)
        {
            builder.ToTable("ProductSupplier", "dbo");
            builder.HasKey(x => x.ProductSupplierId);

            builder.Property(x => x.ProductSupplierId).HasColumnName(@"ProductSupplierID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.ProductId).HasColumnName(@"ProductID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SupplierId).HasColumnName(@"SupplierID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SupplierNumber).HasColumnName(@"SupplierNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            builder.HasIndex(x => new { x.ProductId, x.SupplierNumber }).HasName("CheckDouble").IsUnique();
            builder.HasIndex(x => x.ProductSupplierId).HasName("PK_ProductSupplier").IsUnique();
        }
    }

    // PurchasingOrders
    public class PurchasingOrderConfiguration : IEntityTypeConfiguration<PurchasingOrder>
    {
        public void Configure(EntityTypeBuilder<PurchasingOrder> builder)
        {
            builder.ToTable("PurchasingOrders", "dbo");
            builder.HasKey(x => x.PurchasingOrderId).HasName("PK_PurchasingOrders").IsClustered();

            builder.Property(x => x.PurchasingOrderId).HasColumnName(@"PurchasingOrderID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.PurchasingOrderNumber).HasColumnName(@"PurchasingOrderNumber").HasColumnType("nvarchar(16)").IsRequired(false).HasMaxLength(16);
            builder.Property(x => x.PurchasingOrderDate).HasColumnName(@"PurchasingOrderDate").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.SupplierId).HasColumnName(@"SupplierID").HasColumnType("int").IsRequired();
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.PurchasingOrderRemark).HasColumnName(@"PurchasingOrderRemark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.Ts).HasColumnName(@"ts").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PoNo).HasColumnName(@"PO_NO").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.VeterinaryInspectionCheck).HasColumnName(@"VeterinaryInspectionCheck").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.TruckNumber).HasColumnName(@"TruckNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.TruckType).HasColumnName(@"TruckType").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StartWorkingTime).HasColumnName(@"StartWorkingTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.EndWorkingTime).HasColumnName(@"EndWorkingTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.ProductTemperature).HasColumnName(@"ProductTemperature").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.TruckTemperature).HasColumnName(@"TruckTemperature").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.ReceivingOrdinalNumber).HasColumnName(@"ReceivingOrdinalNumber").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.ConfirmedBy).HasColumnName(@"ConfirmedBy").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.TruckArrivalTime).HasColumnName(@"TruckArrivalTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.DriverName).HasColumnName(@"DriverName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.PoDamage).HasColumnName(@"PODamage").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.UpdateTime).HasColumnName(@"UpdateTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.TruckInOutId).HasColumnName(@"TruckInOutID").HasColumnType("uniqueidentifier").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Supplier).WithMany(b => b.PurchasingOrders).HasForeignKey(c => c.SupplierId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PurchasingOrders_Suppliers");

            builder.HasIndex(x => x.PurchasingOrderDate).HasName("IX_PurchasingOrders");
            builder.HasIndex(x => x.SupplierId).HasName("IX_PurchasingOrders_1");
        }
    }

    // PurchasingOrderProducts
    public class PurchasingOrderProductConfiguration : IEntityTypeConfiguration<PurchasingOrderProduct>
    {
        public void Configure(EntityTypeBuilder<PurchasingOrderProduct> builder)
        {
            builder.ToTable("PurchasingOrderProducts", "dbo");
            builder.HasKey(x => x.PurchasingOrderProductId).HasName("PK_PurchasingOrderDetails").IsClustered();

            builder.Property(x => x.PurchasingOrderProductId).HasColumnName(@"PurchasingOrderProductID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.PurchasingOrderId).HasColumnName(@"PurchasingOrderID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ProductId).HasColumnName(@"ProductID").HasColumnType("int").IsRequired();
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.ReceivedActualCarton).HasColumnName(@"ReceivedActualCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ReceivedActualWeight).HasColumnName(@"ReceivedActualWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.ReceivedActualVolume).HasColumnName(@"ReceivedActualVolume").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.UpdatedTime).HasColumnName(@"UpdatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.PurchasingOrderProductRemark).HasColumnName(@"PurchasingOrderProductRemark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.Ts).HasColumnName(@"ts").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.PoNo).HasColumnName(@"PO_NO").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.PoDetailDamage).HasColumnName(@"PODetailDamage").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.ReceivedBookingCarton).HasColumnName(@"ReceivedBookingCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ReceivedBookingWeight).HasColumnName(@"ReceivedBookingWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.QtyQa).HasColumnName(@"QtyQA").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.QtyQaDamageVh).HasColumnName(@"QtyQADamageVH").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.QtyQaDamageH).HasColumnName(@"QtyQADamageH").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.QtyQaDamageL).HasColumnName(@"QtyQADamageL").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.PoDetailDamageError).HasColumnName(@"PODetailDamageError").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.ReceivedActualGrossWeight).HasColumnName(@"ReceivedActualGrossWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.QaBy).HasColumnName(@"QABy").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.PackageWeight).HasColumnName(@"PackageWeight").HasColumnType("float").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Product).WithMany(b => b.PurchasingOrderProducts).HasForeignKey(c => c.ProductId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PurchasingOrderProducts_Products");
            builder.HasOne(a => a.PurchasingOrder).WithMany(b => b.PurchasingOrderProducts).HasForeignKey(c => c.PurchasingOrderId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_PurchasingOrderProducts_PurchasingOrders");

            builder.HasIndex(x => x.PurchasingOrderId).HasName("IX_PurchasingOrderProducts");
            builder.HasIndex(x => x.ProductId).HasName("IX_PurchasingOrderProducts_1");
        }
    }

    // SalesOrders
    public class SalesOrderConfiguration : IEntityTypeConfiguration<SalesOrder>
    {
        public void Configure(EntityTypeBuilder<SalesOrder> builder)
        {
            builder.ToTable("SalesOrders", "dbo");
            builder.HasKey(x => x.SalesOrderId).HasName("PK_SalesOrders").IsClustered();

            builder.Property(x => x.SalesOrderId).HasColumnName(@"SalesOrderID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.SalesOrderNumber).HasColumnName(@"SalesOrderNumber").HasColumnType("nvarchar(16)").IsRequired(false).HasMaxLength(16);
            builder.Property(x => x.SalesOrderDate).HasColumnName(@"SalesOrderDate").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.StoreId).HasColumnName(@"StoreID").HasColumnType("int").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.SalesOrderRemark).HasColumnName(@"SalesOrderRemark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.OperationCategoryId).HasColumnName(@"OperationCategoryID").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.SoNo).HasColumnName(@"SO_NO").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.TruckNumber).HasColumnName(@"TruckNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.DriverName).HasColumnName(@"DriverName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SalesOrderConfirmed).HasColumnName(@"SalesOrderConfirmed").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Ts).HasColumnName(@"TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.SupplierGroupId).HasColumnName(@"SupplierGroupID").HasColumnType("tinyint").IsRequired();
            builder.Property(x => x.SalesOrderDept).HasColumnName(@"SalesOrderDept").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("tinyint").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Store).WithMany(b => b.SalesOrders).HasForeignKey(c => c.StoreId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SalesOrders_Stores");

            builder.HasIndex(x => x.SalesOrderDate).HasName("IX_SalesOrders");
            builder.HasIndex(x => x.OperationCategoryId).HasName("IX_SalesOrders_1");
            builder.HasIndex(x => x.StoreId).HasName("IX_SalesOrders_2");
        }
    }

    // SalesOrderPallets
    public class SalesOrderPalletConfiguration : IEntityTypeConfiguration<SalesOrderPallet>
    {
        public void Configure(EntityTypeBuilder<SalesOrderPallet> builder)
        {
            builder.ToTable("SalesOrderPallets", "dbo");
            builder.HasKey(x => x.SalesOrderPalletId).HasName("PK_SalesOrderPallets").IsClustered();

            builder.Property(x => x.SalesOrderPalletId).HasColumnName(@"SalesOrderPalletID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.SalesOrderProductId).HasColumnName(@"SalesOrderProductID").HasColumnType("int").IsRequired();
            builder.Property(x => x.StoreBookingCarton).HasColumnName(@"StoreBookingCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualCarton).HasColumnName(@"DispatchedActualCarton").HasColumnType("int").IsRequired(false);
        }
    }

    // SalesOrderProducts
    public class SalesOrderProductConfiguration : IEntityTypeConfiguration<SalesOrderProduct>
    {
        public void Configure(EntityTypeBuilder<SalesOrderProduct> builder)
        {
            builder.ToTable("SalesOrderProducts", "dbo");
            builder.HasKey(x => x.SalesOrderProductId).HasName("PK_SalesOrderProducts").IsClustered();

            builder.Property(x => x.SalesOrderProductId).HasColumnName(@"SalesOrderProductID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.SalesOrderId).HasColumnName(@"SalesOrderID").HasColumnType("int").IsRequired();
            builder.Property(x => x.SalesOrderProductRemark).HasColumnName(@"SalesOrderProductRemark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.ProductId).HasColumnName(@"ProductID").HasColumnType("int").IsRequired();
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.PurchasingOrderProductId).HasColumnName(@"PurchasingOrderProductID").HasColumnType("int").IsRequired();
            builder.Property(x => x.DispatchedActualCarton).HasColumnName(@"DispatchedActualCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualWeight).HasColumnName(@"DispatchedActualWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.DispatchedActualVolume).HasColumnName(@"DispatchedActualVolume").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.StoreBookingCarton).HasColumnName(@"StoreBookingCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.StoreBookingWeight).HasColumnName(@"StoreBookingWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.StoreBookingVolume).HasColumnName(@"StoreBookingVolume").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.DispatchedActualBasket1).HasColumnName(@"DispatchedActualBasket1").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualBasket2).HasColumnName(@"DispatchedActualBasket2").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualPallet).HasColumnName(@"DispatchedActualPallet").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedGrossWeight).HasColumnName(@"DispatchedGrossWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.DispatchedGrossWeightScale).HasColumnName(@"DispatchedGrossWeightScale").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.PackagingWeight).HasColumnName(@"PackagingWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.SoNo).HasColumnName(@"SO_NO").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Lining).HasColumnName(@"Lining").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.BreakCheck).HasColumnName(@"BreakCheck").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Ts).HasColumnName(@"ts").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.DamageWeightPercent).HasColumnName(@"DamageWeightPercent").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.SopQuarantine).HasColumnName(@"SOPQuarantine").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.DispatchedActualBasket3).HasColumnName(@"DispatchedActualBasket3").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualBasket4).HasColumnName(@"DispatchedActualBasket4").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualBasket5).HasColumnName(@"DispatchedActualBasket5").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualBasket6).HasColumnName(@"DispatchedActualBasket6").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Trolley).HasColumnName(@"Trolley").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketId).HasColumnName(@"BasketID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketQuantity).HasColumnName(@"BasketQuantity").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.NaturalLossRateSo).HasColumnName(@"NaturalLossRateSO").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.PoNo).HasColumnName(@"PO_NO").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.PoNoLine).HasColumnName(@"PO_NOLine").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Lv).HasColumnName(@"LV").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Lu).HasColumnName(@"LU").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Comm).HasColumnName(@"COMM").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.WhCode).HasColumnName(@"WH_CODE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.TillCode).HasColumnName(@"TILL_CODE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.ScannedTime).HasColumnName(@"ScannedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.ScannedBy).HasColumnName(@"ScannedBy").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.ScannedResult).HasColumnName(@"ScannedResult").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.ScannedStatus).HasColumnName(@"ScannedStatus").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.Region).HasColumnName(@"REGION").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            // Foreign keys
            builder.HasOne(a => a.Product).WithMany(b => b.SalesOrderProducts).HasForeignKey(c => c.ProductId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SalesOrderProducts_Products");
            builder.HasOne(a => a.PurchasingOrderProduct).WithMany(b => b.SalesOrderProducts).HasForeignKey(c => c.PurchasingOrderProductId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SalesOrderProducts_PurchasingOrderProducts");
            builder.HasOne(a => a.SalesOrder).WithMany(b => b.SalesOrderProducts).HasForeignKey(c => c.SalesOrderId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SalesOrderProducts_SalesOrders");

            builder.HasIndex(x => x.PurchasingOrderProductId).HasName("IX_SalesOrderProducts");
            builder.HasIndex(x => x.ProductId).HasName("IX_SalesOrderProducts_1");
            builder.HasIndex(x => x.SalesOrderId).HasName("IX_SalesOrderProducts_2");
        }
    }

    // SalesOrderProductLabels
    public class SalesOrderProductLabelConfiguration : IEntityTypeConfiguration<SalesOrderProductLabel>
    {
        public void Configure(EntityTypeBuilder<SalesOrderProductLabel> builder)
        {
            builder.ToTable("SalesOrderProductLabels", "dbo");
            builder.HasKey(x => x.SalesOrderProductLabelId).HasName("PK_SalesOrderProductLabels").IsClustered();

            builder.Property(x => x.SalesOrderProductLabelId).HasColumnName(@"SalesOrderProductLabelID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.SalesOrderProductId).HasColumnName(@"SalesOrderProductID").HasColumnType("int").IsRequired();
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.BasketQuantity).HasColumnName(@"BasketQuantity").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CartonIndex).HasColumnName(@"CartonIndex").HasColumnType("smallint").IsRequired(false);
            builder.Property(x => x.ScannedTime).HasColumnName(@"ScannedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.ScannedBy).HasColumnName(@"ScannedBy").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.ScannedResult).HasColumnName(@"ScannedResult").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.ScannedStatus).HasColumnName(@"ScannedStatus").HasColumnType("tinyint").IsRequired(false);
        }
    }

    // SalesOrderProducts_Delete
    public class SalesOrderProductsDeleteConfiguration : IEntityTypeConfiguration<SalesOrderProductsDelete>
    {
        public void Configure(EntityTypeBuilder<SalesOrderProductsDelete> builder)
        {
            builder.ToTable("SalesOrderProducts_Delete", "dbo");
            builder.HasKey(x => x.SalesOrderProductId).HasName("PK__SalesOrd__B0C095BCC8434D95").IsClustered();

            builder.Property(x => x.SalesOrderProductId).HasColumnName(@"SalesOrderProductID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.SalesOrderId).HasColumnName(@"SalesOrderID").HasColumnType("int").IsRequired();
            builder.Property(x => x.SalesOrderProductRemark).HasColumnName(@"SalesOrderProductRemark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.ProductId).HasColumnName(@"ProductID").HasColumnType("int").IsRequired();
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.PurchasingOrderProductId).HasColumnName(@"PurchasingOrderProductID").HasColumnType("int").IsRequired();
            builder.Property(x => x.DispatchedActualCarton).HasColumnName(@"DispatchedActualCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualWeight).HasColumnName(@"DispatchedActualWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.DispatchedActualVolume).HasColumnName(@"DispatchedActualVolume").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.StoreBookingCarton).HasColumnName(@"StoreBookingCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.StoreBookingWeight).HasColumnName(@"StoreBookingWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.StoreBookingVolume).HasColumnName(@"StoreBookingVolume").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.DispatchedActualBasket1).HasColumnName(@"DispatchedActualBasket1").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualBasket2).HasColumnName(@"DispatchedActualBasket2").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualPallet).HasColumnName(@"DispatchedActualPallet").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedGrossWeight).HasColumnName(@"DispatchedGrossWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.DispatchedGrossWeightScale).HasColumnName(@"DispatchedGrossWeightScale").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.PackagingWeight).HasColumnName(@"PackagingWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.SoNo).HasColumnName(@"SO_NO").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Lining).HasColumnName(@"Lining").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.BreakCheck).HasColumnName(@"BreakCheck").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Ts).HasColumnName(@"ts").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.DamageWeightPercent).HasColumnName(@"DamageWeightPercent").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.SopQuarantine).HasColumnName(@"SOPQuarantine").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.DispatchedActualBasket3).HasColumnName(@"DispatchedActualBasket3").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualBasket4).HasColumnName(@"DispatchedActualBasket4").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualBasket5).HasColumnName(@"DispatchedActualBasket5").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualBasket6).HasColumnName(@"DispatchedActualBasket6").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Trolley).HasColumnName(@"Trolley").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketId).HasColumnName(@"BasketID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketQuantity).HasColumnName(@"BasketQuantity").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.NaturalLossRateSo).HasColumnName(@"NaturalLossRateSO").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.PoNo).HasColumnName(@"PO_NO").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.PoNoLine).HasColumnName(@"PO_NOLine").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Lv).HasColumnName(@"LV").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Lu).HasColumnName(@"LU").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Comm).HasColumnName(@"COMM").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.WhCode).HasColumnName(@"WH_CODE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.TillCode).HasColumnName(@"TILL_CODE").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.ScannedTime).HasColumnName(@"ScannedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.ScannedBy).HasColumnName(@"ScannedBy").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.ScannedResult).HasColumnName(@"ScannedResult").HasColumnType("varchar(10)").IsRequired(false).IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.ScannedStatus).HasColumnName(@"ScannedStatus").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.Region).HasColumnName(@"REGION").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SalesOrderProductIdOld).HasColumnName(@"SalesOrderProductIDOld").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Product).WithMany(b => b.SalesOrderProductsDeletes).HasForeignKey(c => c.ProductId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__SalesOrde__Produ__77CAB889");
            builder.HasOne(a => a.PurchasingOrderProduct).WithMany(b => b.SalesOrderProductsDeletes).HasForeignKey(c => c.PurchasingOrderProductId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__SalesOrde__Purch__79B300FB");
            builder.HasOne(a => a.SalesOrder).WithMany(b => b.SalesOrderProductsDeletes).HasForeignKey(c => c.SalesOrderId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK__SalesOrde__Sales__78BEDCC2");

            builder.HasIndex(x => x.ProductId).HasName("IX_SalesOrderProducts_1_copy1");
            builder.HasIndex(x => x.SalesOrderId).HasName("IX_SalesOrderProducts_2_copy1");
            builder.HasIndex(x => x.PurchasingOrderProductId).HasName("IX_SalesOrderProducts_copy1");
        }
    }

    // Shippers
    public class ShipperConfiguration : IEntityTypeConfiguration<Shipper>
    {
        public void Configure(EntityTypeBuilder<Shipper> builder)
        {
            builder.ToTable("Shippers", "dbo");
            builder.HasKey(x => x.ShippersId).HasName("PK_Shippers").IsClustered();

            builder.Property(x => x.ShippersId).HasColumnName(@"ShippersID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.IdentityCard).HasColumnName(@"IdentityCard").HasColumnType("numeric(10,0)").IsRequired(false);
            builder.Property(x => x.IssuedBy).HasColumnName(@"IssuedBy").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.PhoneNumber).HasColumnName(@"PhoneNumber").HasColumnType("numeric(11,0)").IsRequired(false);
            builder.Property(x => x.Fax).HasColumnName(@"Fax").HasColumnType("numeric(11,0)").IsRequired(false);
            builder.Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.DateRange).HasColumnName(@"DateRange").HasColumnType("date").IsRequired(false);
            builder.Property(x => x.ShippersName).HasColumnName(@"ShippersName").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.ShippersAddress).HasColumnName(@"ShippersAddress").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
        }
    }

    // Stores
    public class StoreConfiguration : IEntityTypeConfiguration<Store>
    {
        public void Configure(EntityTypeBuilder<Store> builder)
        {
            builder.ToTable("Stores", "dbo");
            builder.HasKey(x => x.StoreId).HasName("PK_StoresNew").IsClustered();

            builder.Property(x => x.StoreId).HasColumnName(@"StoreID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.StoreNumber).HasColumnName(@"StoreNumber").HasColumnType("nvarchar(25)").IsRequired().HasMaxLength(25);
            builder.Property(x => x.StoreName).HasColumnName(@"StoreName").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.StoreOrdinalNumber).HasColumnName(@"StoreOrdinalNumber").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.StoreContact).HasColumnName(@"StoreContact").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactPhone).HasColumnName(@"StoreContactPhone").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactEmail).HasColumnName(@"StoreContactEmail").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContact2).HasColumnName(@"StoreContact2").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactPhone2).HasColumnName(@"StoreContactPhone2").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactEmail2).HasColumnName(@"StoreContactEmail2").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreNameShort).HasColumnName(@"StoreNameShort").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.StoreAddress).HasColumnName(@"StoreAddress").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.StoreContactMobile).HasColumnName(@"StoreContactMobile").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactMobile2).HasColumnName(@"StoreContactMobile2").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContact3).HasColumnName(@"StoreContact3").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactPosition).HasColumnName(@"StoreContactPosition").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactPosition1).HasColumnName(@"StoreContactPosition1").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactPosition2).HasColumnName(@"StoreContactPosition2").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreActive).HasColumnName(@"StoreActive").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Ts).HasColumnName(@"TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.StoreNumberNew).HasColumnName(@"StoreNumberNew").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.BasketS13StockAllowance).HasColumnName(@"BasketS13StockAllowance").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketS25StockAllowance).HasColumnName(@"BasketS25StockAllowance").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketL13StockAllowance).HasColumnName(@"BasketL13StockAllowance").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketL25StockAllowance).HasColumnName(@"BasketL25StockAllowance").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketL40StockAllowance).HasColumnName(@"BasketL40StockAllowance").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketO25StockAllowance).HasColumnName(@"BasketO25StockAllowance").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TrolleyStockAllowance).HasColumnName(@"TrolleyStockAllowance").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Domain).HasColumnName(@"Domain").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreType).HasColumnName(@"StoreType").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ShipToOtm).HasColumnName(@"ShipToOTM").HasColumnType("varchar(255)").IsRequired(false).IsUnicode(false).HasMaxLength(255);

            builder.HasIndex(x => x.StoreNumber).HasName("IX_Stores").IsUnique();
        }
    }

    // Stores_tmp
    public class StoresTmpConfiguration : IEntityTypeConfiguration<StoresTmp>
    {
        public void Configure(EntityTypeBuilder<StoresTmp> builder)
        {
            builder.ToTable("Stores_tmp", "dbo");
            builder.HasKey(x => new { x.StoreId, x.StoreNumber });

            builder.Property(x => x.StoreId).HasColumnName(@"StoreID").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.StoreNumber).HasColumnName(@"StoreNumber").HasColumnType("nvarchar(25)").IsRequired().HasMaxLength(25).ValueGeneratedNever();
            builder.Property(x => x.StoreName).HasColumnName(@"StoreName").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.StoreOrdinalNumber).HasColumnName(@"StoreOrdinalNumber").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.StoreContact).HasColumnName(@"StoreContact").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactPhone).HasColumnName(@"StoreContactPhone").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactEmail).HasColumnName(@"StoreContactEmail").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContact2).HasColumnName(@"StoreContact2").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactPhone2).HasColumnName(@"StoreContactPhone2").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactEmail2).HasColumnName(@"StoreContactEmail2").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreNameShort).HasColumnName(@"StoreNameShort").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.StoreAddress).HasColumnName(@"StoreAddress").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.StoreContactMobile).HasColumnName(@"StoreContactMobile").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactMobile2).HasColumnName(@"StoreContactMobile2").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContact3).HasColumnName(@"StoreContact3").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactPosition).HasColumnName(@"StoreContactPosition").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactPosition1).HasColumnName(@"StoreContactPosition1").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreContactPosition2).HasColumnName(@"StoreContactPosition2").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreActive).HasColumnName(@"StoreActive").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Ts).HasColumnName(@"TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.StoreNumberNew).HasColumnName(@"StoreNumberNew").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.BasketS13StockAllowance).HasColumnName(@"BasketS13StockAllowance").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketS25StockAllowance).HasColumnName(@"BasketS25StockAllowance").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketL13StockAllowance).HasColumnName(@"BasketL13StockAllowance").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketL25StockAllowance).HasColumnName(@"BasketL25StockAllowance").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketL40StockAllowance).HasColumnName(@"BasketL40StockAllowance").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketO25StockAllowance).HasColumnName(@"BasketO25StockAllowance").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TrolleyStockAllowance).HasColumnName(@"TrolleyStockAllowance").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Domain).HasColumnName(@"Domain").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.StoreType).HasColumnName(@"StoreType").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired(false);
        }
    }

    // Suppliers
    public class SupplierConfiguration : IEntityTypeConfiguration<Supplier>
    {
        public void Configure(EntityTypeBuilder<Supplier> builder)
        {
            builder.ToTable("Suppliers", "dbo");
            builder.HasKey(x => x.SupplierId).HasName("PK_SuppliersN").IsClustered();

            builder.Property(x => x.SupplierId).HasColumnName(@"SupplierID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.SupplierNumber).HasColumnName(@"SupplierNumber").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
            builder.Property(x => x.SupplierName).HasColumnName(@"SupplierName").HasColumnType("nvarchar(100)").IsRequired().HasMaxLength(100);
            builder.Property(x => x.SupplierNameShort).HasColumnName(@"SupplierNameShort").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired();
            builder.Property(x => x.SupplierAddress).HasColumnName(@"SupplierAddress").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.SupplierTel).HasColumnName(@"SupplierTel").HasColumnType("nvarchar(12)").IsRequired(false).HasMaxLength(12);
            builder.Property(x => x.SupplierTel2).HasColumnName(@"SupplierTel2").HasColumnType("nvarchar(12)").IsRequired(false).HasMaxLength(12);
            builder.Property(x => x.CellPhone).HasColumnName(@"CellPhone").HasColumnType("nvarchar(15)").IsRequired(false).HasMaxLength(15);
            builder.Property(x => x.SupplierFax).HasColumnName(@"SupplierFax").HasColumnType("nvarchar(12)").IsRequired(false).HasMaxLength(12);
            builder.Property(x => x.SupplierEmail).HasColumnName(@"SupplierEmail").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.PrimaryContact).HasColumnName(@"PrimaryContact").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.SupplierRemark).HasColumnName(@"SupplierRemark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.TemperatureRequirement).HasColumnName(@"TemperatureRequirement").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar(20)").IsRequired(false).IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.StructureCode).HasColumnName(@"StructureCode").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.Ts).HasColumnName(@"ts").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.OperationCategoryId).HasColumnName(@"OperationCategoryID").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.VeterinaryInspectionRequired).HasColumnName(@"VeterinaryInspectionRequired").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.SupplierGroupId).HasColumnName(@"SupplierGroupID").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.SupplierTimeFrameId).HasColumnName(@"SupplierTimeFrameID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MinBasket).HasColumnName(@"MinBasket").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MaxBasket).HasColumnName(@"MaxBasket").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketN13Begin).HasColumnName(@"BasketN13Begin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketN25Begin).HasColumnName(@"BasketN25Begin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketL13Begin).HasColumnName(@"BasketL13Begin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketL25Begin).HasColumnName(@"BasketL25Begin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketL40Begin).HasColumnName(@"BasketL40Begin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketBlackBegin).HasColumnName(@"BasketBlackBegin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TrolleyBegin).HasColumnName(@"TrolleyBegin").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Sourcing).HasColumnName(@"SOURCING").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            builder.HasIndex(x => x.SupplierNumber).HasName("IX_Suppliers");
        }
    }

    // SupplierCategories
    public class SupplierCategoryConfiguration : IEntityTypeConfiguration<SupplierCategory>
    {
        public void Configure(EntityTypeBuilder<SupplierCategory> builder)
        {
            builder.ToTable("SupplierCategories", "dbo");
            builder.HasKey(x => x.OperationCategoryId).HasName("PK_SupplierCategories").IsClustered();

            builder.Property(x => x.OperationCategoryId).HasColumnName(@"OperationCategoryID").HasColumnType("tinyint").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.SupplierCategoryName).HasColumnName(@"SupplierCategoryName").HasColumnType("nvarchar(40)").IsRequired(false).HasMaxLength(40);
            builder.Property(x => x.SupplierCategoryNameShort).HasColumnName(@"SupplierCategoryNameShort").HasColumnType("nvarchar(1)").IsRequired(false).HasMaxLength(1);
            builder.Property(x => x.SupplierCategoryNameEnglish).HasColumnName(@"SupplierCategoryNameEnglish").HasColumnType("nvarchar(40)").IsRequired(false).HasMaxLength(40);
        }
    }

    // SupplierGroups
    public class SupplierGroupConfiguration : IEntityTypeConfiguration<SupplierGroup>
    {
        public void Configure(EntityTypeBuilder<SupplierGroup> builder)
        {
            builder.ToTable("SupplierGroups", "dbo");
            builder.HasKey(x => x.SupplierGroupId).HasName("PK_SupplierGroups").IsClustered();

            builder.Property(x => x.SupplierGroupId).HasColumnName(@"SupplierGroupID").HasColumnType("tinyint").IsRequired().ValueGeneratedOnAdd();
            builder.Property(x => x.SupplierGroupName).HasColumnName(@"SupplierGroupName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SupplierGroupNameFull).HasColumnName(@"SupplierGroupNameFull").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SupplierGroupNumber).HasColumnName(@"SupplierGroupNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("datetime").IsRequired(false);
        }
    }

    // SupplierTimeFrame
    public class SupplierTimeFrameConfiguration : IEntityTypeConfiguration<SupplierTimeFrame>
    {
        public void Configure(EntityTypeBuilder<SupplierTimeFrame> builder)
        {
            builder.ToTable("SupplierTimeFrame", "dbo");
            builder.HasKey(x => x.SupplierTimeFrameId).HasName("PK_SupplierTimeFrame").IsClustered();

            builder.Property(x => x.SupplierTimeFrameId).HasColumnName(@"SupplierTimeFrameID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.FromTime).HasColumnName(@"FromTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.ToTime).HasColumnName(@"ToTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.TimeFrameDescription).HasColumnName(@"TimeFrameDescription").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.TimeFrameShort).HasColumnName(@"TimeFrameShort").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.SupplierTimeFramesId).HasColumnName(@"SupplierTimeFramesID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.StoreId).HasColumnName(@"StoreID").HasColumnType("int").IsRequired(false);
        }
    }

    // SupplierTimeFrames
    public class SupplierTimeFrame1Configuration : IEntityTypeConfiguration<SupplierTimeFrame1>
    {
        public void Configure(EntityTypeBuilder<SupplierTimeFrame1> builder)
        {
            builder.ToTable("SupplierTimeFrames", "dbo");
            builder.HasKey(x => x.SupplierTimeFramesId).HasName("PK_SupplierTimeFrames").IsClustered();

            builder.Property(x => x.SupplierTimeFramesId).HasColumnName(@"SupplierTimeFramesID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.SupplierId).HasColumnName(@"SupplierID").HasColumnType("int").IsRequired(false);
        }
    }

    // tmpLabelPrint
    public class TmpLabelPrintConfiguration : IEntityTypeConfiguration<TmpLabelPrint>
    {
        public void Configure(EntityTypeBuilder<TmpLabelPrint> builder)
        {
            builder.ToTable("tmpLabelPrint", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_tmpLabelPrint").IsClustered();

            builder.Property(x => x.CartonIndex).HasColumnName(@"CartonIndex").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.BasketIndex).HasColumnName(@"BasketIndex").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("smallint").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.SalesOrderProductId).HasColumnName(@"SalesOrderProductID").HasColumnType("int").IsRequired(false);
        }
    }

    // tmpProductUnMatchBigC
    public class TmpProductUnMatchBigCConfiguration : IEntityTypeConfiguration<TmpProductUnMatchBigC>
    {
        public void Configure(EntityTypeBuilder<TmpProductUnMatchBigC> builder)
        {
            builder.ToTable("tmpProductUnMatchBigC", "dbo");
            builder.HasKey(x => new { x.Xxx, x.Yyy, x.Zzz, x.Tt, x.Tttt, x.Ttttt, x.Uw });

            builder.Property(x => x.ProductNumber).HasColumnName(@"PRODUCT_NUMBER").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.ProductName).HasColumnName(@"PRODUCT_NAME").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.Xxx).HasColumnName(@"XXX").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Yyy).HasColumnName(@"YYY").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Zzz).HasColumnName(@"ZZZ").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Tt).HasColumnName(@"TT").HasColumnType("varchar(2)").IsRequired().IsUnicode(false).HasMaxLength(2).ValueGeneratedNever();
            builder.Property(x => x.Tttt).HasColumnName(@"TTTT").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Ttttt).HasColumnName(@"TTTTT").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Uw).HasColumnName(@"UW").HasColumnType("int").IsRequired().ValueGeneratedNever();
        }
    }

    // tmpStoreVM
    public class TmpStoreVmConfiguration : IEntityTypeConfiguration<TmpStoreVm>
    {
        public void Configure(EntityTypeBuilder<TmpStoreVm> builder)
        {
            builder.ToTable("tmpStoreVM", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_tmpStoreVM").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"id").HasColumnType("nvarchar(25)").IsRequired().HasMaxLength(25).ValueGeneratedNever();
            builder.Property(x => x.Name).HasColumnName(@"name").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.Adr).HasColumnName(@"adr").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
        }
    }

    // TracingHistories
    public class TracingHistoryConfiguration : IEntityTypeConfiguration<TracingHistory>
    {
        public void Configure(EntityTypeBuilder<TracingHistory> builder)
        {
            builder.ToTable("TracingHistories", "dbo");
            builder.HasKey(x => x.TracingHistoryId).HasName("PK_TracingHistories").IsClustered();

            builder.Property(x => x.TracingHistoryId).HasColumnName(@"TracingHistoryID").HasColumnType("bigint").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.OrderNumber).HasColumnName(@"OrderNumber").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.OrderId).HasColumnName(@"OrderID").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.OrderType).HasColumnName(@"OrderType").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
            builder.Property(x => x.Quantity).HasColumnName(@"Quantity").HasColumnType("decimal(18,5)").IsRequired(false);
            builder.Property(x => x.Ts).HasColumnName(@"TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.OrderDetailId).HasColumnName(@"OrderDetailID").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar(300)").IsRequired(false).HasMaxLength(300);
        }
    }

    // Transporters
    public class TransporterConfiguration : IEntityTypeConfiguration<Transporter>
    {
        public void Configure(EntityTypeBuilder<Transporter> builder)
        {
            builder.ToTable("Transporters", "dbo");
            builder.HasKey(x => x.TransporterId).HasName("PK_Transporters").IsClustered();

            builder.Property(x => x.TransporterId).HasColumnName(@"TransporterID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.TransporterName).HasColumnName(@"TransporterName").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.Address).HasColumnName(@"Address").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.Moblie).HasColumnName(@"Moblie").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.Contract).HasColumnName(@"Contract").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.Fax).HasColumnName(@"Fax").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar(20)").IsRequired(false).IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired(false);
        }
    }

    // Trips
    public class TripConfiguration : IEntityTypeConfiguration<Trip>
    {
        public void Configure(EntityTypeBuilder<Trip> builder)
        {
            builder.ToTable("Trips", "dbo");
            builder.HasKey(x => x.TripId).HasName("PK_Trips").IsClustered();

            builder.Property(x => x.TripId).HasColumnName(@"TripID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.TripNumber).HasColumnName(@"TripNumber").HasColumnType("nvarchar(16)").IsRequired(false).HasMaxLength(16);
            builder.Property(x => x.TripDate).HasColumnName(@"TripDate").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.TruckId).HasColumnName(@"TruckID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.RouteId).HasColumnName(@"RouteID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TripCreatedBy).HasColumnName(@"TripCreatedBy").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.TruckStartTime).HasColumnName(@"TruckStartTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.TruckArriveTime).HasColumnName(@"TruckArriveTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.TripConfirmedTime).HasColumnName(@"TripConfirmedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.TripConfirmed).HasColumnName(@"TripConfirmed").HasColumnType("bit").IsRequired();
            builder.Property(x => x.TripRemark).HasColumnName(@"TripRemark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.DriverName).HasColumnName(@"DriverName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.TripSealNumber).HasColumnName(@"TripSealNumber").HasColumnType("nvarchar(40)").IsRequired(false).HasMaxLength(40);
            builder.Property(x => x.Ts).HasColumnName(@"TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.TruckInOutId).HasColumnName(@"TruckInOutID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TripTruckNumber).HasColumnName(@"TripTruckNumber").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.OperationCategoryId).HasColumnName(@"OperationCategoryID").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.StartWorkingTime).HasColumnName(@"StartWorkingTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.EndWorkingTime).HasColumnName(@"EndWorkingTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.DockNumber).HasColumnName(@"DockNumber").HasColumnType("varchar(5)").IsRequired(false).IsUnicode(false).HasMaxLength(5);
            builder.Property(x => x.TransporterId).HasColumnName(@"TransporterID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.HandlingOvertimeCategoryId).HasColumnName(@"HandlingOvertimeCategoryID").HasColumnType("smallint").IsRequired(false);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TotalSeal).HasColumnName(@"TotalSeal").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Transport).HasColumnName(@"Transport").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);

            builder.HasIndex(x => x.TripDate).HasName("IX_Trips");
            builder.HasIndex(x => x.OperationCategoryId).HasName("IX_Trips_1");
            builder.HasIndex(x => x.HandlingOvertimeCategoryId).HasName("IX_Trips_2");
            builder.HasIndex(x => x.TransporterId).HasName("IX_Trips_3");
        }
    }

    // TripDetails
    public class TripDetailConfiguration : IEntityTypeConfiguration<TripDetail>
    {
        public void Configure(EntityTypeBuilder<TripDetail> builder)
        {
            builder.ToTable("TripDetails", "dbo");
            builder.HasKey(x => x.TripDetailId).HasName("PK_TripDetails").IsClustered();

            builder.Property(x => x.TripDetailId).HasColumnName(@"TripDetailID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.TripId).HasColumnName(@"TripID").HasColumnType("int").IsRequired();
            builder.Property(x => x.TripDetailRemark).HasColumnName(@"TripDetailRemark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.CheckDelete).HasColumnName(@"CheckDelete").HasColumnType("bit").IsRequired();
            builder.Property(x => x.StoreId).HasColumnName(@"StoreID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ActualCarton).HasColumnName(@"ActualCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ActualWeight).HasColumnName(@"ActualWeight").HasColumnType("decimal(18,5)").IsRequired(false);
            builder.Property(x => x.OrderNumber).HasColumnName(@"OrderNumber").HasColumnType("nvarchar(16)").IsRequired().HasMaxLength(16);
            builder.Property(x => x.StoreOrdinalNumber).HasColumnName(@"StoreOrdinalNumber").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.Pallets).HasColumnName(@"Pallets").HasColumnType("smallint").IsRequired(false);
            builder.Property(x => x.ActualVolume).HasColumnName(@"ActualVolume").HasColumnType("decimal(18,5)").IsRequired(false);
            builder.Property(x => x.Basket1).HasColumnName(@"Basket1").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Basket2).HasColumnName(@"Basket2").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.GrossWeight).HasColumnName(@"GrossWeight").HasColumnType("decimal(18,5)").IsRequired(false);
            builder.Property(x => x.BasketId).HasColumnName(@"BasketID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BasketQuantity).HasColumnName(@"BasketQuantity").HasColumnType("int").IsRequired(false);

            builder.HasIndex(x => x.OrderNumber).HasName("IX_TripDetails");
            builder.HasIndex(x => x.StoreId).HasName("IX_TripDetails_1");
            builder.HasIndex(x => x.TripId).HasName("IX_TripDetails_2");
        }
    }

    // ViewCustomers
    public class ViewCustomerConfiguration : IEntityTypeConfiguration<ViewCustomer>
    {
        public void Configure(EntityTypeBuilder<ViewCustomer> builder)
        {
            builder.ToView("ViewCustomers", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.CustomerLocalId).HasColumnName(@"CustomerLocalID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CustomerNumber).HasColumnName(@"CustomerNumber").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.CustomerName).HasColumnName(@"CustomerName").HasColumnType("nvarchar(80)").IsRequired(false).HasMaxLength(80);
            builder.Property(x => x.CustomerFullName).HasColumnName(@"CustomerFullName").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.Initial).HasColumnName(@"Initial").HasColumnType("varchar(3)").IsRequired(false).IsUnicode(false).HasMaxLength(3);
            builder.Property(x => x.CustomerMainId).HasColumnName(@"CustomerMainID").HasColumnType("uniqueidentifier").IsRequired(false);
            builder.Property(x => x.Address).HasColumnName(@"Address").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.CustomerType).HasColumnName(@"CustomerType").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.PrimaryContact).HasColumnName(@"PrimaryContact").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.Phone1).HasColumnName(@"Phone1").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Phone2).HasColumnName(@"Phone2").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Mobile).HasColumnName(@"Mobile").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.Fax).HasColumnName(@"Fax").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Email).HasColumnName(@"Email").HasColumnType("varchar(3000)").IsRequired(false).IsUnicode(false).HasMaxLength(3000);
            builder.Property(x => x.OtherContacts).HasColumnName(@"OtherContacts").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.MarketingInfor).HasColumnName(@"MarketingInfor").HasColumnType("nvarchar(4000)").IsRequired(false).HasMaxLength(4000);
            builder.Property(x => x.CustomerInvoiceName).HasColumnName(@"CustomerInvoiceName").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.CustomerInvoiceAddress).HasColumnName(@"CustomerInvoiceAddress").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.CustomerInvoiceTaxCode).HasColumnName(@"CustomerInvoiceTaxCode").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.CustomerDiscontinued).HasColumnName(@"CustomerDiscontinued").HasColumnType("bit").IsRequired();
            builder.Property(x => x.CustomerCategory).HasColumnName(@"CustomerCategory").HasColumnType("tinyint").IsRequired();
            builder.Property(x => x.CustomerGroup).HasColumnName(@"CustomerGroup").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.SendNote).HasColumnName(@"SendNote").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.CustomerSubId).HasColumnName(@"CustomerSubID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Hold).HasColumnName(@"Hold").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.HoldMessage).HasColumnName(@"HoldMessage").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.HoldLimitWeight).HasColumnName(@"HoldLimitWeight").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Ts).HasColumnName(@"ts").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.HomeLocationChange).HasColumnName(@"HomeLocationChange").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.DispatchingByClient).HasColumnName(@"DispatchingByClient").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.CustomerPalletType).HasColumnName(@"CustomerPalletType").HasColumnType("varchar(4)").IsRequired(false).IsUnicode(false).HasMaxLength(4);
            builder.Property(x => x.Website).HasColumnName(@"Website").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.EmailBilling).HasColumnName(@"EmailBilling").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.CustomerDispatchType).HasColumnName(@"CustomerDispatchType").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.IsAllowEdi).HasColumnName(@"IsAllowEDI").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.CustomerTaxGroup).HasColumnName(@"CustomerTaxGroup").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.BarcodeScanRequire).HasColumnName(@"BarcodeScanRequire").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.PrintLabelRemainRequire).HasColumnName(@"PrintLabelRemainRequire").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.DefaultProcessTime).HasColumnName(@"DefaultProcessTime").HasColumnType("smallint").IsRequired(false);
            builder.Property(x => x.StoreId).HasColumnName(@"StoreID").HasColumnType("int").IsRequired();
            builder.Property(x => x.CustomerPotentialCategoryId).HasColumnName(@"CustomerPotentialCategoryID").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.IsAllowOnlineReport).HasColumnName(@"IsAllowOnlineReport").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.HomeLocation1).HasColumnName(@"HomeLocation1").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.HomeLocation2).HasColumnName(@"HomeLocation2").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.CustId).HasColumnName(@"CustId").HasColumnType("varchar(250)").IsRequired(false).IsUnicode(false).HasMaxLength(250);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CustomerStatus).HasColumnName(@"CustomerStatus").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.OpportunityType).HasColumnName(@"OpportunityType").HasColumnType("nvarchar(255)").IsRequired(false).HasMaxLength(255);
            builder.Property(x => x.OpportunityProbability).HasColumnName(@"OpportunityProbability").HasColumnType("decimal(18,1)").IsRequired(false);
            builder.Property(x => x.OpportunityAssignedToUser).HasColumnName(@"OpportunityAssignedToUser").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.CustomerNumberAccounting).HasColumnName(@"CustomerNumberAccounting").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.IsCustomerTest).HasColumnName(@"IsCustomerTest").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.CustomerAssignedTo).HasColumnName(@"CustomerAssignedTo").HasColumnType("uniqueidentifier").IsRequired(false);
            builder.Property(x => x.CustomerAssignedTo0).HasColumnName(@"CustomerAssignedTo0").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsCheckOutRequire).HasColumnName(@"IsCheckOutRequire").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TemperatureFrom).HasColumnName(@"TemperatureFrom").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.TemperatureTo).HasColumnName(@"TemperatureTo").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.HumidityFrom).HasColumnName(@"HumidityFrom").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.HumidityTo).HasColumnName(@"HumidityTo").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.CustomerNumberErp).HasColumnName(@"CustomerNumberERP").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
        }
    }

    // ViewEmployees
    public class ViewEmployeeConfiguration : IEntityTypeConfiguration<ViewEmployee>
    {
        public void Configure(EntityTypeBuilder<ViewEmployee> builder)
        {
            builder.ToView("ViewEmployees", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.EmployeeId).HasColumnName(@"EmployeeID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.DateOfBirth).HasColumnName(@"DateOfBirth").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("smallint").IsRequired(false);
            builder.Property(x => x.Education).HasColumnName(@"Education").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.Position).HasColumnName(@"Position").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.DateOfEntry).HasColumnName(@"DateOfEntry").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Address).HasColumnName(@"Address").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Mobile).HasColumnName(@"Mobile").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IdCardNumber).HasColumnName(@"IDCardNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Photograph).HasColumnName(@"Photograph").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ContractPermanent).HasColumnName(@"ContractPermanent").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ManagementLevel).HasColumnName(@"ManagementLevel").HasColumnType("int").IsRequired();
            builder.Property(x => x.ContractDate).HasColumnName(@"ContractDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.PositionId).HasColumnName(@"PositionID").HasColumnType("int").IsRequired();
            builder.Property(x => x.VietnamName).HasColumnName(@"VietnamName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.BikeNumber).HasColumnName(@"BikeNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.BikeUse).HasColumnName(@"BikeUse").HasColumnType("bit").IsRequired();
            builder.Property(x => x.VietnamPosition).HasColumnName(@"VietnamPosition").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.InOutCardNumber).HasColumnName(@"InOutCardNumber").HasColumnType("nvarchar(5)").IsRequired(false).HasMaxLength(5);
            builder.Property(x => x.ShiftId).HasColumnName(@"ShiftID").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.Grade).HasColumnName(@"Grade").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.Department).HasColumnName(@"Department").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.AddressNow).HasColumnName(@"AddressNow").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.PerformanceStatus).HasColumnName(@"PerformanceStatus").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IdCardIssueDate).HasColumnName(@"IDCardIssueDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.StoreId).HasColumnName(@"StoreID").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.Sex).HasColumnName(@"Sex").HasColumnType("bit").IsRequired();
            builder.Property(x => x.Ts).HasColumnName(@"TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.IdCardIssuePlace).HasColumnName(@"IDCardIssuePlace").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.MonthlyAdvanceRequired).HasColumnName(@"MonthlyAdvanceRequired").HasColumnType("bit").IsRequired();
            builder.Property(x => x.MonthlyAdvanceAmount).HasColumnName(@"MonthlyAdvanceAmount").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ContractNumber).HasColumnName(@"ContractNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.PersonnalTaxCode).HasColumnName(@"PersonnalTaxCode").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.BankAccountNumber).HasColumnName(@"BankAccountNumber").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.ContractDateFirst).HasColumnName(@"ContractDateFirst").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.Remark).HasColumnName(@"Remark").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.LunchPlace).HasColumnName(@"LunchPlace").HasColumnType("varchar(2)").IsRequired(false).IsUnicode(false).HasMaxLength(2);
            builder.Property(x => x.ReportTo).HasColumnName(@"ReportTo").HasColumnType("int").IsRequired(false);
        }
    }

    // ViewOrderDetailsLast3days
    public class ViewOrderDetailsLast3DaysConfiguration : IEntityTypeConfiguration<ViewOrderDetailsLast3Days>
    {
        public void Configure(EntityTypeBuilder<ViewOrderDetailsLast3Days> builder)
        {
            builder.ToView("ViewOrderDetailsLast3days", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.SalesOrderDate).HasColumnName(@"SalesOrderDate").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.StoreNumber).HasColumnName(@"StoreNumber").HasColumnType("nvarchar(25)").IsRequired().HasMaxLength(25);
            builder.Property(x => x.StoreName).HasColumnName(@"StoreName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.ProductNumber).HasColumnName(@"ProductNumber").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.ProductName).HasColumnName(@"ProductName").HasColumnType("nvarchar(100)").IsRequired().HasMaxLength(100);
            builder.Property(x => x.CartonWeight).HasColumnName(@"CartonWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.SalesOrderProductRemark).HasColumnName(@"SalesOrderProductRemark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.DispatchedActualCarton).HasColumnName(@"DispatchedActualCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualWeight).HasColumnName(@"DispatchedActualWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.StoreBookingCarton).HasColumnName(@"StoreBookingCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.StoreBookingWeight).HasColumnName(@"StoreBookingWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.SalesOrderRemark).HasColumnName(@"SalesOrderRemark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.TruckNumber).HasColumnName(@"TruckNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SoNo).HasColumnName(@"SO_NO").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SalesOrderId).HasColumnName(@"SalesOrderID").HasColumnType("int").IsRequired();
            builder.Property(x => x.SalesOrderNumber).HasColumnName(@"SalesOrderNumber").HasColumnType("nvarchar(16)").IsRequired(false).HasMaxLength(16);
        }
    }

    // ViewPurchasingStoreOrderDetails
    public class ViewPurchasingStoreOrderDetailConfiguration : IEntityTypeConfiguration<ViewPurchasingStoreOrderDetail>
    {
        public void Configure(EntityTypeBuilder<ViewPurchasingStoreOrderDetail> builder)
        {
            builder.ToView("ViewPurchasingStoreOrderDetails", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.SupplierNumber).HasColumnName(@"SupplierNumber").HasColumnType("int").IsRequired();
            builder.Property(x => x.SupplierName).HasColumnName(@"SupplierName").HasColumnType("nvarchar(100)").IsRequired().HasMaxLength(100);
            builder.Property(x => x.PurchasingOrderNumber).HasColumnName(@"PurchasingOrderNumber").HasColumnType("nvarchar(16)").IsRequired(false).HasMaxLength(16);
            builder.Property(x => x.PurchasingOrderDate).HasColumnName(@"PurchasingOrderDate").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.PurchasingOrderRemark).HasColumnName(@"PurchasingOrderRemark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.ReceivingOrdinalNumber).HasColumnName(@"ReceivingOrdinalNumber").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.ProductName).HasColumnName(@"ProductName").HasColumnType("nvarchar(100)").IsRequired().HasMaxLength(100);
            builder.Property(x => x.ReceivedActualWeight).HasColumnName(@"ReceivedActualWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.ReceivedActualVolume).HasColumnName(@"ReceivedActualVolume").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.ReceivedActualCarton).HasColumnName(@"ReceivedActualCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.StoreNumber).HasColumnName(@"StoreNumber").HasColumnType("nvarchar(25)").IsRequired().HasMaxLength(25);
            builder.Property(x => x.StoreName).HasColumnName(@"StoreName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SoNo).HasColumnName(@"SO_NO").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SalesOrderDate).HasColumnName(@"SalesOrderDate").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.TruckNumber).HasColumnName(@"TruckNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SalesOrderRemark).HasColumnName(@"SalesOrderRemark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.DispatchedActualCarton).HasColumnName(@"DispatchedActualCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DispatchedActualWeight).HasColumnName(@"DispatchedActualWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.DispatchedActualVolume).HasColumnName(@"DispatchedActualVolume").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.DispatchedGrossWeight).HasColumnName(@"DispatchedGrossWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.SalesOrderProductRemark).HasColumnName(@"SalesOrderProductRemark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
        }
    }

    // ViewSalesOrderDetailsLast45Days
    public class ViewSalesOrderDetailsLast45DaysConfiguration : IEntityTypeConfiguration<ViewSalesOrderDetailsLast45Days>
    {
        public void Configure(EntityTypeBuilder<ViewSalesOrderDetailsLast45Days> builder)
        {
            builder.ToView("ViewSalesOrderDetailsLast45Days", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.SalesOrderNumber).HasColumnName(@"SalesOrderNumber").HasColumnType("nvarchar(16)").IsRequired(false).HasMaxLength(16);
            builder.Property(x => x.SalesOrderDate).HasColumnName(@"SalesOrderDate").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.StoreNumber).HasColumnName(@"StoreNumber").HasColumnType("nvarchar(25)").IsRequired().HasMaxLength(25);
            builder.Property(x => x.StoreName).HasColumnName(@"StoreName").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.SupplierNumber).HasColumnName(@"SupplierNumber").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
            builder.Property(x => x.SupplierName).HasColumnName(@"SupplierName").HasColumnType("nvarchar(100)").IsRequired().HasMaxLength(100);
            builder.Property(x => x.ProductName).HasColumnName(@"ProductName").HasColumnType("nvarchar(100)").IsRequired().HasMaxLength(100);
            builder.Property(x => x.ProductCategoryId).HasColumnName(@"ProductCategoryID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProductNumber).HasColumnName(@"ProductNumber").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.DispatchedActualWeight).HasColumnName(@"DispatchedActualWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.DispatchedActualCarton).HasColumnName(@"DispatchedActualCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.NetPerCarton).HasColumnName(@"NetPerCarton").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.UnitPerCarton).HasColumnName(@"UnitPerCarton").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProccessingCatergoryId).HasColumnName(@"ProccessingCatergoryID").HasColumnType("tinyint").IsRequired();
            builder.Property(x => x.PurchasingOrderDate).HasColumnName(@"PurchasingOrderDate").HasColumnType("smalldatetime").IsRequired();
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired(false);
        }
    }

    // ViewSalesOrderID
    public class ViewSalesOrderIdConfiguration : IEntityTypeConfiguration<ViewSalesOrderId>
    {
        public void Configure(EntityTypeBuilder<ViewSalesOrderId> builder)
        {
            builder.ToView("ViewSalesOrderID", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.SalesOrderId).HasColumnName(@"SalesOrderID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SalesOrderDate).HasColumnName(@"SalesOrderDate").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.StoreId).HasColumnName(@"StoreID").HasColumnType("int").IsRequired();
            builder.Property(x => x.OperationCategoryId).HasColumnName(@"OperationCategoryID").HasColumnType("tinyint").IsRequired(false);
        }
    }

    // ViewStores
    public class ViewStoreConfiguration : IEntityTypeConfiguration<ViewStore>
    {
        public void Configure(EntityTypeBuilder<ViewStore> builder)
        {
            builder.ToView("ViewStores", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.StoreNumber).HasColumnName(@"StoreNumber").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
            builder.Property(x => x.StoreName).HasColumnName(@"StoreName").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.Note).HasColumnName(@"Note").HasColumnType("varchar(5)").IsRequired(false).IsUnicode(false).HasMaxLength(5);
            builder.Property(x => x.Domain).HasColumnName(@"Domain").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
        }
    }

    // ViewStore_Baskets
    public class ViewStoreBasketConfiguration : IEntityTypeConfiguration<ViewStoreBasket>
    {
        public void Configure(EntityTypeBuilder<ViewStoreBasket> builder)
        {
            builder.ToView("ViewStore_Baskets", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.StoreNumber).HasColumnName(@"StoreNumber").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
            builder.Property(x => x.StoreName).HasColumnName(@"StoreName").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.BasketId).HasColumnName(@"BasketID").HasColumnType("int").IsRequired();
            builder.Property(x => x.BasketNumber).HasColumnName(@"BasketNumber").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
            builder.Property(x => x.BasketName).HasColumnName(@"BasketName").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.Note).HasColumnName(@"Note").HasColumnType("varchar(5)").IsRequired().IsUnicode(false).HasMaxLength(5);
            builder.Property(x => x.Domain).HasColumnName(@"Domain").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
        }
    }

    // ViewStoreListVinmart
    public class ViewStoreListVinmartConfiguration : IEntityTypeConfiguration<ViewStoreListVinmart>
    {
        public void Configure(EntityTypeBuilder<ViewStoreListVinmart> builder)
        {
            builder.ToView("ViewStoreListVinmart", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.StoreNumber).HasColumnName(@"StoreNumber").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.StoreName).HasColumnName(@"StoreName").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.StoreContact).HasColumnName(@"StoreContact").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.StoreType).HasColumnName(@"StoreType").HasColumnType("varchar(3)").IsRequired().IsUnicode(false).HasMaxLength(3);
        }
    }

    // Web_ViewListSuppAndStore
    public class WebViewListSuppAndStoreConfiguration : IEntityTypeConfiguration<WebViewListSuppAndStore>
    {
        public void Configure(EntityTypeBuilder<WebViewListSuppAndStore> builder)
        {
            builder.ToView("Web_ViewListSuppAndStore", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.StoreId).HasColumnName(@"StoreID").HasColumnType("int").IsRequired();
            builder.Property(x => x.StoreNumber).HasColumnName(@"StoreNumber").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
            builder.Property(x => x.StoreName).HasColumnName(@"StoreName").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.ToWhere).HasColumnName(@"ToWhere").HasColumnType("nvarchar(30)").IsRequired().HasMaxLength(30);
            builder.Property(x => x.Rn).HasColumnName(@"rn").HasColumnType("bigint").IsRequired(false);
        }
    }

    // WMS_BigC_Suppliers
    public class WmsBigCSupplierConfiguration : IEntityTypeConfiguration<WmsBigCSupplier>
    {
        public void Configure(EntityTypeBuilder<WmsBigCSupplier> builder)
        {
            builder.ToView("WMS_BigC_Suppliers", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.SupplierId).HasColumnName(@"SupplierID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.SupplierNumber).HasColumnName(@"SupplierNumber").HasColumnType("nvarchar(7)").IsRequired(false).HasMaxLength(7);
            builder.Property(x => x.SupplierName).HasColumnName(@"SupplierName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SupplierNameShort).HasColumnName(@"SupplierNameShort").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SupplierAddress).HasColumnName(@"SupplierAddress").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
        }
    }

    // WMS_ConnectionStrings
    public class WmsConnectionStringConfiguration : IEntityTypeConfiguration<WmsConnectionString>
    {
        public void Configure(EntityTypeBuilder<WmsConnectionString> builder)
        {
            builder.ToView("WMS_ConnectionStrings", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.ConnectionStringId).HasColumnName(@"ConnectionStringID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ConnectionString).HasColumnName(@"ConnectionString").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.Database).HasColumnName(@"Database").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.IsDefault).HasColumnName(@"IsDefault").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Application).HasColumnName(@"Application").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Type).HasColumnName(@"Type").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.IsCurrent).HasColumnName(@"IsCurrent").HasColumnType("bit").IsRequired(false);
        }
    }

    // WMS_Customers
    public class WmsCustomerConfiguration : IEntityTypeConfiguration<WmsCustomer>
    {
        public void Configure(EntityTypeBuilder<WmsCustomer> builder)
        {
            builder.ToView("WMS_Customers", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.CustomerNumber).HasColumnName(@"CustomerNumber").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.CustomerName).HasColumnName(@"CustomerName").HasColumnType("nvarchar(80)").IsRequired(false).HasMaxLength(80);
            builder.Property(x => x.Initial).HasColumnName(@"Initial").HasColumnType("varchar(3)").IsRequired(false).IsUnicode(false).HasMaxLength(3);
            builder.Property(x => x.Address).HasColumnName(@"Address").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.CustomerType).HasColumnName(@"CustomerType").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.PrimaryContact).HasColumnName(@"PrimaryContact").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.Phone1).HasColumnName(@"Phone1").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Phone2).HasColumnName(@"Phone2").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Mobile).HasColumnName(@"Mobile").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.Fax).HasColumnName(@"Fax").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.Email).HasColumnName(@"Email").HasColumnType("varchar(3000)").IsRequired(false).IsUnicode(false).HasMaxLength(3000);
            builder.Property(x => x.OtherContacts).HasColumnName(@"OtherContacts").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.MarketingInfor).HasColumnName(@"MarketingInfor").HasColumnType("nvarchar(4000)").IsRequired(false).HasMaxLength(4000);
            builder.Property(x => x.CustomerInvoiceName).HasColumnName(@"CustomerInvoiceName").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.CustomerInvoiceAddress).HasColumnName(@"CustomerInvoiceAddress").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.CustomerInvoiceTaxCode).HasColumnName(@"CustomerInvoiceTaxCode").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.CustomerDiscontinued).HasColumnName(@"CustomerDiscontinued").HasColumnType("bit").IsRequired();
            builder.Property(x => x.CustomerCategory).HasColumnName(@"CustomerCategory").HasColumnType("tinyint").IsRequired();
            builder.Property(x => x.CustomerGroup).HasColumnName(@"CustomerGroup").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.CustomerMainId).HasColumnName(@"CustomerMainID").HasColumnType("uniqueidentifier").IsRequired(false);
            builder.Property(x => x.SendNote).HasColumnName(@"SendNote").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.CustomerSubId).HasColumnName(@"CustomerSubID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Hold).HasColumnName(@"Hold").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.HoldMessage).HasColumnName(@"HoldMessage").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.Ts).HasColumnName(@"ts").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.HomeLocationChange).HasColumnName(@"HomeLocationChange").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.DispatchingByClient).HasColumnName(@"DispatchingByClient").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.CustomerPalletType).HasColumnName(@"CustomerPalletType").HasColumnType("varchar(4)").IsRequired(false).IsUnicode(false).HasMaxLength(4);
            builder.Property(x => x.Website).HasColumnName(@"Website").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.EmailBilling).HasColumnName(@"EmailBilling").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.CustomerDispatchType).HasColumnName(@"CustomerDispatchType").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.IsAllowEdi).HasColumnName(@"IsAllowEDI").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.HoldLimitWeight).HasColumnName(@"HoldLimitWeight").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CustomerTaxGroup).HasColumnName(@"CustomerTaxGroup").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.CustomerLocalId).HasColumnName(@"CustomerLocalID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BarcodeScanRequire).HasColumnName(@"BarcodeScanRequire").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.PrintLabelRemainRequire).HasColumnName(@"PrintLabelRemainRequire").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.DefaultProcessTime).HasColumnName(@"DefaultProcessTime").HasColumnType("smallint").IsRequired(false);
            builder.Property(x => x.StoreId).HasColumnName(@"StoreID").HasColumnType("int").IsRequired();
            builder.Property(x => x.CustomerPotentialCategoryId).HasColumnName(@"CustomerPotentialCategoryID").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.IsAllowOnlineReport).HasColumnName(@"IsAllowOnlineReport").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.HomeLocation1).HasColumnName(@"HomeLocation1").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.HomeLocation2).HasColumnName(@"HomeLocation2").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CustomerStatus).HasColumnName(@"CustomerStatus").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.OpportunityType).HasColumnName(@"OpportunityType").HasColumnType("nvarchar(255)").IsRequired(false).HasMaxLength(255);
            builder.Property(x => x.OpportunityProbability).HasColumnName(@"OpportunityProbability").HasColumnType("decimal(18,1)").IsRequired(false);
            builder.Property(x => x.OpportunityAssignedToUser).HasColumnName(@"OpportunityAssignedToUser").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.CustomerNumberAccounting).HasColumnName(@"CustomerNumberAccounting").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.IsCustomerTest).HasColumnName(@"IsCustomerTest").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.CustomerAssignedTo).HasColumnName(@"CustomerAssignedTo").HasColumnType("uniqueidentifier").IsRequired(false);
            builder.Property(x => x.CustomerAssignedTo0).HasColumnName(@"CustomerAssignedTo0").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsCheckOutRequire).HasColumnName(@"IsCheckOutRequire").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TemperatureFrom).HasColumnName(@"TemperatureFrom").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.TemperatureTo).HasColumnName(@"TemperatureTo").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.HumidityFrom).HasColumnName(@"HumidityFrom").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.HumidityTo).HasColumnName(@"HumidityTo").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.CustomerNumberErp).HasColumnName(@"CustomerNumberERP").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
        }
    }

    // WMS_CustomerClients
    public class WmsCustomerClientConfiguration : IEntityTypeConfiguration<WmsCustomerClient>
    {
        public void Configure(EntityTypeBuilder<WmsCustomerClient> builder)
        {
            builder.ToView("WMS_CustomerClients", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.CustomerClientId).HasColumnName(@"CustomerClientID").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.CustomerClientCode).HasColumnName(@"CustomerClientCode").HasColumnType("nvarchar(255)").IsRequired().HasMaxLength(255);
            builder.Property(x => x.CustomerClientName).HasColumnName(@"CustomerClientName").HasColumnType("nvarchar(255)").IsRequired(false).HasMaxLength(255);
            builder.Property(x => x.CustomerClientAddress).HasColumnName(@"CustomerClientAddress").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.CustomerClientPhone).HasColumnName(@"CustomerClientPhone").HasColumnType("nvarchar(255)").IsRequired(false).HasMaxLength(255);
            builder.Property(x => x.CustomerClientEmail).HasColumnName(@"CustomerClientEmail").HasColumnType("nvarchar(255)").IsRequired(false).HasMaxLength(255);
            builder.Property(x => x.CustomerClientContacts).HasColumnName(@"CustomerClientContacts").HasColumnType("nvarchar(255)").IsRequired(false).HasMaxLength(255);
            builder.Property(x => x.CustomerClientDescriptions).HasColumnName(@"CustomerClientDescriptions").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.CustomerClientTaxName).HasColumnName(@"CustomerClientTaxName").HasColumnType("nvarchar(255)").IsRequired(false).HasMaxLength(255);
            builder.Property(x => x.CustomerClientTaxCode).HasColumnName(@"CustomerClientTaxCode").HasColumnType("varchar(255)").IsRequired(false).IsUnicode(false).HasMaxLength(255);
            builder.Property(x => x.CustomerClientDeliveryAddress).HasColumnName(@"CustomerClientDeliveryAddress").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.CustomerClientMainId).HasColumnName(@"CustomerClientMainID").HasColumnType("uniqueidentifier").IsRequired(false);
            builder.Property(x => x.CustomerClientCodeFbv).HasColumnName(@"CustomerClientCodeFBV").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CustomerClientMain).HasColumnName(@"CustomerClientMain").HasColumnType("nvarchar(255)").IsRequired(false).HasMaxLength(255);
            builder.Property(x => x.DiscountAmountPercentage).HasColumnName(@"DiscountAmountPercentage").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.CustomerClientCreditTerm).HasColumnName(@"CustomerClientCreditTerm").HasColumnType("smallint").IsRequired(false);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar(255)").IsRequired(false).IsUnicode(false).HasMaxLength(255);
            builder.Property(x => x.CustomerClientBuyer).HasColumnName(@"CustomerClientBuyer").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
        }
    }

    // WMS_DispatchingOrders
    public class WmsDispatchingOrderConfiguration : IEntityTypeConfiguration<WmsDispatchingOrder>
    {
        public void Configure(EntityTypeBuilder<WmsDispatchingOrder> builder)
        {
            builder.ToView("WMS_DispatchingOrders", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.DispatchingOrderId).HasColumnName(@"DispatchingOrderID").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.DispatchingOrderNumber).HasColumnName(@"DispatchingOrderNumber").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.DispatchingOrderDate).HasColumnName(@"DispatchingOrderDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("bit").IsRequired();
            builder.Property(x => x.Temperature).HasColumnName(@"Temperature").HasColumnType("decimal(18,1)").IsRequired(false);
            builder.Property(x => x.SealNumber).HasColumnName(@"SealNumber").HasColumnType("nvarchar(40)").IsRequired(false).HasMaxLength(40);
            builder.Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.DispatchingOrderProgress).HasColumnName(@"DispatchingOrderProgress").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.CustomerClientId).HasColumnName(@"CustomerClientID").HasColumnType("uniqueidentifier").IsRequired(false);
            builder.Property(x => x.InternalRemark).HasColumnName(@"InternalRemark").HasColumnType("nvarchar(300)").IsRequired(false).HasMaxLength(300);
            builder.Property(x => x.DispatchingOrderLocalId).HasColumnName(@"DispatchingOrderLocalID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ServicesDefinitionId).HasColumnName(@"ServicesDefinitionID").HasColumnType("uniqueidentifier").IsRequired(false);
            builder.Property(x => x.DispatchingOrderRemark).HasColumnName(@"DispatchingOrderRemark").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.Electricity).HasColumnName(@"Electricity").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.ProgressPercentage).HasColumnName(@"ProgressPercentage").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.IsAttachment).HasColumnName(@"IsAttachment").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.CustomerOrderNumber).HasColumnName(@"CustomerOrderNumber").HasColumnType("varchar(32)").IsRequired(false).IsUnicode(false).HasMaxLength(32);
            builder.Property(x => x.VehicleNumber).HasColumnName(@"VehicleNumber").HasColumnType("varchar(50)").IsRequired(false).IsUnicode(false).HasMaxLength(50);
            builder.Property(x => x.TimeSlotId).HasColumnName(@"TimeSlotID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DockDoorId).HasColumnName(@"DockDoorID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PickingPercentage).HasColumnName(@"PickingPercentage").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.CustPoNumber).HasColumnName(@"CUST_PO_NUMBER").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.RouteId).HasColumnName(@"RouteID").HasColumnType("uniqueidentifier").IsRequired(false);
            builder.Property(x => x.TransporterId).HasColumnName(@"TransporterID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PackingPercentage).HasColumnName(@"PackingPercentage").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.PerformanceCategoryId).HasColumnName(@"PerformanceCategoryID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.WorkDefinitionId).HasColumnName(@"WorkDefinitionID").HasColumnType("uniqueidentifier").IsRequired(false);
            builder.Property(x => x.DeliveryId).HasColumnName(@"DeliveryID").HasColumnType("varchar(32)").IsRequired(false).IsUnicode(false).HasMaxLength(32);
            builder.Property(x => x.OrderTypeId).HasColumnName(@"OrderTypeID").HasColumnType("tinyint").IsRequired(false);
        }
    }

    // WMS_DispatchingOrderDetails
    public class WmsDispatchingOrderDetailConfiguration : IEntityTypeConfiguration<WmsDispatchingOrderDetail>
    {
        public void Configure(EntityTypeBuilder<WmsDispatchingOrderDetail> builder)
        {
            builder.ToView("WMS_DispatchingOrderDetails", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.DispatchingOrderDetailId).HasColumnName(@"DispatchingOrderDetailID").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.PalletId).HasColumnName(@"PalletID").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.PackageQuantity).HasColumnName(@"PackageQuantity").HasColumnType("int").IsRequired();
            builder.Property(x => x.ReceivingOrderNumber).HasColumnName(@"ReceivingOrderNumber").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.Ts).HasColumnName(@"TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.UnitQuantity).HasColumnName(@"UnitQuantity").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PalletWeight).HasColumnName(@"PalletWeight").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.DispatchingOrderDetailRemark).HasColumnName(@"DispatchingOrderDetailRemark").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.Checked).HasColumnName(@"Checked").HasColumnType("bit").IsRequired(false);
        }
    }

    // WMS_DispatchingProducts
    public class WmsDispatchingProductConfiguration : IEntityTypeConfiguration<WmsDispatchingProduct>
    {
        public void Configure(EntityTypeBuilder<WmsDispatchingProduct> builder)
        {
            builder.ToView("WMS_DispatchingProducts", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.DispatchingProductId).HasColumnName(@"DispatchingProductID").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.DispatchingOrderId).HasColumnName(@"DispatchingOrderID").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.ProductId).HasColumnName(@"ProductID").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.PackagesPerPallet).HasColumnName(@"PackagesPerPallet").HasColumnType("smallint").IsRequired(false);
            builder.Property(x => x.TotalPackages).HasColumnName(@"TotalPackages").HasColumnType("int").IsRequired();
            builder.Property(x => x.WeightPerPackage).HasColumnName(@"WeightPerPackage").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.TransactionId).HasColumnName(@"TransactionID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.Remark).HasColumnName(@"Remark").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.UserId).HasColumnName(@"UserID").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.Plts).HasColumnName(@"Plts").HasColumnType("smallint").IsRequired(false);
            builder.Property(x => x.CustomerRef).HasColumnName(@"CustomerRef").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Ts).HasColumnName(@"TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.TotalWeight).HasColumnName(@"TotalWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.TotalUnits).HasColumnName(@"TotalUnits").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.UnitPerPackage).HasColumnName(@"UnitPerPackage").HasColumnType("smallint").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.Temperature).HasColumnName(@"Temperature").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.ConfirmedTime).HasColumnName(@"ConfirmedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.SendStatus).HasColumnName(@"SendStatus").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.SendTime).HasColumnName(@"SendTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.CustomerRefDetailId).HasColumnName(@"CustomerRef_DetailID").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.PackingPercentage).HasColumnName(@"PackingPercentage").HasColumnType("float").IsRequired(false);
            builder.Property(x => x.CustomerRef2).HasColumnName(@"CustomerRef2").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.Message).HasColumnName(@"Message").HasColumnType("varchar(255)").IsRequired(false).IsUnicode(false).HasMaxLength(255);
            builder.Property(x => x.DeliveryActual).HasColumnName(@"DeliveryActual").HasColumnType("int").IsRequired(false);
        }
    }

    // WMS_Pallets
    public class WmsPalletConfiguration : IEntityTypeConfiguration<WmsPallet>
    {
        public void Configure(EntityTypeBuilder<WmsPallet> builder)
        {
            builder.ToView("WMS_Pallets", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.PalletId).HasColumnName(@"PalletID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.Label).HasColumnName(@"Label").HasColumnType("varchar(15)").IsRequired().IsUnicode(false).HasMaxLength(15);
            builder.Property(x => x.OriginalQuantity).HasColumnName(@"OriginalQuantity").HasColumnType("smallint").IsRequired();
            builder.Property(x => x.AfterDpQuantity).HasColumnName(@"AfterDPQuantity").HasColumnType("smallint").IsRequired();
            builder.Property(x => x.CurrentQuantity).HasColumnName(@"CurrentQuantity").HasColumnType("smallint").IsRequired();
            builder.Property(x => x.OnHold).HasColumnName(@"OnHold").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ReceivingOrderDetailId).HasColumnName(@"ReceivingOrderDetailID").HasColumnType("int").IsRequired();
            builder.Property(x => x.LocationId).HasColumnName(@"LocationID").HasColumnType("int").IsRequired();
            builder.Property(x => x.Status).HasColumnName(@"status").HasColumnType("bit").IsRequired();
            builder.Property(x => x.CanMove).HasColumnName(@"CanMove").HasColumnType("bit").IsRequired();
            builder.Property(x => x.Remark).HasColumnName(@"Remark").HasColumnType("nvarchar(800)").IsRequired(false).HasMaxLength(800);
            builder.Property(x => x.CanNotAdd).HasColumnName(@"CanNotAdd").HasColumnType("bit").IsRequired();
            builder.Property(x => x.Ts).HasColumnName(@"TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.UnitQuantity).HasColumnName(@"UnitQuantity").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PalletWeight).HasColumnName(@"PalletWeight").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.PalletStatus).HasColumnName(@"PalletStatus").HasColumnType("tinyint").IsRequired(false);
        }
    }

    // WMS_ReceivingOrders
    public class WmsReceivingOrderConfiguration : IEntityTypeConfiguration<WmsReceivingOrder>
    {
        public void Configure(EntityTypeBuilder<WmsReceivingOrder> builder)
        {
            builder.ToView("WMS_ReceivingOrders", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.ReceivingOrderId).HasColumnName(@"ReceivingOrderID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.ReceivingOrderNumber).HasColumnName(@"ReceivingOrderNumber").HasColumnType("nvarchar(16)").IsRequired(false).HasMaxLength(16);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired();
            builder.Property(x => x.CustomerNumber).HasColumnName(@"CustomerNumber").HasColumnType("nvarchar(14)").IsRequired(false).HasMaxLength(14);
            builder.Property(x => x.ReceivingOrderDate).HasColumnName(@"ReceivingOrderDate").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("bit").IsRequired();
            builder.Property(x => x.Temperature).HasColumnName(@"Temperature").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.SpecialRequirement).HasColumnName(@"SpecialRequirement").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.ReceivingCreatedTime).HasColumnName(@"ReceivingCreatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.Owner).HasColumnName(@"Owner").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.DockNumber).HasColumnName(@"DockNumber").HasColumnType("char(2)").IsRequired(false).IsFixedLength().IsUnicode(false).HasMaxLength(2);
            builder.Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.ReceivingOrderProgress).HasColumnName(@"ReceivingOrderProgress").HasColumnType("tinyint").IsRequired(false);
            builder.Property(x => x.SealNumber).HasColumnName(@"SealNumber").HasColumnType("varchar(12)").IsRequired(false).IsUnicode(false).HasMaxLength(12);
            builder.Property(x => x.Ts).HasColumnName(@"TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.BlNumber).HasColumnName(@"BLNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.InvoiceNumber).HasColumnName(@"InvoiceNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.ContractDate).HasColumnName(@"ContractDate").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.LadingReportNumber).HasColumnName(@"LadingReportNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CustomsDeclarationNumber).HasColumnName(@"CustomsDeclarationNumber").HasColumnType("nvarchar(70)").IsRequired(false).HasMaxLength(70);
            builder.Property(x => x.ContractNumber).HasColumnName(@"ContractNumber").HasColumnType("nvarchar(70)").IsRequired(false).HasMaxLength(70);
            builder.Property(x => x.Origin).HasColumnName(@"Origin").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.HandlingOvertimeCategoryId).HasColumnName(@"HandlingOvertimeCategoryID").HasColumnType("smallint").IsRequired(false);
            builder.Property(x => x.InternalRemark).HasColumnName(@"InternalRemark").HasColumnType("nvarchar(300)").IsRequired(false).HasMaxLength(300);
        }
    }

    // WMS_ReceivingOrderDetails
    public class WmsReceivingOrderDetailConfiguration : IEntityTypeConfiguration<WmsReceivingOrderDetail>
    {
        public void Configure(EntityTypeBuilder<WmsReceivingOrderDetail> builder)
        {
            builder.ToView("WMS_ReceivingOrderDetails", "dbo");
            builder.HasNoKey();

            builder.Property(x => x.ReceivingOrderDetailId).HasColumnName(@"ReceivingOrderDetailID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.ReceivingOrderId).HasColumnName(@"ReceivingOrderID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ProductNumber).HasColumnName(@"ProductNumber").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.ReceivingOrderNumber).HasColumnName(@"ReceivingOrderNumber").HasColumnType("varchar(20)").IsRequired().IsUnicode(false).HasMaxLength(20);
            builder.Property(x => x.ProductName).HasColumnName(@"ProductName").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.ProductId).HasColumnName(@"ProductID").HasColumnType("int").IsRequired();
            builder.Property(x => x.PackagesPerPallet).HasColumnName(@"PackagesPerPallet").HasColumnType("smallint").IsRequired();
            builder.Property(x => x.TotalPackages).HasColumnName(@"TotalPackages").HasColumnType("smallint").IsRequired();
            builder.Property(x => x.WeightPerPackage).HasColumnName(@"WeightPerPackage").HasColumnType("real").IsRequired();
            builder.Property(x => x.ProductionDate).HasColumnName(@"ProductionDate").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.UseByDate).HasColumnName(@"UseByDate").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.Remark).HasColumnName(@"Remark").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.TransactionId).HasColumnName(@"TransactionID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CustomerRef).HasColumnName(@"CustomerRef").HasColumnType("nvarchar(30)").IsRequired(false).HasMaxLength(30);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("tinyint").IsRequired();
            builder.Property(x => x.PalletHeight).HasColumnName(@"PalletHeight").HasColumnType("real").IsRequired(false);
            builder.Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CreatedTime).HasColumnName(@"CreatedTime").HasColumnType("smalldatetime").IsRequired(false);
            builder.Property(x => x.Plts).HasColumnName(@"Plts").HasColumnType("smallint").IsRequired(false);
            builder.Property(x => x.Ts).HasColumnName(@"TS").HasColumnType("timestamp").IsRequired(false);
            builder.Property(x => x.TotalUnits).HasColumnName(@"TotalUnits").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TotalWeight).HasColumnName(@"TotalWeight").HasColumnType("decimal(15,5)").IsRequired(false);
            builder.Property(x => x.PackingListQuantity).HasColumnName(@"PackingListQuantity").HasColumnType("smallint").IsRequired(false);
            builder.Property(x => x.UnitPerPackage).HasColumnName(@"UnitPerPackage").HasColumnType("smallint").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.Origin).HasColumnName(@"Origin").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
        }
    }


    #endregion

    #region Stored procedure return models

    public class FtBasketMovementDetailNotReturnActualReturnModel
    {
        public int? QuantityConfirm { get; set; }
        public string BasketMovementNumber { get; set; }
        public int? Quantity { get; set; }
    }

    public class FtBasketMovementDetailStatusReturnModel
    {
        public long BasketMovementID { get; set; }
        public int? QuantityConfirm { get; set; }
    }

    public class FtBmInFdReturnModel
    {
        public int BasketID { get; set; }
        public string ToWhere { get; set; }
        public int? InFD { get; set; }
    }

    public class FtBmInFdtdReturnModel
    {
        public int BasketID { get; set; }
        public string ToWhere { get; set; }
        public int? InFDTD { get; set; }
    }

    public class FtBmOutFdReturnModel
    {
        public int BasketID { get; set; }
        public string FromWhere { get; set; }
        public int? OutFD { get; set; }
    }

    public class FtBmOutFdtdReturnModel
    {
        public int BasketID { get; set; }
        public string FromWhere { get; set; }
        public int? OutFDTD { get; set; }
    }

    public class OldFtBmInFdReturnModel
    {
        public string ToWhere { get; set; }
        public int BasketID { get; set; }
        public int? InFD { get; set; }
    }

    public class OldFtBmInFdtdReturnModel
    {
        public string ToWhere { get; set; }
        public int BasketID { get; set; }
        public int? InFDTD { get; set; }
    }

    public class OldFtBmOutFdReturnModel
    {
        public string FromWhere { get; set; }
        public int BasketID { get; set; }
        public int? OutFD { get; set; }
    }

    public class OldFtBmOutFdtdReturnModel
    {
        public string FromWhere { get; set; }
        public int BasketID { get; set; }
        public string BasketNumber { get; set; }
        public int? OutFDTD { get; set; }
    }

    public class SpBasketMovementNoteReturnModel
    {
        public string BasketMovementNumber { get; set; }
        public string BasketNumber { get; set; }
        public string BasketName { get; set; }
        public int BasketID { get; set; }
        public int? Quantity { get; set; }
        public bool? Damaged { get; set; }
        public int? QuantityConfirm { get; set; }
        public string Remark { get; set; }
        public string StoreName { get; set; }
        public string StoreNameTo { get; set; }
        public DateTime BasketMovementDate { get; set; }
        public string CreatedBy { get; set; }
        public string TruckNumber { get; set; }
        public string TruckDriverName { get; set; }
        public string BasketMovementRemark { get; set; }
        public DateTime? StartTime { get; set; }
        public Single? TruckTemp { get; set; }
        public string WorkerName { get; set; }
        public int? Carton { get; set; }
        public DateTime? TimeOutSCS { get; set; }
    }

    public class SpLoadBasketMovementDetailReturnModel
    {
        public long BasketMovementID { get; set; }
        public long BasketMovementDetailID { get; set; }
        public int BasketID { get; set; }
        public string BasketNumber { get; set; }
        public string BasketName { get; set; }
        public string BasketNameVietnamese { get; set; }
        public int? Quantity { get; set; }
        public int? QuantityConfirm { get; set; }
        public int? QuantityConfirmBad { get; set; }
        public int? QuantityReturn { get; set; }
        public string CreatedBy { get; set; }
        public DateTime? CreatedTime { get; set; }
        public string Remark { get; set; }
        public byte[] ts { get; set; }
        public bool? Damaged { get; set; }
        public int? QuantityBad { get; set; }
        public int? QuantityReturnBad { get; set; }
        public int? QuantityReturnConfirm { get; set; }
        public int? QuantityReturnConfirmBad { get; set; }
        public bool? CheckDelete { get; set; }
        public string UpdatedBy { get; set; }
        public DateTime? UpdatedTime { get; set; }
        public byte? Status { get; set; }
        public int? BasketMovementDetailIDMaster { get; set; }
        public double? BasketWeight { get; set; }
        public double? TotalWeight { get; set; }
    }

    public class StAndroidBasketListReturnModel
    {
        public int BasketID { get; set; }
        public string BasketNumber { get; set; }
        public string BasketName { get; set; }
    }

    public class StAndroidBasketMovementsReturnModel
    {
        public string BasketMovementNumber { get; set; }
        public string FromWhere { get; set; }
        public string ToWhere { get; set; }
        public DateTime? BasketMovementDate { get; set; }
        public string BasketMovementRemark { get; set; }
        public string CreatedBy { get; set; }
        public DateTime? CreatedTime { get; set; }
        public string BasketNumber { get; set; }
        public string BasketName { get; set; }
        public int? Quantity { get; set; }
    }

    public class StAndroidPurchasingOrderTodayReturnModel
    {
        public string SupplierNumber { get; set; }
        public string SupplierNameShort { get; set; }
        public decimal? BookingWeight { get; set; }
        public decimal? GrossWeight { get; set; }
        public decimal? ActualWeight { get; set; }
        public int? BasketQuantity { get; set; }
        public int PurchasingOrderID { get; set; }
        public string PurchasingOrderNumber { get; set; }
        public string BasketMovementNumber { get; set; }
        public int? BasketQuantityReturn { get; set; }
    }

    public class StAndroidSalesOrderBySupplierReturnModel
    {
        public int PurchasingOrderID { get; set; }
        public int SalesOrderID { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public decimal? BookingWeight { get; set; }
        public decimal? DispatchedGrossWeight { get; set; }
        public int? ActualCarton { get; set; }
        public int? BasketQuantity { get; set; }
    }

    public class StAndroidSalesOrderNoteReturnModel
    {
        public string ProductNumber { get; set; }
        public string ProductName { get; set; }
        public int SalesOrderID { get; set; }
        public string SalesOrderNumber { get; set; }
        public DateTime? SalesOrderDate { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public decimal? DispatchedActualWeight { get; set; }
        public decimal? DispatchedGrossWeight { get; set; }
        public string SalesOrderProductRemark { get; set; }
        public double? PODetailDamage { get; set; }
        public string TripNumber { get; set; }
    }

    public class StAndroidSalesOrderProductByStoreReturnModel
    {
        public int SalesOrderProductID { get; set; }
        public string ProductNumber { get; set; }
        public string ProductName { get; set; }
        public decimal? StoreBookingWeight { get; set; }
        public decimal? DispatchedActualWeight { get; set; }
        public decimal? DispatchedGrossWeight { get; set; }
        public int? BasketQuantity { get; set; }
        public string BasketNumber { get; set; }
        public int? DispatchedActualCarton { get; set; }
        public string PurchasingOrderNumber { get; set; }
    }

    public class StAndroidSalesOrderProductsReturnModel
    {
        public int SalesOrderProductID { get; set; }
        public string ProductNumber { get; set; }
        public string ProductName { get; set; }
        public decimal? StoreBookingWeight { get; set; }
        public decimal? DispatchedGrossWeight { get; set; }
        public int? DispatchedActualCarton { get; set; }
        public int? BasketID { get; set; }
        public string BasketNumber { get; set; }
        public int? BasketQuantity { get; set; }
    }

    public class StAndroidTripDetailsReturnModel
    {
        public string ProductNumber { get; set; }
        public string ProductName { get; set; }
        public decimal? StoreBookingWeight { get; set; }
        public decimal? DispatchedGrossWeight { get; set; }
        public int? DispatchedActualCarton { get; set; }
        public decimal? DispatchedActualWeight { get; set; }
        public int? Basket1 { get; set; }
        public int? Basket2 { get; set; }
        public int? Basket3 { get; set; }
        public int? Basket4 { get; set; }
        public int? Basket5 { get; set; }
        public int? Basket6 { get; set; }
        public int? Basket7 { get; set; }
        public int? Basket8 { get; set; }
        public int? Basket9 { get; set; }
        public string ScannedResult { get; set; }
        public byte? ScannedStatus { get; set; }
        public DateTime? ScannedTime { get; set; }
        public string ScannedBy { get; set; }
    }

    public class StAnimalQuarantineBigCMainReportReturnModel
    {
        public int GroupRowID { get; set; }
        public string NameRow2 { get; set; }
        public string TotalCartons2 { get; set; }
        public string TotalWeight2 { get; set; }
        public string PackingUnit2 { get; set; }
        public string Uses2 { get; set; }
        public string StoreName { get; set; }
        public string NameRow { get; set; }
        public int? TotalCartons { get; set; }
        public double? TotalWeight { get; set; }
        public string PackingUnit { get; set; }
        public string StoreAddress { get; set; }
        public string StoreNumber { get; set; }
    }

    public class StAnimalQuarantineFindQidReturnModel
    {
        public int AnimalQuarantineID { get; set; }
        public DateTime? CheckDay { get; set; }
        public string QuarantineCode { get; set; }
        public string CreatedBy { get; set; }
        public DateTime? CheckTime { get; set; }
    }

    public class StAnimalQuarantineGroupOneStorDateReturnModel
    {
        public string StoreName { get; set; }
        public string NameRow { get; set; }
        public string PackingUnit { get; set; }
        public DateTime? Checkday { get; set; }
        public string CustomerName { get; set; }
        public string SupplierCategoryName { get; set; }
        public string TotalCartons { get; set; }
        public string TotalWeight { get; set; }
        public int GroupRowID { get; set; }
    }

    public class StBasketListReturnModel
    {
        public class ResultSetModel1
        {
            public int BasketID { get; set; }
            public string BasketNumber { get; set; }
            public string BasketName { get; set; }
            public double? BasketWeight { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public int BasketID { get; set; }
            public string BasketNumber { get; set; }
            public string BasketName { get; set; }
            public double? BasketWeight { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
    }

    public class StBasketMovementNoteReturnModel
    {
        public string BasketMovementNumber { get; set; }
        public string StoreName { get; set; }
        public string StoreNameTo { get; set; }
        public DateTime? BasketMovementDate { get; set; }
        public string CreatedBy { get; set; }
        public string TruckNumber { get; set; }
        public string TruckDriverName { get; set; }
        public string BasketMovementRemark { get; set; }
        public DateTime? StartTime { get; set; }
        public string TruckTemp { get; set; }
        public string WorkerName { get; set; }
        public DateTime? EndTime { get; set; }
        public int? Carton { get; set; }
        public DateTime? TimeOutABA { get; set; }
        public string BasketNumber { get; set; }
        public string BasketName { get; set; }
        public int? Quantity { get; set; }
        public int? QuantityConfirm { get; set; }
        public string Remark { get; set; }
        public int? QuantityReturn { get; set; }
        public int? QuantityReturnConfirm { get; set; }
        public int? QuantityBad { get; set; }
        public int? QuantityConfirmBad { get; set; }
        public int? QuantityReturnBad { get; set; }
        public int? QuantityReturnConfirmBad { get; set; }
        public int BasketID { get; set; }
        public byte? Sequence { get; set; }
        public int? Stock { get; set; }
    }

    public class StBasketMovementStockOnHandByStoreReturnModel
    {
        public int CustomerID { get; set; }
        public string ToWhere { get; set; }
    }

    public class StBasketMovementSummaryDetailViewReturnModel
    {
        public string MainNumber { get; set; }
        public string ReferenceNumber { get; set; }
        public int? BasketID { get; set; }
        public string BasketName { get; set; }
        public int? Quantity { get; set; }
        public int? QuanityConfirm { get; set; }
        public long? MainDetailID { get; set; }
        public string ChildNumber { get; set; }
        public int? ReturnQuantity { get; set; }
        public int? ReturnQuantityConfirm { get; set; }
        public long? ChildDetailID { get; set; }
    }

    public class StBasketMovementSummaryNoteReturnModel
    {
        public int BasketID { get; set; }
        public string BasketNumber { get; set; }
        public string BasketName { get; set; }
        public byte? Sequence { get; set; }
        public string BasketMovementNumber { get; set; }
        public int? Quantity { get; set; }
        public bool? Damaged { get; set; }
        public int? QuantityConfirm { get; set; }
        public string Remark { get; set; }
        public string StoreName { get; set; }
        public string StoreNameTo { get; set; }
        public DateTime? BasketMovementDate { get; set; }
        public string CreatedBy { get; set; }
        public string TruckNumber { get; set; }
        public string TruckDriverName { get; set; }
        public string BasketMovementRemark { get; set; }
        public DateTime? StartTime { get; set; }
        public Single? TruckTemp { get; set; }
        public string WorkerName { get; set; }
        public int? Carton { get; set; }
        public int? QuantityReturn { get; set; }
        public int? QuantityReturnConfirm { get; set; }
        public int? QuantityBad { get; set; }
        public int? QuantityConfirmBad { get; set; }
        public int? QuantityReturnBad { get; set; }
        public int? QuantityReturnConfirmBad { get; set; }
        public bool? Confirmed { get; set; }
        public DateTime? EndTime { get; set; }
    }

    public class StBasketMovementViewReturnModel
    {
        public string BasketMovementNumber { get; set; }
        public DateTime BasketMovementDate { get; set; }
        public string FromWhere { get; set; }
        public string ToWhere { get; set; }
        public string TruckNumber { get; set; }
        public string TruckDriverName { get; set; }
        public string BasketMovementRemark { get; set; }
        public int? Quantity { get; set; }
        public int? QuantityConfirm { get; set; }
        public int? QuantityReturn { get; set; }
        public int? QuantityReturnConfirm { get; set; }
    }

    public class StBasketStockMovementByStoreReportReturnModel
    {
        public string StoreFull { get; set; }
        public string BasketFull { get; set; }
        public DateTime? FromDate { get; set; }
        public DateTime? ToDate { get; set; }
        public int? Begin { get; set; }
        public int? In { get; set; }
        public int? Out { get; set; }
        public int? Close { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public string BasketNumber { get; set; }
        public string BasketName { get; set; }
        public int? StockMax { get; set; }
    }

    public class StBasketStockMovementBySupplier901ReportReturnModel
    {
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public DateTime? ToDate { get; set; }
        public int? SBH13 { get; set; }
        public int? SBH25 { get; set; }
        public int? LBH13 { get; set; }
        public int? LBH25 { get; set; }
        public int? LBH40 { get; set; }
        public int? OBH25 { get; set; }
        public string Sourcing { get; set; }
    }

    public class StBigCLabelSaleProductReturnModel
    {
        public string SupplierNumber { get; set; }
        public string SupplierName { get; set; }
        public string PurchasingOrderNumber { get; set; }
        public string ProductName { get; set; }
        public string ProductNumber { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public int? DispatchedActualCarton { get; set; }
        public decimal? DispatchedGrossWeight { get; set; }
        public decimal? DispatchedGrossWeightScale { get; set; }
        public string PurchasingOrderDate { get; set; }
        public string BasketNumber { get; set; }
        public string CartonIndex { get; set; }
        public string PO_NO { get; set; }
        public string SO_NO { get; set; }
        public string SOPID_Barcode { get; set; }
    }

    public class StBillBigCReturnModel
    {
        public string SupplierGroupNameFull { get; set; }
        public DateTime? PurchasingOrderDate { get; set; }
        public string SupplierNumber { get; set; }
        public string SupplierNameShort { get; set; }
        public string StoreNumber { get; set; }
        public string StoreNameShort { get; set; }
        public string SO_NO { get; set; }
        public string ProductNumber { get; set; }
        public string ProductName { get; set; }
        public int? BookingCarton { get; set; }
        public decimal? BookingQty { get; set; }
        public int? Carton { get; set; }
        public decimal? Qty { get; set; }
        public decimal? QtyConfirm { get; set; }
        public string Unit { get; set; }
        public decimal? WeightBill { get; set; }
        public double? PODetailDamage { get; set; }
        public double? PODamage { get; set; }
        public string PurchasingOrderProductRemark { get; set; }
        public DateTime? UpdateTime { get; set; }
        public int? ActualCarton { get; set; }
        public string Remark { get; set; }
        public string TripTruckNumber { get; set; }
        public string TripNumber { get; set; }
        public DateTime? TripDate { get; set; }
        public string SupplierGroup { get; set; }
        public bool? TripConfirmed { get; set; }
        public string TripRemark { get; set; }
        public string TripSealNumber { get; set; }
        public DateTime? EndWorkingTime { get; set; }
        public string Domain { get; set; }
        public string Cate { get; set; }
    }

    public class StbmAndBmChildReturnModel
    {
        public class ResultSetModel1
        {
            public string BasketMovementNumber { get; set; }
            public DateTime FromgoDate { get; set; }
            public string Fromgo { get; set; }
            public string Togo { get; set; }
            public string BMReturn { get; set; }
            public DateTime? FromReturnDate { get; set; }
            public string FromReturn { get; set; }
            public string ToReturn { get; set; }
            public DateTime? StartTime { get; set; }
            public string TruckNumber { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementRemark { get; set; }
            public string CreatedBy { get; set; }
            public int? BasketID { get; set; }
            public int? Qty { get; set; }
            public int? QtyConfirm { get; set; }
            public int? QtyReturn { get; set; }
            public int? QtyReturnConfirm { get; set; }
            public string BasketNumber { get; set; }
            public string BasketName { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public string BasketMovementNumber { get; set; }
            public DateTime FromgoDate { get; set; }
            public string Fromgo { get; set; }
            public string Togo { get; set; }
            public string BMReturn { get; set; }
            public DateTime? FromReturnDate { get; set; }
            public string FromReturn { get; set; }
            public string ToReturn { get; set; }
            public DateTime? StartTime { get; set; }
            public string TruckNumber { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementRemark { get; set; }
            public string CreatedBy { get; set; }
            public int? BasketID { get; set; }
            public int? Qty { get; set; }
            public int? QtyConfirm { get; set; }
            public int? QtyReturn { get; set; }
            public int? QtyReturnConfirm { get; set; }
            public string BasketNumber { get; set; }
            public string BasketName { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
    }

    public class StbmInOutBySiteByDateReturnModel
    {
        public string Site1 { get; set; }
        public string Movem { get; set; }
        public string BasketMovementNumber { get; set; }
        public int? Quantity { get; set; }
        public int? QuantityConfirm { get; set; }
        public string CreatedBy { get; set; }
        public DateTime? BasketMovementDate { get; set; }
        public string Site2 { get; set; }
        public string StoreName { get; set; }
        public string Note { get; set; }
        public string Domain { get; set; }
    }

    public class StComboProductIdReturnModel
    {
        public int ProductID { get; set; }
        public string ProductName { get; set; }
        public string ProductNumber { get; set; }
    }

    public class StComboSalesOrderCombineReturnModel
    {
        public int SalesOrderID { get; set; }
        public string SalesOrderNumber { get; set; }
        public DateTime? SalesOrderDate { get; set; }
        public string Store { get; set; }
        public string SupplierCategoryNameEnglish { get; set; }
        public string SalesOrderRemark { get; set; }
    }

    public class StComboSalesOrderStoresReturnModel
    {
        public class ResultSetModel1
        {
            public int? SalesOrderID { get; set; }
            public string StoreNumber { get; set; }
            public string SalesOrderNumber { get; set; }
            public string SalesOrderRemark { get; set; }
            public string StoreNameShort { get; set; }
            public int? StoreID { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public int SalesOrderID { get; set; }
            public string StoreNumber { get; set; }
            public string SalesOrderRemark { get; set; }
            public string StoreNameShort { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
    }

    public class StComboStoreNumberReturnModel
    {
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
    }

    public class StComboSupplierIdReturnModel
    {
        public class ResultSetModel1
        {
            public int SupplierID { get; set; }
            public string SupplierNumber { get; set; }
            public string SupplierNameShort { get; set; }
            public byte? OperationCategoryID { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public int SupplierID { get; set; }
            public string SupplierNumber { get; set; }
            public string SupplierNameShort { get; set; }
            public byte? OperationCategoryID { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
        public class ResultSetModel3
        {
            public int SupplierID { get; set; }
            public string SupplierNumber { get; set; }
            public string SupplierNameShort { get; set; }
            public byte? OperationCategoryID { get; set; }
        }
        public List<ResultSetModel3> ResultSet3;
    }

    public class StCreateBmFromSoReturnModel
    {
        public long? BasketMovementID { get; set; }
    }

    public class StCrossDockMasanReturnModel
    {
        public string Column1 { get; set; }
    }

    public class StCurrentBasketByStoreAllReturnModel
    {
        public string Numbers { get; set; }
        public string Names { get; set; }
        public DateTime? FromDate { get; set; }
        public DateTime? ToDate { get; set; }
        public int? BeginSBH13 { get; set; }
        public int? OutSBH13 { get; set; }
        public int? InSBH13 { get; set; }
        public int? CurrentSBH13 { get; set; }
        public int? BeginSBH25 { get; set; }
        public int? OutSBH25 { get; set; }
        public int? InSBH25 { get; set; }
        public int? CurrentSBH25 { get; set; }
        public int? BeginLBH13 { get; set; }
        public int? OutLBH13 { get; set; }
        public int? InLBH13 { get; set; }
        public int? CurrentLBH13 { get; set; }
        public int? BeginLBH25 { get; set; }
        public int? OutLBH25 { get; set; }
        public int? InLBH25 { get; set; }
        public int? CurrentLBH25 { get; set; }
        public int? BeginLBH40 { get; set; }
        public int? OutLBH40 { get; set; }
        public int? InLBH40 { get; set; }
        public int? CurrentLBH40 { get; set; }
        public int? BeginOBH25 { get; set; }
        public int? OutOBH25 { get; set; }
        public int? InOBH25 { get; set; }
        public int? CurrentOBH25 { get; set; }
        public int? BeginTrolley { get; set; }
        public int? OutTrolley { get; set; }
        public int? InTrolley { get; set; }
        public int? CurrentTrolley { get; set; }
    }

    public class StCurrentBasketByStoreReturnModel
    {
        public class ResultSetModel1
        {
            public DateTime? BasketReceivedDate { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BM { get; set; }
            public string CreatedBy { get; set; }
            public string FromWhere { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public string RemarkBM { get; set; }
            public string BasketNumber { get; set; }
            public string BasketName { get; set; }
            public int? TotalIn { get; set; }
            public int? TotalInConfirm { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketNumber { get; set; }
            public string BasketName { get; set; }
            public int? TotalOut { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
        public class ResultSetModel3
        {
            public string StoreFull { get; set; }
            public DateTime? Date { get; set; }
            public int? Begin { get; set; }
            public string BasketNumber { get; set; }
            public int? In { get; set; }
            public int? Out { get; set; }
        }
        public List<ResultSetModel3> ResultSet3;
    }

    public class StdowmsAddScmProductReturnModel
    {
        public class ResultSetModel1
        {
            public string OrderNumber { get; set; }
            public string ProductNumber { get; set; }
            public int? TotalUnits { get; set; }
            public string CreatedTime { get; set; }
            public decimal? TotalWeight { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public Guid DispatchingOrderID { get; set; }
            public string OrderNumber { get; set; }
            public DateTime DispatchingOrderDate { get; set; }
            public int? Expr1 { get; set; }
            public decimal? TotalWeight { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
    }

    public class StediNewProductReturnModel
    {
        public class ResultSetModel1
        {
            public string PRODUCT_NUMBER { get; set; }
            public string PRODUCT_NAME { get; set; }
            public int? CustomerID { get; set; }
            public int? ProductID { get; set; }
            public string DEPT { get; set; }
            public string GOLDCODE { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public string PRODUCT_NUMBER { get; set; }
            public string PRODUCT_NAME { get; set; }
            public int? CustomerID { get; set; }
            public string DEPT { get; set; }
            public string GOLDCODE { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
    }

    public class StediNewSupplierReturnModel
    {
        public class ResultSetModel1
        {
            public byte? SupplierGroupID { get; set; }
            public string SupplierGroupNumber { get; set; }
            public string DEPT { get; set; }
            public string SUPPLIER_NAME { get; set; }
            public string SUPPLIER_NUMBER { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public string SupplierGroupNumber { get; set; }
            public string DEPT { get; set; }
            public string SUPPLIER_NAME { get; set; }
            public string SUPPLIER_NUMBER { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
    }

    public class StLabelA5PopReturnModel
    {
        public string SalesOrderProductID_Barcode { get; set; }
        public int SupplierID { get; set; }
        public string SupplierNameFull { get; set; }
        public int SalesOrderProductID { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public string StoreNameFull { get; set; }
        public int? ActualCarton { get; set; }
        public decimal? ActualWeight { get; set; }
        public decimal? ActualVolume { get; set; }
        public string SupplierNumber { get; set; }
        public string SupplierNameShort { get; set; }
        public string SupplierCategoryNameShort { get; set; }
        public string Temperature { get; set; }
        public DateTime PurchasingOrderDate { get; set; }
        public string Label_Barcode { get; set; }
        public string PurchasingOrderNumber { get; set; }
        public int? StoreOrdinalNumber { get; set; }
        public string ProductNumber { get; set; }
        public string ProductName { get; set; }
        public string SO_NO { get; set; }
        public string SalesOrderProductRemark { get; set; }
        public int? DispatchedActualBasket1 { get; set; }
        public int? DispatchedActualBasket2 { get; set; }
        public int? DispatchedActualPallet { get; set; }
        public decimal? DispatchedGrossWeight { get; set; }
        public decimal? PackagingWeight { get; set; }
        public int? TotalBasket { get; set; }
        public string StoreNameShort { get; set; }
        public int? NL { get; set; }
        public string SO_NODetail { get; set; }
    }

    public class StLabelA5ReturnModel
    {
        public string SalesOrderProductID_Barcode { get; set; }
        public int SupplierID { get; set; }
        public string SupplierNameFull { get; set; }
        public int SalesOrderProductID { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public string StoreNameFull { get; set; }
        public int? ActualCarton { get; set; }
        public decimal? ActualWeight { get; set; }
        public decimal? ActualVolume { get; set; }
        public string SupplierNumber { get; set; }
        public string SupplierNameShort { get; set; }
        public string SupplierCategoryNameShort { get; set; }
        public string Temperature { get; set; }
        public DateTime PurchasingOrderDate { get; set; }
        public string Label_Barcode { get; set; }
        public string PurchasingOrderNumber { get; set; }
        public int? StoreOrdinalNumber { get; set; }
        public string ProductNumber { get; set; }
        public string ProductName { get; set; }
        public string SO_NO { get; set; }
        public string SalesOrderProductRemark { get; set; }
        public int? DispatchedActualBasket1 { get; set; }
        public int? DispatchedActualBasket2 { get; set; }
        public int? DispatchedActualPallet { get; set; }
        public decimal? DispatchedGrossWeight { get; set; }
        public decimal? PackagingWeight { get; set; }
        public int? TotalBasket { get; set; }
        public string StoreNameShort { get; set; }
        public int? NL { get; set; }
        public string SO_NODetail { get; set; }
    }

    public class StLabelBarcodeAllReturnModel
    {
        public string SalesOrderProductID_Barcode { get; set; }
        public int SupplierID { get; set; }
        public string SupplierNameFull { get; set; }
        public int SalesOrderProductID { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public string StoreNameFull { get; set; }
        public int? ActualCarton { get; set; }
        public decimal? ActualWeight { get; set; }
        public decimal? ActualVolume { get; set; }
        public string SupplierNumber { get; set; }
        public string SupplierNameShort { get; set; }
        public string SupplierCategoryNameShort { get; set; }
        public string Temperature { get; set; }
        public DateTime PurchasingOrderDate { get; set; }
        public string Label_Barcode { get; set; }
        public string PurchasingOrderNumber { get; set; }
        public int? StoreOrdinalNumber { get; set; }
        public string ProductNumber { get; set; }
        public string ProductName { get; set; }
        public string SO_NO { get; set; }
        public string SalesOrderProductRemark { get; set; }
        public int? DispatchedActualBasket1 { get; set; }
        public int? DispatchedActualBasket2 { get; set; }
        public int? DispatchedActualPallet { get; set; }
        public decimal? DispatchedGrossWeight { get; set; }
        public decimal? PackagingWeight { get; set; }
        public int? TotalBasket { get; set; }
        public string StoreNameShort { get; set; }
        public int? NL { get; set; }
        public string CartonIndex { get; set; }
        public string BasketIndex { get; set; }
        public short ID { get; set; }
        public int PurchasingOrderProductID { get; set; }
    }

    public class StLabelBarcodeAllSalesOrderIdReturnModel
    {
        public string SalesOrderProductID_Barcode { get; set; }
        public int SupplierID { get; set; }
        public string SupplierNameFull { get; set; }
        public int SalesOrderProductID { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public string StoreNameFull { get; set; }
        public int? ActualCarton { get; set; }
        public decimal? ActualWeight { get; set; }
        public decimal? ActualVolume { get; set; }
        public string SupplierNumber { get; set; }
        public string SupplierNameShort { get; set; }
        public string SupplierCategoryNameShort { get; set; }
        public string Temperature { get; set; }
        public DateTime PurchasingOrderDate { get; set; }
        public string Label_Barcode { get; set; }
        public string PurchasingOrderNumber { get; set; }
        public int? StoreOrdinalNumber { get; set; }
        public string ProductNumber { get; set; }
        public string ProductName { get; set; }
        public string SO_NO { get; set; }
        public string SalesOrderProductRemark { get; set; }
        public int? DispatchedActualBasket1 { get; set; }
        public int? DispatchedActualBasket2 { get; set; }
        public int? DispatchedActualPallet { get; set; }
        public decimal? DispatchedGrossWeight { get; set; }
        public decimal? PackagingWeight { get; set; }
        public int? TotalBasket { get; set; }
        public string StoreNameShort { get; set; }
        public int? NL { get; set; }
        public string CartonIndex { get; set; }
        public string BasketIndex { get; set; }
        public short ID { get; set; }
        public int PurchasingOrderProductID { get; set; }
    }

    public class StLabelBarcodeReturnModel
    {
        public class ResultSetModel1
        {
            public string SalesOrderProductID_Barcode { get; set; }
            public int SupplierID { get; set; }
            public string SupplierNameFull { get; set; }
            public int SalesOrderProductID { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public string StoreNameFull { get; set; }
            public int? ActualCarton { get; set; }
            public decimal? ActualWeight { get; set; }
            public decimal? ActualVolume { get; set; }
            public string SupplierNumber { get; set; }
            public string SupplierNameShort { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public string Temperature { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
            public string Label_Barcode { get; set; }
            public string PurchasingOrderNumber { get; set; }
            public int? StoreOrdinalNumber { get; set; }
            public string ProductNumber { get; set; }
            public string ProductName { get; set; }
            public string SO_NO { get; set; }
            public string SalesOrderProductRemark { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualPallet { get; set; }
            public decimal? DispatchedGrossWeight { get; set; }
            public decimal? PackagingWeight { get; set; }
            public int? TotalBasket { get; set; }
            public string StoreNameShort { get; set; }
            public int? NL { get; set; }
            public string CartonIndex { get; set; }
            public string BasketIndex { get; set; }
            public short ID { get; set; }
            public string PO_NO { get; set; }
            public int tripid { get; set; }
            public string TripRemark { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public string SalesOrderProductID_Barcode { get; set; }
            public int SupplierID { get; set; }
            public string SupplierNameFull { get; set; }
            public int SalesOrderProductID { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public string StoreNameFull { get; set; }
            public int? ActualCarton { get; set; }
            public decimal? ActualWeight { get; set; }
            public decimal? ActualVolume { get; set; }
            public string SupplierNumber { get; set; }
            public string SupplierNameShort { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public string Temperature { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
            public string Label_Barcode { get; set; }
            public string PurchasingOrderNumber { get; set; }
            public int? StoreOrdinalNumber { get; set; }
            public string ProductNumber { get; set; }
            public string ProductName { get; set; }
            public string SO_NO { get; set; }
            public string SalesOrderProductRemark { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualPallet { get; set; }
            public decimal? DispatchedGrossWeight { get; set; }
            public decimal? PackagingWeight { get; set; }
            public int? TotalBasket { get; set; }
            public string StoreNameShort { get; set; }
            public int? NL { get; set; }
            public string CartonIndex { get; set; }
            public string BasketIndex { get; set; }
            public short ID { get; set; }
            public string PO_NO { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
    }

    public class StLoadSupplierCombineNotScaleReturnModel
    {
        public class ResultSetModel1
        {
            public string StoreName { get; set; }
            public int SalesOrderProductID { get; set; }
            public int ProductID { get; set; }
            public string ProductName { get; set; }
            public string ProductNumber { get; set; }
            public double? ProductTemperature { get; set; }
            public int? TemperatureDeviation { get; set; }
            public decimal UnitWeight { get; set; }
            public int? ReceivedActualCarton { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? ReceivedActualWeight { get; set; }
            public int PurchasingOrderID { get; set; }
            public int SalesOrderID { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualBasket3 { get; set; }
            public int? DispatchedActualBasket4 { get; set; }
            public int? DispatchedActualBasket5 { get; set; }
            public int PurchasingOrderProductID { get; set; }
            public int? StoreBookingCarton { get; set; }
            public decimal? StoreBookingWeight { get; set; }
            public int? BasketID { get; set; }
            public int? BasketQuantity { get; set; }
            public double? PODetailDamage { get; set; }
            public decimal? DispatchedGrossWeight { get; set; }
            public decimal? DispatchedGrossWeightScale { get; set; }
            public string Unit { get; set; }
            public string SalesOrderProductRemark { get; set; }
            public double? NaturalLossRateSO { get; set; }
            public string PO_NO { get; set; }
            public string SO_NO { get; set; }
            public string PO_NOLine { get; set; }
            public string Status { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public string StoreName { get; set; }
            public int SalesOrderProductID { get; set; }
            public int ProductID { get; set; }
            public string ProductName { get; set; }
            public string ProductNumber { get; set; }
            public double? ProductTemperature { get; set; }
            public int? TemperatureDeviation { get; set; }
            public decimal UnitWeight { get; set; }
            public int? ReceivedActualCarton { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? ReceivedActualWeight { get; set; }
            public int PurchasingOrderID { get; set; }
            public int SalesOrderID { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualBasket3 { get; set; }
            public int? DispatchedActualBasket4 { get; set; }
            public int? DispatchedActualBasket5 { get; set; }
            public int PurchasingOrderProductID { get; set; }
            public int? StoreBookingCarton { get; set; }
            public decimal? StoreBookingWeight { get; set; }
            public int? BasketID { get; set; }
            public int? BasketQuantity { get; set; }
            public double? PODetailDamage { get; set; }
            public decimal? DispatchedGrossWeight { get; set; }
            public decimal? DispatchedGrossWeightScale { get; set; }
            public string Unit { get; set; }
            public string SalesOrderProductRemark { get; set; }
            public double? NaturalLossRateSO { get; set; }
            public string PO_NO { get; set; }
            public string SO_NO { get; set; }
            public string PO_NOLine { get; set; }
            public string Status { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
    }

    public class StLoadSupplierCombineReturnModel
    {
        public class ResultSetModel1
        {
            public string StoreName { get; set; }
            public int SalesOrderProductID { get; set; }
            public int ProductID { get; set; }
            public string ProductName { get; set; }
            public string ProductNumber { get; set; }
            public double? ProductTemperature { get; set; }
            public int? TemperatureDeviation { get; set; }
            public decimal UnitWeight { get; set; }
            public int? ReceivedActualCarton { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? ReceivedActualWeight { get; set; }
            public int PurchasingOrderID { get; set; }
            public int SalesOrderID { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualBasket3 { get; set; }
            public int? DispatchedActualBasket4 { get; set; }
            public int? DispatchedActualBasket5 { get; set; }
            public int PurchasingOrderProductID { get; set; }
            public int? StoreBookingCarton { get; set; }
            public decimal? StoreBookingWeight { get; set; }
            public int? BasketID { get; set; }
            public int? BasketQuantity { get; set; }
            public double? PODetailDamage { get; set; }
            public decimal? DispatchedGrossWeight { get; set; }
            public decimal? DispatchedGrossWeightScale { get; set; }
            public string Unit { get; set; }
            public string SalesOrderProductRemark { get; set; }
            public double? NaturalLossRateSO { get; set; }
            public string PO_NO { get; set; }
            public string SO_NO { get; set; }
            public string PO_NOLine { get; set; }
            public string Status { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public string StoreName { get; set; }
            public int SalesOrderProductID { get; set; }
            public int ProductID { get; set; }
            public string ProductName { get; set; }
            public string ProductNumber { get; set; }
            public double? ProductTemperature { get; set; }
            public int? TemperatureDeviation { get; set; }
            public decimal UnitWeight { get; set; }
            public int? ReceivedActualCarton { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? ReceivedActualWeight { get; set; }
            public int PurchasingOrderID { get; set; }
            public int SalesOrderID { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualBasket3 { get; set; }
            public int? DispatchedActualBasket4 { get; set; }
            public int? DispatchedActualBasket5 { get; set; }
            public int PurchasingOrderProductID { get; set; }
            public int? StoreBookingCarton { get; set; }
            public decimal? StoreBookingWeight { get; set; }
            public int? BasketID { get; set; }
            public int? BasketQuantity { get; set; }
            public double? PODetailDamage { get; set; }
            public decimal? DispatchedGrossWeight { get; set; }
            public decimal? DispatchedGrossWeightScale { get; set; }
            public string Unit { get; set; }
            public string SalesOrderProductRemark { get; set; }
            public double? NaturalLossRateSO { get; set; }
            public string PO_NO { get; set; }
            public string SO_NO { get; set; }
            public string PO_NOLine { get; set; }
            public string Status { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
    }

    public class StNewProductSupplierReturnModel
    {
        public string ProductNumber { get; set; }
        public string ProductName { get; set; }
        public string UNIT { get; set; }
        public string SupplierNumber { get; set; }
        public string NEW_PRODUCT { get; set; }
    }

    public class StNewSupplierReturnModel
    {
        public string SupplierNumber { get; set; }
        public string SupplierName { get; set; }
    }

    public class StOperationDailyByCustomerReturnModel
    {
        public int? CustomerID { get; set; }
        public DateTime PurchasingOrderDate { get; set; }
        public int PurchasingOrderID { get; set; }
        public string PurchasingOrderNumber { get; set; }
    }

    public class StPlanSupplierAllReturnModel
    {
        public string SupplierNumber { get; set; }
        public string SupplierName { get; set; }
        public int PurchasingOrderID { get; set; }
        public int StoreID { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public string ProductName { get; set; }
        public string ProductNumber { get; set; }
        public int? StoreBookingCarton { get; set; }
        public decimal? StoreBookingWeight { get; set; }
        public string Domain { get; set; }
        public string Unit { get; set; }
        public DateTime PurchasingOrderDate { get; set; }
    }

    public class StPlanSupplierReturnModel
    {
        public class ResultSetModel1
        {
            public string SupplierGroupID { get; set; }
            public string SupplierNumber { get; set; }
            public string SupplierName { get; set; }
            public int PurchasingOrderID { get; set; }
            public int StoreID { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public string ProductName { get; set; }
            public string ProductNumber { get; set; }
            public int? StoreBookingCarton { get; set; }
            public decimal? StoreBookingWeight { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public string Domain { get; set; }
            public string Unit { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public byte SupplierGroupID { get; set; }
            public string SupplierNumber { get; set; }
            public string SupplierName { get; set; }
            public int PurchasingOrderID { get; set; }
            public int StoreID { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public string ProductName { get; set; }
            public string ProductNumber { get; set; }
            public int? StoreBookingCarton { get; set; }
            public decimal? StoreBookingWeight { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public string Domain { get; set; }
            public string Unit { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
    }

    public class StPurchasingNoteQaDraftReturnModel
    {
        public string Title { get; set; }
        public string PurchasingOrderProductRemark { get; set; }
        public DateTime? UpdateTime { get; set; }
        public int PurchasingOrderID { get; set; }
        public string SupplierNumber { get; set; }
        public string SupplierName { get; set; }
        public DateTime PurchasingOrderDate { get; set; }
        public string TruckNumber { get; set; }
        public Single? ProductTemperature { get; set; }
        public Single? TruckTemperature { get; set; }
        public string TemperatureRequirement { get; set; }
        public string PurchasingOrderNumber { get; set; }
        public string PurchasingOrderRemark { get; set; }
        public string ProductName { get; set; }
        public decimal UnitWeight { get; set; }
        public string ProductNumber { get; set; }
        public int? ReceivedActualCarton { get; set; }
        public int? ReceivedBookingCarton { get; set; }
        public decimal? ReceivedBookingWeight { get; set; }
        public double? PODamage { get; set; }
        public decimal? ActualDamage { get; set; }
        public double? PODetailDamage { get; set; }
        public string Unit { get; set; }
        public double? QtyQA { get; set; }
        public double? QtyQADamageVH { get; set; }
        public double? QtyQADamageH { get; set; }
        public double? QtyQADamageL { get; set; }
        public string QABy { get; set; }
        public string CreatedBy { get; set; }
        public string PO_NO { get; set; }
        public string SupplierGroupNumber { get; set; }
        public decimal? StoreBookingWeight { get; set; }
        public decimal? DispatchedActualWeight { get; set; }
        public double? ReceivingAct { get; set; }
    }

    public class StPurchasingNoteQaReturnModel
    {
        public string Title { get; set; }
        public string PurchasingOrderProductRemark { get; set; }
        public DateTime? UpdateTime { get; set; }
        public int PurchasingOrderID { get; set; }
        public string SupplierNumber { get; set; }
        public string SupplierName { get; set; }
        public DateTime PurchasingOrderDate { get; set; }
        public string TruckNumber { get; set; }
        public Single? ProductTemperature { get; set; }
        public Single? TruckTemperature { get; set; }
        public string TemperatureRequirement { get; set; }
        public string PurchasingOrderNumber { get; set; }
        public string PurchasingOrderRemark { get; set; }
        public string ProductName { get; set; }
        public decimal UnitWeight { get; set; }
        public string ProductNumber { get; set; }
        public int? ReceivedActualCarton { get; set; }
        public int? ReceivedBookingCarton { get; set; }
        public decimal? ReceivedBookingWeight { get; set; }
        public double? PODamage { get; set; }
        public decimal? ActualDamageTest { get; set; }
        public decimal? ActualDamage { get; set; }
        public double? PODetailDamage { get; set; }
        public string Unit { get; set; }
        public double? QtyQA { get; set; }
        public double? QtyQADamageVH { get; set; }
        public double? QtyQADamageH { get; set; }
        public double? QtyQADamageL { get; set; }
        public string QABy { get; set; }
        public string CreatedBy { get; set; }
        public string PO_NO { get; set; }
        public string SupplierGroupNumber { get; set; }
        public decimal? StoreBookingWeight { get; set; }
        public decimal? DispatchedActualWeight { get; set; }
        public byte? Status { get; set; }
        public decimal? ReceivingAct { get; set; }
    }

    public class StPurchasingNoteReturnModel
    {
        public class ResultSetModel1
        {
            public int PurchasingOrderID { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public string PO_NO { get; set; }
            public int? BookingCarton { get; set; }
            public decimal? BookingWeight { get; set; }
            public decimal? BookingVolume { get; set; }
            public int? ActualCarton { get; set; }
            public decimal? NetWeightStore { get; set; }
            public decimal? ActualWeight { get; set; }
            public decimal? NetWeight { get; set; }
            public decimal? ActualVolume { get; set; }
            public string SupplierNumber { get; set; }
            public string SupplierName { get; set; }
            public string SupplierCategoryName { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
            public string TruckNumber { get; set; }
            public string TruckType { get; set; }
            public DateTime? StartWorkingTime { get; set; }
            public DateTime? EndWorkingTime { get; set; }
            public Single? ProductTemperature { get; set; }
            public Single? TruckTemperature { get; set; }
            public string TemperatureRequirement { get; set; }
            public string PurchasingOrderNumber { get; set; }
            public int? StoreOrdinalNumber { get; set; }
            public byte? ReceivingOrdinalNumber { get; set; }
            public string SalesOrderProductRemark { get; set; }
            public string PurchasingOrderRemark { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualPallet { get; set; }
            public string CustomerNumber { get; set; }
            public string CustomerName { get; set; }
            public string ProductName { get; set; }
            public decimal UnitWeight { get; set; }
            public string ProductNumber { get; set; }
            public string StoreNameShort { get; set; }
            public decimal? Gross { get; set; }
            public string SO_NO { get; set; }
            public decimal? PackagingWeight { get; set; }
            public Single? Lining { get; set; }
            public decimal? DamageWeightPercent { get; set; }
            public decimal? TotalPackagingWeight { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public int PurchasingOrderID { get; set; }
            public string PO_NO { get; set; }
            public int? BookingCarton { get; set; }
            public decimal? BookingWeight { get; set; }
            public decimal? BookingVolume { get; set; }
            public int? ActualCarton { get; set; }
            public decimal? ActualWeight { get; set; }
            public decimal? ActualVolume { get; set; }
            public string SupplierNumber { get; set; }
            public string SupplierName { get; set; }
            public string SupplierCategoryName { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
            public string TruckNumber { get; set; }
            public string TruckType { get; set; }
            public DateTime? StartWorkingTime { get; set; }
            public DateTime? EndWorkingTime { get; set; }
            public Single? ProductTemperature { get; set; }
            public Single? TruckTemperature { get; set; }
            public string TemperatureRequirement { get; set; }
            public string PurchasingOrderNumber { get; set; }
            public byte? ReceivingOrdinalNumber { get; set; }
            public string PurchasingOrderRemark { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualBasket3 { get; set; }
            public int? DispatchedActualBasket4 { get; set; }
            public int? DispatchedActualBasket5 { get; set; }
            public int? DispatchedActualPallet { get; set; }
            public string CustomerNumber { get; set; }
            public string CustomerName { get; set; }
            public string ProductName { get; set; }
            public decimal UnitWeight { get; set; }
            public string ProductNumber { get; set; }
            public decimal? Gross { get; set; }
            public string SO_NO { get; set; }
            public decimal? PackagingWeight { get; set; }
            public double? Lining { get; set; }
            public decimal? DamageWeightPercent { get; set; }
            public decimal? TotalPackagingWeight { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
        public class ResultSetModel3
        {
            public int PurchasingOrderID { get; set; }
            public int? BookingCarton { get; set; }
            public decimal? BookingWeight { get; set; }
            public int? ActualCarton { get; set; }
            public decimal? ActualWeight { get; set; }
            public string SupplierNumber { get; set; }
            public string SupplierName { get; set; }
            public string SupplierCategoryName { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
            public string TruckNumber { get; set; }
            public string TruckType { get; set; }
            public DateTime? StartWorkingTime { get; set; }
            public DateTime? EndWorkingTime { get; set; }
            public Single? ProductTemperature { get; set; }
            public Single? TruckTemperature { get; set; }
            public string TemperatureRequirement { get; set; }
            public string PurchasingOrderNumber { get; set; }
            public byte? ReceivingOrdinalNumber { get; set; }
            public string PurchasingOrderRemark { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualBasket3 { get; set; }
            public int? DispatchedActualBasket4 { get; set; }
            public int? DispatchedActualBasket5 { get; set; }
            public int? DispatchedActualBasket6 { get; set; }
            public int? Trolley { get; set; }
            public string CustomerNumber { get; set; }
            public string CustomerName { get; set; }
            public string ProductName { get; set; }
            public decimal UnitWeight { get; set; }
            public string ProductNumber { get; set; }
            public decimal? Gross { get; set; }
            public decimal? PackagingWeight { get; set; }
            public string Unit { get; set; }
            public string BasketMovementNumber { get; set; }
            public double? PODamage { get; set; }
            public double? PODetailDamage { get; set; }
            public string PO_NO { get; set; }
            public string BasketNumber { get; set; }
            public string BasketName { get; set; }
        }
        public List<ResultSetModel3> ResultSet3;
        public class ResultSetModel4
        {
            public int PurchasingOrderID { get; set; }
            public int? BookingCarton { get; set; }
            public decimal? BookingWeight { get; set; }
            public int? ActualCarton { get; set; }
            public decimal? ActualWeight { get; set; }
            public string SupplierNumber { get; set; }
            public string SupplierName { get; set; }
            public string SupplierCategoryName { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
            public string TruckNumber { get; set; }
            public string TruckType { get; set; }
            public DateTime? StartWorkingTime { get; set; }
            public DateTime? EndWorkingTime { get; set; }
            public Single? ProductTemperature { get; set; }
            public Single? TruckTemperature { get; set; }
            public string TemperatureRequirement { get; set; }
            public string PurchasingOrderNumber { get; set; }
            public byte? ReceivingOrdinalNumber { get; set; }
            public string PurchasingOrderRemark { get; set; }
            public string CustomerNumber { get; set; }
            public string CustomerName { get; set; }
            public string ProductName { get; set; }
            public decimal UnitWeight { get; set; }
            public string ProductNumber { get; set; }
            public decimal? Gross { get; set; }
            public double? PackagingWeight { get; set; }
            public string Unit { get; set; }
            public double? PODamage { get; set; }
            public double? PODetailDamage { get; set; }
            public string PO_NO { get; set; }
            public string StoreNumber { get; set; }
            public string StoreNameShort { get; set; }
        }
        public List<ResultSetModel4> ResultSet4;
    }

    public class StPurchasingOrderBySupplierGroupReturnModel
    {
        public class ResultSetModel1
        {
            public int SupplierID { get; set; }
            public string SupplierName { get; set; }
            public string SupplierNameShort { get; set; }
            public int PurchasingOrderID { get; set; }
            public string PurchasingOrderNumber { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
            public string PurchasingOrderRemark { get; set; }
            public byte? Status { get; set; }
            public int? CustomerID { get; set; }
            public string SupplierNumber { get; set; }
            public int? TotalBookingCarton { get; set; }
            public decimal? TotalBookingWeight { get; set; }
            public decimal? TotalBookingVolume { get; set; }
            public string PO_NO { get; set; }
            public byte? SupplierGroupID { get; set; }
            public bool? VeterinaryInspectionRequired { get; set; }
            public bool? VeterinaryInspectionCheck { get; set; }
            public string CreatedBy { get; set; }
            public DateTime CreatedTime { get; set; }
            public DateTime? StartWorkingTime { get; set; }
            public DateTime? EndWorkingTime { get; set; }
            public Guid? TruckInOutID { get; set; }
            public DateTime? FromTime { get; set; }
            public DateTime? ToTime { get; set; }
            public string ConfirmedBy { get; set; }
            public string TruckNumber { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? DispatchedActualVolume { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualPallet { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public string SupplierGroupName { get; set; }
            public byte? OperationCategoryID { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public int SupplierID { get; set; }
            public string SupplierName { get; set; }
            public string SupplierNameShort { get; set; }
            public int PurchasingOrderID { get; set; }
            public string PurchasingOrderNumber { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
            public string PurchasingOrderRemark { get; set; }
            public byte? Status { get; set; }
            public int? CustomerID { get; set; }
            public string SupplierNumber { get; set; }
            public int? TotalBookingCarton { get; set; }
            public decimal? TotalBookingWeight { get; set; }
            public decimal? TotalBookingVolume { get; set; }
            public string PO_NO { get; set; }
            public byte? SupplierGroupID { get; set; }
            public bool? VeterinaryInspectionRequired { get; set; }
            public bool? VeterinaryInspectionCheck { get; set; }
            public string CreatedBy { get; set; }
            public DateTime CreatedTime { get; set; }
            public DateTime? StartWorkingTime { get; set; }
            public DateTime? EndWorkingTime { get; set; }
            public Guid? TruckInOutID { get; set; }
            public DateTime? FromTime { get; set; }
            public DateTime? ToTime { get; set; }
            public string ConfirmedBy { get; set; }
            public string TruckNumber { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? DispatchedActualVolume { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualPallet { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public string SupplierGroupName { get; set; }
            public byte? OperationCategoryID { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
    }

    public class StPurchasingOrderDailyReturnModel
    {
        public class ResultSetModel1
        {
            public int SupplierID { get; set; }
            public string SupplierName { get; set; }
            public string SupplierNameShort { get; set; }
            public int PurchasingOrderID { get; set; }
            public string PurchasingOrderNumber { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
            public string PurchasingOrderRemark { get; set; }
            public byte? Status { get; set; }
            public int? CustomerID { get; set; }
            public string SupplierNumber { get; set; }
            public int? TotalBookingCarton { get; set; }
            public decimal? TotalBookingWeight { get; set; }
            public decimal? TotalBookingVolume { get; set; }
            public string PO_NO { get; set; }
            public byte? SupplierGroupID { get; set; }
            public bool? VeterinaryInspectionRequired { get; set; }
            public bool? VeterinaryInspectionCheck { get; set; }
            public string CreatedBy { get; set; }
            public DateTime CreatedTime { get; set; }
            public DateTime? StartWorkingTime { get; set; }
            public DateTime? EndWorkingTime { get; set; }
            public Guid? TruckInOutID { get; set; }
            public DateTime? FromTime { get; set; }
            public DateTime? ToTime { get; set; }
            public string ConfirmedBy { get; set; }
            public string TruckNumber { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? DispatchedActualVolume { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualPallet { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public string SupplierGroupName { get; set; }
            public Single? TruckTemperature { get; set; }
            public double? PODamage { get; set; }
            public string BasketMovementNumber { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public int SupplierID { get; set; }
            public string SupplierName { get; set; }
            public string SupplierNameShort { get; set; }
            public int PurchasingOrderID { get; set; }
            public string PurchasingOrderNumber { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
            public string PurchasingOrderRemark { get; set; }
            public byte? Status { get; set; }
            public int? CustomerID { get; set; }
            public string SupplierNumber { get; set; }
            public int? TotalBookingCarton { get; set; }
            public decimal? TotalBookingWeight { get; set; }
            public decimal? TotalBookingVolume { get; set; }
            public string PO_NO { get; set; }
            public byte? SupplierGroupID { get; set; }
            public bool? VeterinaryInspectionRequired { get; set; }
            public bool? VeterinaryInspectionCheck { get; set; }
            public string CreatedBy { get; set; }
            public DateTime CreatedTime { get; set; }
            public DateTime? StartWorkingTime { get; set; }
            public DateTime? EndWorkingTime { get; set; }
            public Guid? TruckInOutID { get; set; }
            public DateTime? FromTime { get; set; }
            public DateTime? ToTime { get; set; }
            public string ConfirmedBy { get; set; }
            public string TruckNumber { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? DispatchedActualVolume { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualPallet { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public string SupplierGroupName { get; set; }
            public Single? TruckTemperature { get; set; }
            public double? PODamage { get; set; }
            public string BasketMovementNumber { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
        public class ResultSetModel3
        {
            public int SupplierID { get; set; }
            public string SupplierName { get; set; }
            public string SupplierNameShort { get; set; }
            public int PurchasingOrderID { get; set; }
            public string PurchasingOrderNumber { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
            public string PurchasingOrderRemark { get; set; }
            public byte? Status { get; set; }
            public int? CustomerID { get; set; }
            public string SupplierNumber { get; set; }
            public int? TotalBookingCarton { get; set; }
            public decimal? TotalBookingWeight { get; set; }
            public decimal? TotalBookingVolume { get; set; }
            public string PO_NO { get; set; }
            public byte? SupplierGroupID { get; set; }
            public bool? VeterinaryInspectionRequired { get; set; }
            public bool? VeterinaryInspectionCheck { get; set; }
            public string CreatedBy { get; set; }
            public DateTime CreatedTime { get; set; }
            public DateTime? StartWorkingTime { get; set; }
            public DateTime? EndWorkingTime { get; set; }
            public Guid? TruckInOutID { get; set; }
            public DateTime? FromTime { get; set; }
            public DateTime? ToTime { get; set; }
            public string ConfirmedBy { get; set; }
            public string TruckNumber { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? DispatchedActualVolume { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualPallet { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public string SupplierGroupName { get; set; }
            public Single? TruckTemperature { get; set; }
            public double? PODamage { get; set; }
        }
        public List<ResultSetModel3> ResultSet3;
        public class ResultSetModel4
        {
            public int SupplierID { get; set; }
            public string SupplierName { get; set; }
            public string SupplierNameShort { get; set; }
            public int PurchasingOrderID { get; set; }
            public string PurchasingOrderNumber { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
            public string PurchasingOrderRemark { get; set; }
            public byte? Status { get; set; }
            public int? CustomerID { get; set; }
            public string SupplierNumber { get; set; }
            public int? TotalBookingCarton { get; set; }
            public decimal? TotalBookingWeight { get; set; }
            public decimal? TotalBookingVolume { get; set; }
            public string PO_NO { get; set; }
            public byte? SupplierGroupID { get; set; }
            public bool? VeterinaryInspectionRequired { get; set; }
            public bool? VeterinaryInspectionCheck { get; set; }
            public string CreatedBy { get; set; }
            public DateTime CreatedTime { get; set; }
            public DateTime? StartWorkingTime { get; set; }
            public DateTime? EndWorkingTime { get; set; }
            public Guid? TruckInOutID { get; set; }
            public DateTime? FromTime { get; set; }
            public DateTime? ToTime { get; set; }
            public string ConfirmedBy { get; set; }
            public string TruckNumber { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? DispatchedActualVolume { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualPallet { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public string SupplierGroupName { get; set; }
            public Single? TruckTemperature { get; set; }
            public double? PODamage { get; set; }
            public string BasketMovementNumber { get; set; }
        }
        public List<ResultSetModel4> ResultSet4;
        public class ResultSetModel5
        {
            public int SupplierID { get; set; }
            public string SupplierName { get; set; }
            public string SupplierNameShort { get; set; }
            public int PurchasingOrderID { get; set; }
            public string PurchasingOrderNumber { get; set; }
            public DateTime PurchasingOrderDate { get; set; }
            public string PurchasingOrderRemark { get; set; }
            public byte? Status { get; set; }
            public int? CustomerID { get; set; }
            public string SupplierNumber { get; set; }
            public int? TotalBookingCarton { get; set; }
            public decimal? TotalBookingWeight { get; set; }
            public decimal? TotalBookingVolume { get; set; }
            public string PO_NO { get; set; }
            public byte? SupplierGroupID { get; set; }
            public bool? VeterinaryInspectionRequired { get; set; }
            public bool? VeterinaryInspectionCheck { get; set; }
            public string CreatedBy { get; set; }
            public DateTime CreatedTime { get; set; }
            public DateTime? StartWorkingTime { get; set; }
            public DateTime? EndWorkingTime { get; set; }
            public Guid? TruckInOutID { get; set; }
            public DateTime? FromTime { get; set; }
            public DateTime? ToTime { get; set; }
            public string ConfirmedBy { get; set; }
            public string TruckNumber { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? DispatchedActualVolume { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualPallet { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public string SupplierGroupName { get; set; }
            public byte? OperationCategoryID { get; set; }
            public Single? TruckTemperature { get; set; }
            public double? PODamage { get; set; }
        }
        public List<ResultSetModel5> ResultSet5;
    }

    public class StPurchasingOrderProductBigCReturnModel
    {
        public int SalesOrderProductID { get; set; }
        public int ProductID { get; set; }
        public string ProductName { get; set; }
        public string ProductNumber { get; set; }
        public double? ProductTemperature { get; set; }
        public int? TemperatureDeviation { get; set; }
        public decimal UnitWeight { get; set; }
        public int? ReceivedActualCarton { get; set; }
        public int? DispatchedActualCarton { get; set; }
        public decimal? DispatchedActualWeight { get; set; }
        public decimal? ReceivedActualWeight { get; set; }
        public int PurchasingOrderID { get; set; }
        public int SalesOrderID { get; set; }
        public int? DispatchedActualBasket1 { get; set; }
        public int? DispatchedActualBasket2 { get; set; }
        public int? DispatchedActualBasket3 { get; set; }
        public int? DispatchedActualBasket4 { get; set; }
        public int? DispatchedActualBasket5 { get; set; }
        public int PurchasingOrderProductID { get; set; }
        public int? StoreBookingCarton { get; set; }
        public decimal? StoreBookingWeight { get; set; }
    }

    public class StPurchasingOrderProductsReturnModel
    {
        public int PurchasingOrderProductID { get; set; }
        public int PurchasingOrderID { get; set; }
        public int ProductID { get; set; }
        public string ProductName { get; set; }
        public string ProductNumber { get; set; }
        public int? ReceivedActualCarton { get; set; }
        public decimal? ReceivedActualWeight { get; set; }
        public decimal? ReceivedActualVolume { get; set; }
        public byte? Status { get; set; }
        public string PurchasingOrderProductRemark { get; set; }
        public decimal? CartonWeight { get; set; }
        public decimal? NetPerCarton { get; set; }
        public decimal? GrossPerCarton { get; set; }
        public Single? TruckTemperature { get; set; }
    }

    public class StqaPurchasingOrderProductsReturnModel
    {
        public string ProductName { get; set; }
        public string ProductNumber { get; set; }
        public int PurchasingOrderID { get; set; }
        public int? ReceivedActualCarton { get; set; }
        public string PurchasingOrderProductRemark { get; set; }
        public double? PODetailDamage { get; set; }
        public double? QtyQA { get; set; }
        public double? QtyQADamageVH { get; set; }
        public double? QtyQADamageH { get; set; }
        public double? QtyQADamageL { get; set; }
        public string Unit { get; set; }
        public double? PODetailDamageError { get; set; }
        public decimal? ReceivedActualGrossWeight { get; set; }
        public decimal? Expr1 { get; set; }
        public string QABy { get; set; }
        public double? PackageWeight { get; set; }
        public int PurchasingOrderProductID { get; set; }
        public int? ReceivedBookingCarton { get; set; }
        public decimal? ReceivedBookingWeight { get; set; }
        public decimal? ReceivedActualWeight { get; set; }
    }

    public class StqaPurchasingOrdersReturnModel
    {
        public int PurchasingOrderID { get; set; }
        public string PurchasingOrderNumber { get; set; }
        public DateTime PurchasingOrderDate { get; set; }
        public int SupplierID { get; set; }
        public DateTime CreatedTime { get; set; }
        public string CreatedBy { get; set; }
        public string PurchasingOrderRemark { get; set; }
        public byte? Status { get; set; }
        public int? CustomerID { get; set; }
        public string PO_NO { get; set; }
        public bool? VeterinaryInspectionCheck { get; set; }
        public string TruckNumber { get; set; }
        public string TruckType { get; set; }
        public DateTime? StartWorkingTime { get; set; }
        public DateTime? EndWorkingTime { get; set; }
        public Single? ProductTemperature { get; set; }
        public Single? TruckTemperature { get; set; }
        public byte? ReceivingOrdinalNumber { get; set; }
        public string ConfirmedBy { get; set; }
        public DateTime? TruckArrivalTime { get; set; }
        public string DriverName { get; set; }
        public double? PODamage { get; set; }
        public DateTime? UpdateTime { get; set; }
        public Guid? TruckInOutID { get; set; }
    }

    public class StReportAllBmBigCReturnModel
    {
        public DateTime BasketMovementDate { get; set; }
        public DateTime? BasketReceivedDate { get; set; }
        public string BasketMovementNumber { get; set; }
        public string CreatedBy { get; set; }
        public DateTime? CreatedTime { get; set; }
        public string BasketMovementRemark { get; set; }
        public string FromWhere { get; set; }
        public string ToWhere { get; set; }
        public int CustomerID { get; set; }
        public string TruckNumber { get; set; }
        public string TruckDriverName { get; set; }
        public Single? TruckTemp { get; set; }
        public DateTime? StartTime { get; set; }
        public DateTime? EndTime { get; set; }
        public bool Confirmed { get; set; }
        public string WorkerName { get; set; }
        public string BasketMovementType { get; set; }
        public string UpdatedBy { get; set; }
        public string FromStoreName { get; set; }
        public string ToStoreName { get; set; }
        public int? SBH13 { get; set; }
        public int? SBH13_Actual { get; set; }
        public int? SBH25 { get; set; }
        public int? SBH25_Actual { get; set; }
        public int? LBH13 { get; set; }
        public int? LBH13_Actual { get; set; }
        public int? LBH25 { get; set; }
        public int? LBH25_Actual { get; set; }
        public int? LBH40 { get; set; }
        public int? LBH40_Actual { get; set; }
        public int? OBH25 { get; set; }
        public int? OBH25_Actual { get; set; }
        public int? EBH19 { get; set; }
        public int? EBH19_Actual { get; set; }
        public int? EBH31 { get; set; }
        public int? EBH31_Actual { get; set; }
        public bool? IsReturn { get; set; }
    }

    public class StSalesOrderBreakReturnModel
    {
        public int? NewSalesOrderID { get; set; }
    }

    public class StSalesOrderDailyReturnModel
    {
        public class ResultSetModel1
        {
            public int SalesOrderID { get; set; }
            public string SalesOrderNumber { get; set; }
            public DateTime? SalesOrderDate { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public byte? OperationCategoryID { get; set; }
            public int? CustomerID { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? DispatchedActualVolume { get; set; }
            public string TruckNumber { get; set; }
            public string DriverName { get; set; }
            public string SO_NO { get; set; }
            public string SalesOrderRemark { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public int? StoreBookingCarton { get; set; }
            public decimal? StoreBookingWeight { get; set; }
            public decimal? StoreBookingVolume { get; set; }
            public string CreatedBy { get; set; }
            public DateTime CreatedTime { get; set; }
            public bool? SalesOrderConfirmed { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualBasket3 { get; set; }
            public int? DispatchedActualBasket4 { get; set; }
            public int? DispatchedActualBasket5 { get; set; }
            public int? DispatchedActualPallet { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public int SalesOrderID { get; set; }
            public string SalesOrderNumber { get; set; }
            public DateTime? SalesOrderDate { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public byte? OperationCategoryID { get; set; }
            public int? CustomerID { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? DispatchedActualVolume { get; set; }
            public string TruckNumber { get; set; }
            public string DriverName { get; set; }
            public string SO_NO { get; set; }
            public string SalesOrderRemark { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public int? StoreBookingCarton { get; set; }
            public decimal? StoreBookingWeight { get; set; }
            public decimal? StoreBookingVolume { get; set; }
            public string CreatedBy { get; set; }
            public DateTime CreatedTime { get; set; }
            public bool? SalesOrderConfirmed { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualBasket3 { get; set; }
            public int? DispatchedActualBasket4 { get; set; }
            public int? DispatchedActualBasket5 { get; set; }
            public int? DispatchedActualPallet { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
        public class ResultSetModel3
        {
            public int SalesOrderID { get; set; }
            public string SalesOrderNumber { get; set; }
            public DateTime? SalesOrderDate { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public byte? OperationCategoryID { get; set; }
            public int? CustomerID { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? DispatchedActualVolume { get; set; }
            public string TruckNumber { get; set; }
            public string DriverName { get; set; }
            public string SO_NO { get; set; }
            public string SalesOrderRemark { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public int? StoreBookingCarton { get; set; }
            public decimal? StoreBookingWeight { get; set; }
            public decimal? StoreBookingVolume { get; set; }
            public string CreatedBy { get; set; }
            public DateTime CreatedTime { get; set; }
            public bool? SalesOrderConfirmed { get; set; }
            public int? DispatchedActualBasket1 { get; set; }
            public int? DispatchedActualBasket2 { get; set; }
            public int? DispatchedActualBasket3 { get; set; }
            public int? DispatchedActualBasket4 { get; set; }
            public int? DispatchedActualBasket5 { get; set; }
            public int? DispatchedActualPallet { get; set; }
        }
        public List<ResultSetModel3> ResultSet3;
    }

    public class StSalesOrderNoteByProductReturnModel
    {
        public class ResultSetModel1
        {
            public string RouteDescription { get; set; }
            public int SalesOrderID { get; set; }
            public string SalesOrderNumber { get; set; }
            public DateTime? SalesOrderDate { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public byte? OperationCategoryID { get; set; }
            public int? CustomerID { get; set; }
            public int? ActualCarton { get; set; }
            public decimal? ActualWeight { get; set; }
            public decimal? ActualVolume { get; set; }
            public string TruckNumber { get; set; }
            public string DriverName { get; set; }
            public string SO_NO { get; set; }
            public string SalesOrderRemark { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public int? StoreBookingCarton { get; set; }
            public decimal? StoreBookingWeight { get; set; }
            public decimal? StoreBookingVolume { get; set; }
            public string CreatedBy { get; set; }
            public DateTime CreatedTime { get; set; }
            public bool? SalesOrderConfirmed { get; set; }
            public int? Basket1 { get; set; }
            public int? Basket2 { get; set; }
            public int? Basket3 { get; set; }
            public int? Basket4 { get; set; }
            public int? Basket5 { get; set; }
            public int? Basket6 { get; set; }
            public int? Trolley { get; set; }
            public string SO_NO1 { get; set; }
            public int? Pallet { get; set; }
            public DateTime? TripDate { get; set; }
            public string TransporterName { get; set; }
            public int? TripID { get; set; }
            public string TripRemark { get; set; }
            public string TripSealNumber { get; set; }
            public string TripTruckNumber { get; set; }
            public DateTime? TruckStartTime { get; set; }
            public string OrderNumber { get; set; }
            public string StoreContactPhone { get; set; }
            public int? StoreOrdinalNumber { get; set; }
            public string StoreAddress { get; set; }
            public string SupplierNumber { get; set; }
            public string SupplierName { get; set; }
            public string StoreContact { get; set; }
            public string SupplierCategoryName { get; set; }
            public string PO_NO { get; set; }
            public string SalesOrderProductRemark { get; set; }
            public string ProductNumber { get; set; }
            public string ProductName { get; set; }
            public decimal? GrossWeight { get; set; }
            public string SupplierNameShort { get; set; }
            public string StoreNameShort { get; set; }
            public string BasketMovementNumber { get; set; }
            public double? PackageWeight { get; set; }
            public string Transport { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public string RouteDescription { get; set; }
            public int SalesOrderID { get; set; }
            public string SalesOrderNumber { get; set; }
            public DateTime? SalesOrderDate { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public byte? OperationCategoryID { get; set; }
            public int? CustomerID { get; set; }
            public int? ActualCarton { get; set; }
            public decimal? ActualWeight { get; set; }
            public decimal? ActualVolume { get; set; }
            public string TruckNumber { get; set; }
            public string DriverName { get; set; }
            public string SO_NO { get; set; }
            public string SalesOrderRemark { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public int? StoreBookingCarton { get; set; }
            public decimal? StoreBookingWeight { get; set; }
            public decimal? StoreBookingVolume { get; set; }
            public string CreatedBy { get; set; }
            public DateTime CreatedTime { get; set; }
            public bool? SalesOrderConfirmed { get; set; }
            public int? Basket1 { get; set; }
            public int? Basket2 { get; set; }
            public int? Basket3 { get; set; }
            public int? Basket4 { get; set; }
            public int? Basket5 { get; set; }
            public int? Basket6 { get; set; }
            public int? Trolley { get; set; }
            public string SO_NO1 { get; set; }
            public int? Pallet { get; set; }
            public DateTime? TripDate { get; set; }
            public string TransporterName { get; set; }
            public int? TripID { get; set; }
            public string TripRemark { get; set; }
            public string TripSealNumber { get; set; }
            public string TripTruckNumber { get; set; }
            public DateTime? TruckStartTime { get; set; }
            public string OrderNumber { get; set; }
            public string StoreContactPhone { get; set; }
            public int? StoreOrdinalNumber { get; set; }
            public string StoreAddress { get; set; }
            public string SupplierNumber { get; set; }
            public string SupplierName { get; set; }
            public string StoreContact { get; set; }
            public string SupplierCategoryName { get; set; }
            public string PO_NO { get; set; }
            public string SalesOrderProductRemark { get; set; }
            public string ProductNumber { get; set; }
            public string ProductName { get; set; }
            public string Unit { get; set; }
            public decimal? GrossWeight { get; set; }
            public string SupplierNameShort { get; set; }
            public string StoreNameShort { get; set; }
            public string BasketMovementNumber { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
        public class ResultSetModel3
        {
            public string RouteDescription { get; set; }
            public int SalesOrderID { get; set; }
            public string SalesOrderNumber { get; set; }
            public DateTime? SalesOrderDate { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public byte? OperationCategoryID { get; set; }
            public int? CustomerID { get; set; }
            public int? ActualCarton { get; set; }
            public decimal? ActualWeight { get; set; }
            public decimal? ActualVolume { get; set; }
            public string TruckNumber { get; set; }
            public string DriverName { get; set; }
            public string SO_NO { get; set; }
            public string SalesOrderRemark { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public int? StoreBookingCarton { get; set; }
            public decimal? StoreBookingWeight { get; set; }
            public decimal? StoreBookingVolume { get; set; }
            public string CreatedBy { get; set; }
            public DateTime CreatedTime { get; set; }
            public bool? SalesOrderConfirmed { get; set; }
            public int? Basket1 { get; set; }
            public int? Basket2 { get; set; }
            public int? Basket3 { get; set; }
            public int? Basket4 { get; set; }
            public int? Basket5 { get; set; }
            public int? Basket6 { get; set; }
            public int? Trolley { get; set; }
            public string SO_NO1 { get; set; }
            public int? Pallet { get; set; }
            public DateTime? TripDate { get; set; }
            public string TransporterName { get; set; }
            public int? TripID { get; set; }
            public string TripRemark { get; set; }
            public string TripSealNumber { get; set; }
            public string TripTruckNumber { get; set; }
            public DateTime? TruckStartTime { get; set; }
            public string OrderNumber { get; set; }
            public string StoreContactPhone { get; set; }
            public int? StoreOrdinalNumber { get; set; }
            public string StoreAddress { get; set; }
            public string SupplierNumber { get; set; }
            public string SupplierName { get; set; }
            public string StoreContact { get; set; }
            public string SupplierCategoryName { get; set; }
            public string PO_NO { get; set; }
            public string SalesOrderProductRemark { get; set; }
            public string ProductNumber { get; set; }
            public string ProductName { get; set; }
            public string Unit { get; set; }
            public decimal? GrossWeight { get; set; }
            public string SupplierNameShort { get; set; }
            public string StoreNameShort { get; set; }
            public string BasketMovementNumber { get; set; }
            public double? PODetailDamage { get; set; }
        }
        public List<ResultSetModel3> ResultSet3;
    }

    public class StSalesOrderNoteReturnModel
    {
        public string SOID_Barcode { get; set; }
        public string RouteDescription { get; set; }
        public int SalesOrderID { get; set; }
        public string SalesOrderNumber { get; set; }
        public DateTime? SalesOrderDate { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public byte? OperationCategoryID { get; set; }
        public int? CustomerID { get; set; }
        public int? ActualCarton { get; set; }
        public decimal? ActualWeight { get; set; }
        public decimal? ReceivedWeight { get; set; }
        public decimal? ActualVolume { get; set; }
        public string TruckNumber { get; set; }
        public string DriverName { get; set; }
        public string SO_NO { get; set; }
        public string SalesOrderRemark { get; set; }
        public string SupplierCategoryNameShort { get; set; }
        public int? StoreBookingCarton { get; set; }
        public decimal? StoreBookingWeight { get; set; }
        public decimal? StoreBookingVolume { get; set; }
        public string CreatedBy { get; set; }
        public DateTime CreatedTime { get; set; }
        public bool? SalesOrderConfirmed { get; set; }
        public int? Basket1 { get; set; }
        public int? Basket2 { get; set; }
        public int? Basket3 { get; set; }
        public int? Basket4 { get; set; }
        public int? Basket5 { get; set; }
        public int? Basket6 { get; set; }
        public int? Box { get; set; }
        public int? Nylon { get; set; }
        public int? Trolley { get; set; }
        public int? Pallet { get; set; }
        public DateTime? TripDate { get; set; }
        public string TransporterName { get; set; }
        public int? TripID { get; set; }
        public string TripRemark { get; set; }
        public string TripSealNumber { get; set; }
        public string TripTruckNumber { get; set; }
        public DateTime? TruckStartTime { get; set; }
        public string OrderNumber { get; set; }
        public string StoreContactPhone { get; set; }
        public int? StoreOrdinalNumber { get; set; }
        public string StoreAddress { get; set; }
        public string SupplierNumber { get; set; }
        public string SupplierName { get; set; }
        public string StoreContact { get; set; }
        public string SupplierCategoryName { get; set; }
        public string PO_NO { get; set; }
        public string SalesOrderProductRemark { get; set; }
        public string PurchasingOrderProductRemark { get; set; }
        public double? PODetailDamage { get; set; }
        public string ProductName { get; set; }
        public string ProductNumber { get; set; }
        public string Unit { get; set; }
    }

    public class StSalesOrderProductBigCReturnModel
    {
        public class ResultSetModel1
        {
            public int? SalesOrderID { get; set; }
            public int? StoreID { get; set; }
            public int? PurchasingOrderID { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public DateTime? SalesOrderDate { get; set; }
            public string SalesOrderNumber { get; set; }
            public int? TotalBookingCarton { get; set; }
            public decimal? TotalBookingWeight { get; set; }
            public int? ToatlActualCarton { get; set; }
            public decimal? ToatlActualWeight { get; set; }
            public int? TotalBasket1 { get; set; }
            public int? TotalBasket2 { get; set; }
            public int? TotalBasket3 { get; set; }
            public int? TotalBasket4 { get; set; }
            public int? TotalBasket5 { get; set; }
            public int? TotalBasket6 { get; set; }
            public int? Box { get; set; }
            public int? Trolley { get; set; }
            public string DOMAIN { get; set; }
            public string Status { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public int SalesOrderID { get; set; }
            public int StoreID { get; set; }
            public int? PurchasingOrderID { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public DateTime? SalesOrderDate { get; set; }
            public string SalesOrderNumber { get; set; }
            public int? TotalBookingCarton { get; set; }
            public decimal? TotalBookingWeight { get; set; }
            public int? ToatlActualCarton { get; set; }
            public decimal? ToatlActualWeight { get; set; }
            public int? TotalBasket1 { get; set; }
            public int? TotalBasket2 { get; set; }
            public int? TotalBasket3 { get; set; }
            public int? TotalBasket4 { get; set; }
            public int? TotalBasket5 { get; set; }
            public int? TotalBasket6 { get; set; }
            public int? Box { get; set; }
            public int? Trolley { get; set; }
            public string DOMAIN { get; set; }
            public string Status { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
        public class ResultSetModel3
        {
            public int SalesOrderID { get; set; }
            public int StoreID { get; set; }
            public int PurchasingOrderID { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public DateTime? SalesOrderDate { get; set; }
            public string SalesOrderNumber { get; set; }
            public int? TotalBookingCarton { get; set; }
            public decimal? TotalBookingWeight { get; set; }
            public int? ToatlActualCarton { get; set; }
            public decimal? ToatlActualWeight { get; set; }
            public string Domain { get; set; }
            public int? TripID { get; set; }
            public string TripRemark { get; set; }
        }
        public List<ResultSetModel3> ResultSet3;
    }

    public class StSalesOrderProductsReturnModel
    {
        public int SalesOrderProductID { get; set; }
        public int SalesOrderID { get; set; }
        public string SalesOrderProductRemark { get; set; }
        public int ProductID { get; set; }
        public DateTime CreatedTime { get; set; }
        public string CreatedBy { get; set; }
        public byte? Status { get; set; }
        public int PurchasingOrderProductID { get; set; }
        public int? DispatchedActualCarton { get; set; }
        public decimal? DispatchedActualWeight { get; set; }
        public decimal? DispatchedActualVolume { get; set; }
        public int? StoreBookingCarton { get; set; }
        public decimal? StoreBookingWeight { get; set; }
        public decimal? StoreBookingVolume { get; set; }
        public int? DispatchedActualBasket1 { get; set; }
        public int? DispatchedActualBasket2 { get; set; }
        public int? DispatchedActualPallet { get; set; }
        public decimal? DispatchedGrossWeight { get; set; }
        public decimal? DispatchedGrossWeightScale { get; set; }
        public decimal? PackagingWeight { get; set; }
        public string SO_NO { get; set; }
        public Single? Lining { get; set; }
        public bool? BreakCheck { get; set; }
        public byte[] ts { get; set; }
        public decimal? DamageWeightPercent { get; set; }
        public bool? SOPQuarantine { get; set; }
        public int? DispatchedActualBasket3 { get; set; }
        public int? DispatchedActualBasket4 { get; set; }
        public int? DispatchedActualBasket5 { get; set; }
        public int? DispatchedActualBasket6 { get; set; }
        public int? Trolley { get; set; }
        public int? BasketID { get; set; }
        public int? BasketQuantity { get; set; }
        public double? NaturalLossRateSO { get; set; }
        public string PO_NO { get; set; }
        public string PO_NOLine { get; set; }
        public string LV { get; set; }
        public string LU { get; set; }
        public string COMM { get; set; }
        public string UpdatedBy { get; set; }
        public string SupplierNumber { get; set; }
        public string SupplierName { get; set; }
        public string SupplierNameShort { get; set; }
        public string SupplierCategoryNameShort { get; set; }
        public string Expr1 { get; set; }
        public string ProductName { get; set; }
        public string ProductNumber { get; set; }
        public byte? SupplierGroupID { get; set; }
    }

    public class StSalesOrdersReturnModel
    {
        public int SalesOrderID { get; set; }
        public string SalesOrderNumber { get; set; }
        public DateTime? SalesOrderDate { get; set; }
        public int StoreID { get; set; }
        public string CreatedBy { get; set; }
        public DateTime CreatedTime { get; set; }
        public string SalesOrderRemark { get; set; }
        public int? CustomerID { get; set; }
        public byte? OperationCategoryID { get; set; }
        public string SO_NO { get; set; }
        public string TruckNumber { get; set; }
        public string DriverName { get; set; }
        public bool? SalesOrderConfirmed { get; set; }
        public byte SupplierGroupID { get; set; }
        public int? SalesOrderDept { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public string SupplierCategoryName { get; set; }
    }

    public class StSelectBmFromSoReturnModel
    {
        public int SalesOrderID { get; set; }
        public string BasketMovementNumber { get; set; }
        public DateTime BasketMovementDate { get; set; }
        public int BasketID { get; set; }
        public string BasketNumber { get; set; }
        public string BasketName { get; set; }
        public int? Quantity { get; set; }
        public int? QuantityBad { get; set; }
        public int? QuantityConfirm { get; set; }
        public int? QuantityConfirmBad { get; set; }
        public DateTime? StartTime { get; set; }
        public string Remark { get; set; }
    }

    public class StTotalSeafoodSupplierPerStoreReturnModel
    {
        public DateTime PurchasingOrderDate { get; set; }
        public string StoreName { get; set; }
        public string SupplierName { get; set; }
        public int? Carton { get; set; }
        public int? Basket { get; set; }
    }

    public class StTotalWeightAllStoreBigCPlanTrucksReturnModel
    {
        public decimal? Totail { get; set; }
        public string TripNumber { get; set; }
        public DateTime TripDate { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public int? CustomerID { get; set; }
        public string SalesOrderRemark { get; set; }
    }

    public class StTripComboOrderNumbersReturnModel
    {
        public class ResultSetModel1
        {
            public int SalesOrderID { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? DispatchedActualVolume { get; set; }
            public string Category { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public int SalesOrderID { get; set; }
            public string StoreNumber { get; set; }
            public string StoreName { get; set; }
            public int? DispatchedActualCarton { get; set; }
            public decimal? DispatchedActualWeight { get; set; }
            public decimal? DispatchedActualVolume { get; set; }
            public string Category { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
    }

    public class StTripDeliveryPlanReturnModel
    {
        public string Trip_Barcode { get; set; }
        public string RouteDescription { get; set; }
        public string SupplierCategoryName { get; set; }
        public int SupplierID { get; set; }
        public string SupplierNumber { get; set; }
        public string SupplierName { get; set; }
        public string SupplierNameShort { get; set; }
        public string OrderNumber { get; set; }
        public int TripID { get; set; }
        public DateTime TripDate { get; set; }
        public string TransporterName { get; set; }
        public int? DispatchedActualCarton { get; set; }
        public decimal? DispatchedActualWeight { get; set; }
        public decimal? DispatchedActualVolume { get; set; }
        public int? DispatchedActualBasket1 { get; set; }
        public int? DispatchedActualBasket2 { get; set; }
        public int? DispatchedActualPallet { get; set; }
        public string TripRemark { get; set; }
        public string DriverName { get; set; }
        public string TripSealNumber { get; set; }
        public string TripTruckNumber { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public int? StoreOrdinalNumber { get; set; }
        public string SpecialRequirement { get; set; }
        public string SalesOrderProductRemark { get; set; }
        public string SalesOrderRemark { get; set; }
        public int? ActualCarton { get; set; }
        public decimal? ActualWeight { get; set; }
        public short? Pallets { get; set; }
        public decimal? ActualVolume { get; set; }
        public int? Basket1 { get; set; }
        public int? Basket2 { get; set; }
    }

    public class StTripPlanningByDateReturnModel
    {
        public class ResultSetModel1
        {
            public DateTime TripDate { get; set; }
            public int TripID { get; set; }
            public string TripNumber { get; set; }
            public string RouteDescription { get; set; }
            public int? ActualCarton { get; set; }
            public decimal? ActualWeight { get; set; }
            public decimal? ActualVolume { get; set; }
            public string TripRemark { get; set; }
            public byte? OperationCategoryID { get; set; }
            public string TripSealNumber { get; set; }
            public string TripTruckNumber { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public bool TripConfirmed { get; set; }
            public int? TotalDO { get; set; }
            public int? DOCarton { get; set; }
            public decimal? DOWeight { get; set; }
            public int? TotalSO { get; set; }
            public int? SOCarton { get; set; }
            public decimal? SOWeight { get; set; }
            public int? CustomerID { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public DateTime? TripDate { get; set; }
            public int? TripID { get; set; }
            public string TripNumber { get; set; }
            public string RouteDescription { get; set; }
            public int? ActualCarton { get; set; }
            public decimal? ActualWeight { get; set; }
            public decimal? ActualVolume { get; set; }
            public string TripRemark { get; set; }
            public byte? OperationCategoryID { get; set; }
            public string TripSealNumber { get; set; }
            public string TripTruckNumber { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public bool? TripConfirmed { get; set; }
            public int? TotalDO { get; set; }
            public int? DOCarton { get; set; }
            public decimal? DOWeight { get; set; }
            public int? TotalSO { get; set; }
            public int? SOCarton { get; set; }
            public decimal? SOWeight { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
        public class ResultSetModel3
        {
            public DateTime? TripDate { get; set; }
            public int? TripID { get; set; }
            public string TripNumber { get; set; }
            public string RouteDescription { get; set; }
            public int? ActualCarton { get; set; }
            public decimal? ActualWeight { get; set; }
            public decimal? ActualVolume { get; set; }
            public string TripRemark { get; set; }
            public byte? OperationCategoryID { get; set; }
            public string TripSealNumber { get; set; }
            public string TripTruckNumber { get; set; }
            public string SupplierCategoryNameShort { get; set; }
            public bool? TripConfirmed { get; set; }
            public int? TotalDO { get; set; }
            public int? DOCarton { get; set; }
            public decimal? DOWeight { get; set; }
            public int? TotalSO { get; set; }
            public int? SOCarton { get; set; }
            public decimal? SOWeight { get; set; }
        }
        public List<ResultSetModel3> ResultSet3;
    }

    public class StTripPlanningByDateSendEmailReturnModel
    {
        public class ResultSetModel1
        {
            public int TripID { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public int TripID { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
    }

    public class StTripPlanningDetailsReturnModel
    {
        public int TripID { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public int? StoreOrdinalNumber { get; set; }
        public int? ActualCarton { get; set; }
        public decimal? ActualWeight { get; set; }
        public string OrderNumber { get; set; }
        public decimal? ActualVolume { get; set; }
        public string TripDetailRemark { get; set; }
        public short? Pallets { get; set; }
        public byte? OperationCategoryID { get; set; }
        public string BasketMovementNumber { get; set; }
        public int? BK1 { get; set; }
        public int? BK2 { get; set; }
        public int? BK3 { get; set; }
        public int? BK4 { get; set; }
        public int? BK5 { get; set; }
        public int? BK6 { get; set; }
        public int? Trolley { get; set; }
    }

    public class StTripPlanningSearchReturnModel
    {
        public DateTime TripDate { get; set; }
        public int TripID { get; set; }
        public string TripNumber { get; set; }
        public string RouteDescription { get; set; }
        public int? ActualCarton { get; set; }
        public decimal? ActualWeight { get; set; }
        public decimal? ActualVolume { get; set; }
        public string TripRemark { get; set; }
        public byte? OperationCategoryID { get; set; }
        public string TripSealNumber { get; set; }
        public string TripTruckNumber { get; set; }
        public string SupplierCategoryNameShort { get; set; }
        public bool TripConfirmed { get; set; }
    }

    public class StTripSummaryNoteReturnModel
    {
        public string TripID_Barcode { get; set; }
        public int SalesOrderID { get; set; }
        public string SalesOrderNumber { get; set; }
        public DateTime? SalesOrderDate { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public int? ActualCarton { get; set; }
        public decimal? ActualWeight { get; set; }
        public decimal? ReceivedWeight { get; set; }
        public decimal? ActualVolume { get; set; }
        public string TruckNumber { get; set; }
        public string DriverName { get; set; }
        public string SO_NO { get; set; }
        public string SalesOrderRemark { get; set; }
        public string SupplierCategoryNameShort { get; set; }
        public int? StoreBookingCarton { get; set; }
        public decimal? StoreBookingWeight { get; set; }
        public decimal? StoreBookingVolume { get; set; }
        public int? Basket1 { get; set; }
        public int? Basket2 { get; set; }
        public int? Basket3 { get; set; }
        public int? Basket4 { get; set; }
        public int? Basket5 { get; set; }
        public int? Basket6 { get; set; }
        public int? Box { get; set; }
        public int? Nylon { get; set; }
        public int? Pallet { get; set; }
        public DateTime TripDate { get; set; }
        public Guid TripID { get; set; }
        public string TripNumber { get; set; }
        public string TripRemark { get; set; }
        public string SealNumber { get; set; }
        public string VehicleNumber { get; set; }
        public DateTime? StartWorkingTime { get; set; }
        public string OrderNumber { get; set; }
        public string StoreContactPhone { get; set; }
        public int? StoreOrdinalNumber { get; set; }
        public string StoreAddress { get; set; }
        public string SupplierNumber { get; set; }
        public string SupplierName { get; set; }
        public string StoreContact { get; set; }
        public string SupplierCategoryName { get; set; }
        public string PO_NO { get; set; }
        public string SalesOrderProductRemark { get; set; }
        public string PurchasingOrderProductRemark { get; set; }
        public double? PODetailDamage { get; set; }
        public string ProductName { get; set; }
        public string ProductNumber { get; set; }
        public string TransporterName { get; set; }
    }

    public class WebBasketMovementCrosstapReturnModel
    {
        public DateTime BasketMovementDate { get; set; }
        public DateTime? BasketReceivedDate { get; set; }
        public string BasketMovementNumber { get; set; }
        public string CreatedBy { get; set; }
        public DateTime? CreatedTime { get; set; }
        public string BasketMovementRemark { get; set; }
        public string FromWhere { get; set; }
        public string ToWhere { get; set; }
        public int CustomerID { get; set; }
        public string TruckNumber { get; set; }
        public string TruckDriverName { get; set; }
        public Single? TruckTemp { get; set; }
        public DateTime? StartTime { get; set; }
        public DateTime? EndTime { get; set; }
        public bool Confirmed { get; set; }
        public string WorkerName { get; set; }
        public string BasketMovementType { get; set; }
        public string UpdatedBy { get; set; }
        public string FromStoreName { get; set; }
        public string ToStoreName { get; set; }
        public int? SBH13 { get; set; }
        public int? SBH13_Actual { get; set; }
        public int? SBH25 { get; set; }
        public int? SBH25_Actual { get; set; }
        public int? LBH13 { get; set; }
        public int? LBH13_Actual { get; set; }
        public int? LBH25 { get; set; }
        public int? LBH25_Actual { get; set; }
        public int? LBH40 { get; set; }
        public int? LBH40_Actual { get; set; }
        public int? OBH25 { get; set; }
        public int? OBH25_Actual { get; set; }
        public int? EBH19 { get; set; }
        public int? EBH19_Actual { get; set; }
        public int? EBH31 { get; set; }
        public int? EBH31_Actual { get; set; }
        public bool? IsReturn { get; set; }
    }

    public class WebBasketMovementDetailsSelectReturnModel
    {
        public long BasketMovementID { get; set; }
        public string BasketNumber { get; set; }
        public string BasketName { get; set; }
        public string CreatedBy { get; set; }
        public DateTime? CreatedTime { get; set; }
        public int? Quantity { get; set; }
        public bool? Damaged { get; set; }
        public string Remark { get; set; }
        public string BasketMovementNumber { get; set; }
    }

    public class WebBasketMovementReturnModel
    {
        public string BasketMovementNumber { get; set; }
        public string CreatedBy { get; set; }
        public DateTime? CreatedTime { get; set; }
        public DateTime BasketMovementDate { get; set; }
        public string BasketMovementRemark { get; set; }
        public string From { get; set; }
        public string To { get; set; }
        public string TruckNumber { get; set; }
        public string TruckDriverName { get; set; }
        public Single? TruckTemp { get; set; }
        public string WorkerName { get; set; }
        public string BasketMovementType { get; set; }
    }

    public class WebBasketMovementSelectReturnModel
    {
        public class ResultSetModel1
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel1> ResultSet1;
        public class ResultSetModel2
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string Expr1 { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel2> ResultSet2;
        public class ResultSetModel3
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string Expr1 { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel3> ResultSet3;
        public class ResultSetModel4
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string Expr1 { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel4> ResultSet4;
        public class ResultSetModel5
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string Expr1 { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel5> ResultSet5;
        public class ResultSetModel6
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel6> ResultSet6;
        public class ResultSetModel7
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string Expr1 { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel7> ResultSet7;
        public class ResultSetModel8
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel8> ResultSet8;
        public class ResultSetModel9
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string Expr1 { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel9> ResultSet9;
        public class ResultSetModel10
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string Expr1 { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel10> ResultSet10;
        public class ResultSetModel11
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string Expr1 { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel11> ResultSet11;
        public class ResultSetModel12
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string Expr1 { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel12> ResultSet12;
        public class ResultSetModel13
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string Expr1 { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel13> ResultSet13;
        public class ResultSetModel14
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string Expr1 { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel14> ResultSet14;
        public class ResultSetModel15
        {
            public long BasketMovementID { get; set; }
            public string BasketMovementNumber { get; set; }
            public string CreatedBy { get; set; }
            public DateTime? CreatedTime { get; set; }
            public DateTime BasketMovementDate { get; set; }
            public string BasketMovementRemark { get; set; }
            public string FromWhere { get; set; }
            public string ToWhere { get; set; }
            public int CustomerID { get; set; }
            public string TruckNumber { get; set; }
            public string TruckDriverName { get; set; }
            public Single? TruckTemp { get; set; }
            public DateTime? StartTime { get; set; }
            public DateTime? EndTime { get; set; }
            public bool Confirmed { get; set; }
            public string WorkerName { get; set; }
            public string BasketMovementType { get; set; }
            public string Expr1 { get; set; }
            public string UpdatedBy { get; set; }
            public string FromStoreName { get; set; }
            public string ToStoreName { get; set; }
            public int? SBH13 { get; set; }
            public int? SBH13_D { get; set; }
            public int? SBH13_OutConfirm { get; set; }
            public int? SBH13_OutConfirm_D { get; set; }
            public int? SBH25 { get; set; }
            public int? SBH25_D { get; set; }
            public int? SBH25_OutConfirm { get; set; }
            public int? SBH25_OutConfirm_D { get; set; }
            public int? LBH13 { get; set; }
            public int? LBH13_D { get; set; }
            public int? LBH13_OutConfirm { get; set; }
            public int? LBH13_OutConfirm_D { get; set; }
            public int? LBH25 { get; set; }
            public int? LBH25_D { get; set; }
            public int? LBH25_OutConfirm { get; set; }
            public int? LBH25_OutConfirm_D { get; set; }
            public int? LBH40 { get; set; }
            public int? LBH40_D { get; set; }
            public int? LBH40_OutConfirm { get; set; }
            public int? LBH40_OutConfirm_D { get; set; }
            public int? OBH25 { get; set; }
            public int? OBH25_D { get; set; }
            public int? OBH25_OutConfirm { get; set; }
            public int? OBH25_OutConfirm_D { get; set; }
            public int? TROLLEY { get; set; }
            public int? TROLLEY_D { get; set; }
            public int? TROLLEY_OutConfirm { get; set; }
            public int? TROLLEY_OutConfirm_D { get; set; }
            public string StoreNumber { get; set; }
            public string ToStoreNumber { get; set; }
            public int? Quantity { get; set; }
            public int? QuantityConfirm { get; set; }
        }
        public List<ResultSetModel15> ResultSet15;
    }

    public class WebBasketMovementStockReportReturnModel
    {
        public string BasketName { get; set; }
        public int? TotalOutBefore { get; set; }
        public int? TotalInBefore { get; set; }
        public int? BeginQ { get; set; }
        public int? TotalOutBetween { get; set; }
        public int? TotalInBetween { get; set; }
        public int? CloseQ { get; set; }
        public DateTime? FromDate { get; set; }
        public DateTime? ToDate { get; set; }
        public string StoreName { get; set; }
    }

    public class WebBasketsListReturnModel
    {
        public int BasketID { get; set; }
        public string BasketNumber { get; set; }
        public string BasketName { get; set; }
        public string BasketNameVietnamese { get; set; }
    }

    public class WebBasketStockByBasketReportReturnModel
    {
        public DateTime? ReportDate { get; set; }
        public string BasketNameRef { get; set; }
        public int? BeginQ { get; set; }
        public int? InQ { get; set; }
        public int? OutQ { get; set; }
        public int? CloseQ { get; set; }
    }

    public class WebBasketStockNowReturnModel
    {
        public string BasketName { get; set; }
        public int? TotalIn { get; set; }
        public int? TotalOut { get; set; }
        public int? BasketStockClose { get; set; }
    }

    public class WebFtBmTotalInReturnModel
    {
        public string BasketName { get; set; }
        public int? TotalIn { get; set; }
    }

    public class WebFtBmTotalOutReturnModel
    {
        public string BasketName { get; set; }
        public int? TotalOut { get; set; }
    }

    public class WebFtGetBmWithNoneReceivingQuantityReturnModel
    {
        public long BasketMovementID { get; set; }
        public string BasketMovementNumber { get; set; }
        public string CreatedBy { get; set; }
        public DateTime? CreatedTime { get; set; }
        public DateTime BasketMovementDate { get; set; }
        public string BasketMovementRemark { get; set; }
        public string FromWhere { get; set; }
        public string ToWhere { get; set; }
        public string TruckNumber { get; set; }
        public string TruckDriverName { get; set; }
        public Single? TruckTemp { get; set; }
        public DateTime? StartTime { get; set; }
        public bool Confirmed { get; set; }
        public string UpdatedBy { get; set; }
        public bool BasketReceivedConfirmed { get; set; }
        public string BasketReceivedBy { get; set; }
        public DateTime? BasketReceivedConfirmedTime { get; set; }
        public string BasketMovementType { get; set; }
        public string FromName { get; set; }
        public string ToName { get; set; }
    }

    public class WebFtUnionDistinctStoreAndSupplierReturnModel
    {
        public int StoreID { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public string ToWhere { get; set; }
        public long? rn { get; set; }
    }

    public class WebFtUnionStoreAndSupplierReturnModel
    {
        public int StoreID { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public string ToWhere { get; set; }
    }

    public class WebGetBasketMovementByDayandStoreReturnModel
    {
        public long BasketMovementID { get; set; }
        public string BasketMovementNumber { get; set; }
        public DateTime BasketMovementDate { get; set; }
        public string TruckNumber { get; set; }
        public string TruckDriverName { get; set; }
        public bool Confirmed { get; set; }
        public string FromName { get; set; }
        public string ToName { get; set; }
        public bool BasketReceivedConfirmed { get; set; }
        public string BasketReceivedBy { get; set; }
        public DateTime? BasketReceivedConfirmedTime { get; set; }
        public string OrderNumber { get; set; }
        public string BasketMovementRemark { get; set; }
        public string BasketMovementType { get; set; }
        public string CreatedBy { get; set; }
        public DateTime? CreatedTime { get; set; }
    }

    public class WebGetPurchasingOrderProductByPoIdReturnModel
    {
        public string ProductName { get; set; }
        public string ProductNumber { get; set; }
        public int PurchasingOrderID { get; set; }
        public int? ReceivedActualCarton { get; set; }
        public decimal? ReceivedActualWeight { get; set; }
        public string PurchasingOrderProductRemark { get; set; }
        public double? PODetailDamage { get; set; }
        public double? QtyQA { get; set; }
        public double? QtyQADamageVH { get; set; }
        public double? QtyQADamageH { get; set; }
        public double? QtyQADamageL { get; set; }
        public int? ReceivedBookingCarton { get; set; }
        public decimal? ReceivedBookingWeight { get; set; }
        public string Unit { get; set; }
        public double? PODetailDamageError { get; set; }
        public int PurchasingOrderProductID { get; set; }
    }

    public class WebGetSaleOrderInfoByStoreAndDayReturnModel
    {
        public int SalesOrderID { get; set; }
        public string SalesOrderNumber { get; set; }
        public DateTime? SalesOrderDate { get; set; }
        public string SalesOrderRemark { get; set; }
        public string TruckNumber { get; set; }
        public bool? SalesOrderConfirmed { get; set; }
        public string DriverName { get; set; }
        public string CreatedBy { get; set; }
    }

    public class WebGetSalesOrderProductsbySoidReturnModel
    {
        public string ProductName { get; set; }
        public int SalesOrderProductID { get; set; }
        public int SalesOrderID { get; set; }
        public string SalesOrderProductRemark { get; set; }
        public byte? Status { get; set; }
        public int PurchasingOrderProductID { get; set; }
        public int? DispatchedActualCarton { get; set; }
        public decimal? DispatchedActualVolume { get; set; }
        public decimal? DispatchedActualWeight { get; set; }
        public decimal? DispatchedGrossWeight { get; set; }
        public int? StoreBookingCarton { get; set; }
        public decimal? StoreBookingWeight { get; set; }
        public decimal? StoreBookingVolume { get; set; }
    }

    public class WebGetStoreAndSupplierInfoReturnModel
    {
        public int StoreID { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public string ToWhere { get; set; }
    }

    public class WebGetStoreInfoByUserNameReturnModel
    {
        public int StoreID { get; set; }
        public string StoreName { get; set; }
        public string StoreNumber { get; set; }
    }

    public class WebGetSupplierAndPurchasingOrderReturnModel
    {
        public int SupplierID { get; set; }
        public string SupplierNumber { get; set; }
        public string SupplierName { get; set; }
        public string SupplierNameShort { get; set; }
        public int PurchasingOrderID { get; set; }
    }

    public class WebGetTrimStoresNameShortReturnModel
    {
        public string StoreNameShort { get; set; }
    }

    public class WebPurchasingOrderDetailsReturnModel
    {
        public int PurchasingOrderID { get; set; }
        public string ProductNumber { get; set; }
        public string ProductName { get; set; }
        public int? ReceivedActualCarton { get; set; }
        public decimal? ReceivedActualWeight { get; set; }
        public decimal? ReceivedActualGrossWeight { get; set; }
        public double? PODetailDamage { get; set; }
    }

    public class WebPurchasingOrderListReturnModel
    {
        public string SupplierNumber { get; set; }
        public string SupplierNameShort { get; set; }
        public decimal? BookingWeight { get; set; }
        public decimal? GrossWeight { get; set; }
        public decimal? ActualWeight { get; set; }
        public int? BasketQuantity { get; set; }
        public int PurchasingOrderID { get; set; }
        public string PurchasingOrderNumber { get; set; }
        public DateTime PurchasingOrderDate { get; set; }
        public string BasketMovementNumber { get; set; }
        public int? BasketQuantityReturn { get; set; }
    }

    public class WebPurchasingOrderViewReturnModel
    {
        public int PurchasingOrderID { get; set; }
        public string PurchasingOrderNumber { get; set; }
        public DateTime PurchasingOrderDate { get; set; }
        public string SupplierNumber { get; set; }
        public string SupplierNameShort { get; set; }
        public string PurchasingOrderRemark { get; set; }
        public string TruckNumber { get; set; }
        public DateTime? StartWorkingTime { get; set; }
        public DateTime? EndWorkingTime { get; set; }
        public Single? TruckTemperature { get; set; }
    }

    public class WebQaPurchasingOrderProductsReturnModel
    {
        public int PurchasingOrderID { get; set; }
        public int PurchasingOrderProductID { get; set; }
        public string PurchasingOrderProductNumber { get; set; }
        public string ProductNumber { get; set; }
        public string ProductName { get; set; }
        public decimal? PODetailDamage { get; set; }
        public decimal? PODetailDamageError { get; set; }
        public string PurchasingOrderProductRemark { get; set; }
        public string QABy { get; set; }
        public decimal? QtyQADamageVH { get; set; }
        public decimal? QtyQADamageH { get; set; }
        public decimal? QtyQADamageL { get; set; }
        public decimal? QtyQA { get; set; }
        public decimal? Qty { get; set; }
        public decimal? PODamage { get; set; }
        public DateTime? UpdateTime { get; set; }
        public string PurchasingOrderRemark { get; set; }
    }

    public class WebQaPurchasingOrdersReturnModel
    {
        public int PurchasingOrderID { get; set; }
        public string PurchasingOrderNumber { get; set; }
        public DateTime PurchasingOrderDate { get; set; }
        public string PurchasingOrderRemark { get; set; }
        public string SupplierNumber { get; set; }
        public string SupplierNameShort { get; set; }
        public DateTime? UpdateTime { get; set; }
        public double? PODamage { get; set; }
        public byte? Status { get; set; }
    }

    public class WebStoresReturnModel
    {
        public string StoreID { get; set; }
        public string StoreNumber { get; set; }
        public string StoreName { get; set; }
        public string Note { get; set; }
    }


    #endregion

}
// </auto-generated>
